{"version":3,"sources":["containers/System/Admin/ManageClinic.js","store/actions/actionTypes.js","axios.js","services/userService.js","containers/System/Admin/UserRedux.js","store/actions/userActions.js","store/actions/adminActions.js","containers/System/Admin/TableManageUser.js","containers/System/Admin/ManageSpecialty.js","containers/System/Admin/ManageHandbook.js","containers/HomePage/Doctor/DetailDoctor.js","utils/constant.js","containers/Plugins/SocialPlugins/LikeAndSharePlugin.js","store/reducers/appReducer.js","store/reducers/adminReducer.js","store/reducers/userReducer.js","store/reducers/rootReducer.js","redux.js","hoc/authentication.js","routes/Home.js","containers/Auth/login.js","containers/System/modalUser.js","containers/System/modalEditUser.js","containers/System/UserManage.js","components/Navigator.js","containers/Header/menuApp.js","containers/Header/Header.js","containers/System/Admin/ManageDoctor.js","routes/System.js","containers/System/Doctor/ManageSchedule.js","containers/System/RemedyModal.js","containers/System/Doctor/ManagePatient.js","routes/Doctor.js","containers/HomePage/Specialty/DetailSpecialty.js","containers/HomePage/Clinic/DetailClinic.js","containers/HomePage/section/handBookSection.js","containers/HomePage/Handbook/DetailHandbook.js","containers/HomePage/verifiedPage.js","components/ConfirmModal.js","containers/HomePage/section/specialtySection.js","containers/HomePage/section/clinicSection.js","containers/HomePage/section/outStandingDoctor.js","containers/HomePage/section/aboutSection.js","containers/HomePage/homePage.js","containers/App.js","serviceWorker.js","hoc/IntlProviderWrapper.js","index.js","utils/KeyCodeUtils.js","utils/LanguageUtils.js","utils/CommonUtils.js","containers/HomePage/homeHeader.js","containers/HomePage/homeFooter.js","containers/HomePage/section/DetailSection.js","containers/HomePage/Doctor/ProfileDoctor.js","containers/HomePage/Doctor/DoctorExtraInfo.js","containers/HomePage/Modal/BookingModal.js","containers/HomePage/Doctor/DoctorSchedule.js","store/actions/appActions.js","components/CustomToast.js","components/CustomScrollbars.js"],"names":["mdParser","MarkdownIt","ManageClinic","props","handleGetAllClinic","a","getAllClinic","clinics","data","errCode","setState","handleEditorChange","text","html","descriptionHTML","descriptionMarkdown","handleOnChangeInput","event","id","copyState","state","target","value","handleSave","action","response","crud_actions","CREATE","createClinic","EDIT","editClinic","toast","success","message","resetInput","error","handleEdit","clinic","name","introductionHTML","address","previewImg","Buffer","image","toString","previewBanner","banner","handleDelete","deleteClinic","handleCancel","this","element","files","CommonUtils","getBase64","base64","console","log","objectUrl","URL","createObjectURL","prevProps","className","style","tableLayout","length","map","item","index","height","onClick","htmlFor","onChange","class","for","type","hidden","handleUploadImg","backgroundImage","renderHTML","render","Component","connect","lang","app","language","dispatch","actionTypes","Object","freeze","APP_START_UP_COMPLETE","SET_CONTENT_OF_CONFIRM_MODAL","CHANGE_LANGUAGE","USER_LOGIN_FAIL","PROCESS_LOGOUT","FETCH_GENDER_START","FETCH_GENDER_SUCCESS","FETCH_GENDER_FAILED","FETCH_ROLE_START","FETCH_ROLE_SUCCESS","FETCH_ROLE_FAILED","FETCH_POSITION_START","FETCH_POSITION_SUCCESS","FETCH_POSITION_FAILED","SAVE_USER_SUCCESS","SAVE_USER_FAILED","EDIT_USER_SUCCESS","EDIT_USER_FAILED","FETCH_USER_SUCCESS","FETCH_USER_FAILED","DELETE_USER_SUCCESS","DELETE_USER_FAILED","FETCH_TOPDOCTOR_SUCCESS","FETCH_TOPDOCTOR_FAILED","FETCH_ALLDOCTOR_SUCCESS","FETCH_ALLDOCTOR_FAILED","SAVE_INFODOCTOR_SUCCESS","SAVE_INFODOCTOR_FAILED","FETCH_DETAILDOCTOR_SUCCESS","FETCH_DETAILDOCTOR_FAILED","FETCH_SCHEDULE_SUCCESS","FETCH_SCHEDULE_FAILED","SAVE_SCHEDULE_SUCCESS","SAVE_SCHEDULE_FAILED","FETCH_REQUIREDOCTORINFO_SUCCESS","FETCH_REQUIREDOCTORINFO_FAILED","FETCH_EXTRAINFODOCTOR_SUCCESS","FETCH_EXTRAINFODOCTOR_FAILED","CONFIRM_BOOKING_SUCCESS","CONFIRM_BOOKING_FAILED","ADD_USER_SUCCESS","USER_LOGIN_SUCCESS","instance","axios","create","baseURL","process","withCredentials","handleLoginAPI","username","password","post","email","getAllUser","userId","get","createUser","dataCreate","firstName","lastName","phone","gender","role","position","avatar","updateUser","dataUpdate","put","deleteUser","delete","getAllCode","getTopDoctor","getAllDoctor","SaveInfoDoctor","getDetailDoctor","doctorId","createSchedule","getDoctorSchedule","date","getExtraInfoDoctor","getProfileDoctor","confirmBooking","dataBooking","verifyEmail","dataVerify","createSpecialty","getAllSpecialty","editSpecialty","dataEdit","deleteSpecialty","dataDelete","getDetailSpecialty","specialtyId","getDetailClinic","clinicId","createHandbook","getAllHandbook","editHandbook","deleteHandbook","getDetailHandbook","getAllBooking","confirmRemedy","dataRemedy","UserRedux","user","imgBase64","inputDisable","phoneNumber","sex","roleID","positionID","arrGender","arrRole","arrPosition","isOpen","isValid","handleValidate","editUser","arrInput","i","warn","getGender","getRole","getPosition","dataGender","dataRole","dataPosition","dataUser","genders","roles","positions","Fragment","placeholder","onInput","handleOnChange","disabled","selected","keyMap","languages","VI","valueVi","valueEn","handlePreviewImg","handleSaveUser","bind","mainSrc","onCloseRequest","handleEditUser","admin","users","userLoginAccess","userInfo","userLoginFail","processLogout","fetchDetailDoctorStart","dataDoctor","fetchDetailDoctorSuccess","detailDoctor","fetchExtraInfoDoctorStart","dataExtra","fetchExtraInfoDoctorSuccess","extraInfoDoctor","fetchExtraInfoDoctorFailed","confirmBookingStart","confirmBookingSuccess","confirmBookingFailed","fetchGenderStart","dataCode","dataAllCode","fetchGenderSuccess","fetchGenderFailed","fetchRoleStart","fetchRoleSuccess","fetchRoleFailed","fetchPositionStart","fetchPositionSuccess","fetchPositionFailed","createNewUser","userData","saveUserSuccess","fetchUserStart","saveUserFailed","fetchUserSuccess","reverse","fetchUserFailed","DeleteUserStart","DeleteUserSuccess","DeleteUserFailed","EditUserStart","EditUserSuccess","fetchTopDoctorStart","fetchTopDoctorSuccess","doctors","fetchAllDoctorStart","fetchAllDoctorSuccess","fetchAllDoctorFailed","SaveInfoDoctorStart","infoDoctor","dataSave","SaveInfoDoctorSuccess","SaveInfoDoctorFailed","dataErr","fetchScheduleStart","fetchScheduleSuccess","createScheduleStart","dataSchedule","saveScheduleSuccess","saveScheduleFailed","fetchRequireDoctorStart","dataPrice","dataPayment","dataProvince","dataSpecialty","dataClinic","specialties","fetchRequireDoctorSuccess","prices","payments","provinces","fetchRequireDoctorFailed","dataRequire","TableManage","arrUser","getUser","ManageSpecialty","specialty","ManageHandbook","handleGetAllHandbook","handbooks","handleDateChange","release","Date","getTime","handbook","title","author","options","minDate","dateFormat","selectedDates","dateStr","require","config","DetailDoctor","getCurrentURL","currentURL","window","location","href","doctor","match","params","isShowBanner","positionData","EN","Markdown","description","appId","colorScheme","showFaces","share","backgroundColor","dataDetail","maxWidth","marginLeft","marginRight","path","HOME","HOMEPAGE","LOGIN","LOG_OUT","SYSTEM","DETAIL_DOCTOR","DOCTOR_SCHEDULE","DOCTOR_PATIENT","DETAIL_SPECIALTY","DETAIL_CLINIC","DETAIL_HANDBOOK","VERIFY_EMAIL","DELETE","ADMIN","DOCTOR","PATIENT","settings","dots","infinite","speed","slidesToShow","slidesToScroll","LikeAndSharePlugin","data-href","data-width","data-layout","data-action","data-size","data-share","initialState","started","systemMenuPath","contentOfConfirmModal","messageId","handleFunc","dataFunc","appReducer","topDoctors","allDoctor","allClinic","allSchedule","dataError","requireDoctorInfo","adminReducer","isLoggedIn","persistCommonConfig","storage","stateReconciler","autoMergeLevel2","userPersistConfig","key","whitelist","appPersistConfig","history","createBrowserHistory","basename","reduxStateSyncConfig","rootReducer","combineReducers","router","connectRouter","persistReducer","userReducer","middleware","routerMiddleware","thunkMiddleware","createStateSyncMiddleware","composeEnhancers","compose","reduxStore","createStore","applyMiddleware","persistor","persistStore","locationHelper","locationHelperBuilder","userIsAuthenticated","connectedRouterRedirect","authenticatedSelector","wrapperDisplayName","redirectPath","userIsNotAuthenticated","ownProps","getRedirectQueryParam","allowRedirectBack","Home","linkToRedirect","roleId","to","Login","handleOnchangeUsername","handleOnchangePassword","handleLogin","errorMessage","dataMess","handleHidePassword","isShowPassword","handleOnKeyDown","onKeyDown","color","actions","userinfo","ModalUser","handleOnchangeInput","handleCreateUser","errMessage","toggle","getAllUserById","alert","Modal","size","ModalHeader","ModalBody","method","ModalFooter","Button","ModalEditUser","handleSaveChange","currentUser","_","isEmpty","UserManage","arrUsers","handleModalUser","isShow","handleEditModalUser","isShowEditModal","doEditUser","res","allUser","handleDeleteUser","MenuGroup","children","Menu","active","link","hasSubMenu","onLinkClick","data-toggle","aria-expanded","SubMenu","getItemClass","pathname","MenuGroupWithRouter","withRouter","MenuWithRouter","SubMenuWithRouter","Navigator","expandedMenu","groupIndex","menuIndex","isMenuHasSubMenuActive","subMenus","currentPath","checkActiveMenu","menus","outerLoop","group","j","menu","prevState","isSubMenuOpen","subMenu","subMenuIndex","closeOtherExpand","withRouterInnerRef","WrappedComponent","InnerComponentWithRef","forwardRef","rest","ref","React","ComponentWithRef","withRef","adminMenu","doctorMenu","Header","menuApp","changeLanguageAppRedux","handleChangeLanguage","ManageDoctor","handleValidateInput","saveInfoDoctor","contentHTML","contentMarkdown","selectedOption","hasOldData","clinicName","nameClinic","addressClinic","price","selectedPrice","payment","selectedPayment","province","selectedProvince","selectedSpecialty","selectedClinic","note","handleChange","handleRequireInfoChange","handleInfoChange","convertInputData","result","push","label","allPrice","allPayment","allProvince","allSpecialty","getRequireDoctorInfo","arrDoctor","arrPrice","arrPayment","arrProvince","arrSpecialty","arrClinic","Doctor_Info","priceData","priceID","paymentData","paymentID","provinceData","provinceID","System","component","ManageSchedule","currentDate","handleChecked","schedule","isSelected","handleSaveSchedule","arrSelected","filter","select","objData","doctorID","timeType","getAllSchedule","arrSchedule","isChecked","RemedyModal","handleConfirm","handleOnChangeFile","imageBase64","patientId","patientEmail","patientName","isModalShow","centered","ManagePatient","dataDate","handleShowRemedyModal","patientData","patientID","bookingTimeData","genderData","Doctor","DetailSpecialty","detailSpecialty","DetailSection","ProfileDoctor","isShowSchedule","isShowDescription","isShowLocation","isShowMoreLink","DoctorSchedule","DoctorExtraInfo","DetailClinic","introduction","detailClinic","encodeBase64","src","HandBookSection","handleViewDetailHandbook","isShowHeader","backgroundSize","DetailHandbook","detailHandbook","moment","Number","format","VerifiedPage","isVerify","search","URLSearchParams","token","ConfirmModal","handlerKeyDown","which","keyCode","KeyCodeUtils","ENTER","acceptBtnRef","current","click","onAcceptBtnClick","onClose","setContentOfConfirmModal","createRef","document","addEventListener","removeEventListener","SpecialtySection","handleViewDetailSpecialty","ClinicSection","handleViewDetailClinic","OutStandingDoctorSection","handleViewDetailDoctor","arrTopDoctor","AboutSection","width","HomePage","App","handlePersistorState","getState","bootstrapped","onBeforeLift","Promise","resolve","then","catch","CustomScrollbars","exact","verifiedPage","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","Boolean","hostname","messages","LanguageUtils","getFlattenedMessages","IntlProviderWrapper","locale","defaultLocale","ReactDOM","store","getElementById","navigator","serviceWorker","ready","registration","unregister","e","UP","DOWN","TAB","E","ESCAPE","flattenMessages","nestedMessages","prefix","keys","reduce","prefixedKey","assign","messages_vi","messages_en","number","file","reject","reader","FileReader","readAsDataURL","onload","onerror","HomeHeader","languageData","alt","changeLanguageApp","changeLanguage","HomeFooter","dangerouslySetInnerHTML","__html","timeData","handleMorePrice","displayType","suffix","thousandSeparator","BookingModal","input","handleBirthChange","birth","profileDoctor","builDataTime","timeBuilded","dateBuilded","handleConfirmBooking","timeString","reason","rows","checked","getTimeData","allTime","daySelected","handleShowBookingModal","dataTimePass","allDay","charAt","toUpperCase","slice","startOf","valueOf","weeklySchedule","obj","weekday","add","dayInMonth","styles","control","provided","boxShadow","borderColor","fontWeight","singleValue","time","CustomToast","titleId","hour","minute","second","hour12","autoHeight","autoHeightMin","autoHeightMax","msg","getScrollLeft","getScrollTop","scrollToBottom","targetScrollTop","getScrollHeight","scrollTo","targetTop","quickScroll","scrollbars","originalTop","iteration","scroll","scrollTop","setTimeout","renderTrackHorizontal","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","renderNone","disableVerticalScroll","disableHorizontalScroll","otherProps","autoHide","autoHideTimeout","hideTracksWhenNotNeeded"],"mappings":"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","file":"static/js/main.c587c160.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../../store/actions';\r\nimport \"./ManageClinic.scss\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport Select from 'react-select';\r\nimport './ManageClinic.scss';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport { createClinic, editClinic, getAllClinic, deleteClinic } from '../../../services/userService';\r\nimport { Toast } from 'react-toastify';\r\nimport { crud_actions } from '../../../utils';\r\nimport { languages } from '../../../utils';\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\nclass ManageClinic extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clinics: [],\r\n\r\n            name: '',\r\n            address: '',\r\n            image: '',\r\n            banner: '',\r\n            introductionHTML: '',\r\n            descriptionMarkdown: '',\r\n            descriptionHTML: '',\r\n            previewImg: '',\r\n            previewBanner: '',\r\n            action: crud_actions.CREATE\r\n        }\r\n    }\r\n\r\n    resetInput() {\r\n        this.setState({\r\n            name: '',\r\n            address: '',\r\n            image: '',\r\n            banner: '',\r\n            introductionHTML: '',\r\n            descriptionMarkdown: '',\r\n            descriptionHTML: '',\r\n            previewImg: '',\r\n            previewBanner: '',\r\n            action: crud_actions.CREATE\r\n        })\r\n    }\r\n\r\n    handleGetAllClinic = async () => {\r\n        let clinics = await getAllClinic();\r\n        if (clinics && clinics.data.errCode === 0) {\r\n            this.setState({\r\n                clinics: clinics.data.clinics,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleEditorChange = ({ text, html }) => {\r\n        this.setState({\r\n            descriptionHTML: html,\r\n            descriptionMarkdown: text,\r\n        })\r\n    }\r\n\r\n    async handleUploadImg(element, id) {\r\n        let files = element.target.files[0];\r\n        if (files) {\r\n            let base64 = await CommonUtils.getBase64(files);\r\n            console.log(base64);\r\n            const objectUrl = URL.createObjectURL(files)\r\n            if (id === 'AVATAR') {\r\n                this.setState({\r\n                    image: base64,\r\n                    previewImg: objectUrl\r\n                })\r\n\r\n            }\r\n\r\n            if (id === 'BANNER') {\r\n                this.setState({\r\n                    banner: base64,\r\n                    previewBanner: objectUrl\r\n                })\r\n\r\n            }\r\n        }\r\n        // setPreview(objectUrl)\r\n    }\r\n\r\n    handleOnChangeInput = (event, id) => {\r\n        let copyState = this.state;\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n    }\r\n\r\n    handleSave = async () => {\r\n        let { action } = this.state;\r\n        let response = '';\r\n        if (action === crud_actions.CREATE) {\r\n            response = await createClinic(this.state);\r\n        }\r\n\r\n        if (action === crud_actions.EDIT) {\r\n            response = await editClinic(this.state);\r\n\r\n        }\r\n\r\n        if (response.data && response.data.errCode === 0) {\r\n            toast.success(response.data.message);\r\n            this.handleGetAllClinic();\r\n            this.resetInput();\r\n        } else {\r\n            toast.error(response.data.message);\r\n        }\r\n\r\n    }\r\n\r\n    handleEdit = (clinic) => {\r\n        if (clinic && clinic.id) {\r\n\r\n            this.setState({\r\n                action: crud_actions.EDIT,\r\n                id: clinic.id,\r\n                name: clinic.name,\r\n                descriptionMarkdown: clinic.descriptionMarkdown,\r\n                descriptionHTML: clinic.descriptionHTML,\r\n                introductionHTML: clinic.introductionHTML,\r\n                address: clinic.address,\r\n                previewImg: new Buffer(clinic.image, 'base64').toString('binary'),\r\n                previewBanner: new Buffer(clinic.banner, 'base64').toString('binary'),\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDelete = async (clinic) => {\r\n        if (clinic && clinic.id) {\r\n            let response = await deleteClinic(clinic.id);\r\n            if (response && response.data.errCode === 0) {\r\n                toast.success(response.data.message);\r\n                this.handleGetAllClinic();\r\n            } else {\r\n                toast.error(response.data.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.resetInput();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleGetAllClinic();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        // console.log(this.state);\r\n        let { clinics, descriptionMarkdown, descriptionHTML, name, image, address, introductionHTML, previewBanner, previewImg } = this.state;\r\n        console.log(clinics);\r\n        return (\r\n            <div className='manage-clinic__container' >\r\n                <h1 className='text-center' >Quản lí phòng khám</h1>\r\n                <div className='manage-clinic__table w-100 mb-4'>\r\n                    <table className='w-100' style={{ tableLayout: 'fixed' }} >\r\n                        <tr className='row-clinic' >\r\n                            <th>STT</th>\r\n                            <th>Tên phòng khám</th>\r\n                            <th>Lời giới thiệu</th>\r\n                            <th>Thông tin phòng khám</th>\r\n                            <th>Địa chỉ phòng khám</th>\r\n                            <th>Tùy chỉnh</th>\r\n                        </tr>\r\n\r\n\r\n                        {clinics && clinics.length > 0 && clinics.map((item, index) => {\r\n                            return (\r\n                                <tr key={index} className='row-clinic' style={{ height: \"20px\" }} >\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{item.name}</td>\r\n                                    <td>{item.introductionHTML}</td>\r\n                                    <td>{item.descriptionMarkdown}</td>\r\n                                    <td>{item.address}</td>\r\n                                    <td>\r\n                                        <button\r\n                                            className='btn-Edit me-5 w-25'\r\n                                            onClick={() => this.handleEdit(item)}\r\n                                        >Edit</button>\r\n                                        <button\r\n                                            className='btn-Delete w-25'\r\n                                            onClick={() => this.handleDelete(item)}\r\n                                        >Delete</button>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            );\r\n                        })}\r\n\r\n                    </table>\r\n                </div>\r\n                <div className='row' >\r\n                    <div className='col-6 manage-clinic__name  ' >\r\n                        <label htmlFor='name' className='manage-clinic__name--heading' >Tên phòng khám</label>\r\n                        <input\r\n                            id='name'\r\n                            className='manage-clinic__name--input'\r\n                            onChange={(event) => this.handleOnChangeInput(event, 'name')}\r\n                            value={name}\r\n                        ></input>\r\n                    </div>\r\n                    {/* <div className='col-6 manage-clinic__image' >\r\n                        <label htmlFor='image' className='manage-clinic__image--heading' >Ảnh phòng khám</label>\r\n                        <input\r\n                            type='file'\r\n                            id='image'\r\n                            className='manage-clinic__image--input'\r\n                            accept='image/*'\r\n                            onChange={(event) => this.handleUploadImg(event, 'AVATAR')}\r\n\r\n                        ></input>\r\n                    </div> */}\r\n                    <div class=\"col-md-6 manage-clinic__image\">\r\n                        <div>\r\n                            <label for=\"previewImg\" class=\"form-label previewImg-Btn\"><FormattedMessage id=\"manage-user.prevImg\" /></label>\r\n                        </div>\r\n                        <input\r\n                            id='previewImg'\r\n                            type='file'\r\n                            hidden\r\n                            onChange={(event) => this.handleUploadImg(event, 'AVATAR')}\r\n                        ></input>\r\n                        <div className='previewImg-wrapper'\r\n                            style={{ backgroundImage: `url(${previewImg})` }}\r\n                        // onClick={this.handlePreviewImg.bind(this)}\r\n                        >\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-6 manage-clinic__address'>\r\n                        <label htmlFor='name' className='manage-clinic__address--heading' >Địa chỉ</label>\r\n                        <input\r\n                            id='address'\r\n                            className='manage-clinic__address--input'\r\n                            onChange={(event) => this.handleOnChangeInput(event, 'address')}\r\n                            value={address}\r\n                        ></input>\r\n                    </div>\r\n                    {/* <div className='col-6 manage-clinic__image' >\r\n                        <label htmlFor='image' className='manage-clinic__image--heading' >Ảnh bìa</label>\r\n                        <input\r\n                            type='file'\r\n                            id='image'\r\n                            className='manage-clinic__image--input'\r\n                            accept='image/*'\r\n                            onChange={(event) => this.handleUploadImg(event, 'BANNER')}\r\n\r\n                        ></input>\r\n                    </div> */}\r\n                    <div class=\"col-md-6 manage-clinic__image\">\r\n                        <div>\r\n                            <label for=\"previewBanner\" class=\"form-label previewImg-Btn\"><FormattedMessage id=\"manage-user.prevImg\" /></label>\r\n                        </div>\r\n                        <input\r\n                            id='previewBanner'\r\n                            type='file'\r\n                            hidden\r\n                            onChange={(event) => this.handleUploadImg(event, 'BANNER')}\r\n                        ></input>\r\n                        <div className='previewImg-wrapper'\r\n                            style={{ backgroundImage: `url(${previewBanner})` }}\r\n                        // onClick={this.handlePreviewImg.bind(this)}\r\n                        >\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-6 manage-clinic__introduction mt-3' >\r\n                        <label className='d-block' >Giới thiệu</label>\r\n                        <textarea\r\n                            className='w-100'\r\n                            onChange={(event) => this.handleOnChangeInput(event, 'introductionHTML')}\r\n                            value={introductionHTML}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='manage-clinic__markdown' >\r\n                    <MdEditor\r\n                        style={{ height: '500px' }}\r\n                        renderHTML={text => mdParser.render(text)}\r\n                        onChange={this.handleEditorChange}\r\n                        value={descriptionMarkdown}\r\n                    />\r\n                </div>\r\n\r\n                <button\r\n                    className='manage-clinic__btn--cancel'\r\n                    onClick={this.handleCancel}\r\n                >\r\n                    Cancel\r\n                </button>\r\n\r\n                <button\r\n                    className='manage-clinic__btn--save'\r\n                    onClick={this.handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageClinic);\r\n","const actionTypes = Object.freeze({\r\n    //app\r\n    APP_START_UP_COMPLETE: 'APP_START_UP_COMPLETE',\r\n    SET_CONTENT_OF_CONFIRM_MODAL: 'SET_CONTENT_OF_CONFIRM_MODAL',\r\n    CHANGE_LANGUAGE: 'CHANGE_LANGUAGE',\r\n\r\n    //admin\r\n    USER_LOGIN_FAIL: 'USER_LOGIN_FAIL',\r\n    PROCESS_LOGOUT: 'PROCESS_LOGOUT',\r\n\r\n    FETCH_GENDER_START: 'FETCH_GENDER_START',\r\n    FETCH_GENDER_SUCCESS: 'FETCH_GENDER_SUCCESS',\r\n    FETCH_GENDER_FAILED: 'FETCH_GENDER_FAILED',\r\n\r\n    FETCH_ROLE_START: 'FETCH_ROLE_START',\r\n    FETCH_ROLE_SUCCESS: 'FETCH_ROLE_SUCCESS',\r\n    FETCH_ROLE_FAILED: 'FETCH_ROLE_FAILED',\r\n\r\n    FETCH_POSITION_START: 'FETCH_POSITION_START',\r\n    FETCH_POSITION_SUCCESS: 'FETCH_POSITION_SUCCESS',\r\n    FETCH_POSITION_FAILED: 'FETCH_POSITION_FAILED',\r\n\r\n    SAVE_USER_SUCCESS: 'SAVE_USER_SUCCESS',\r\n    SAVE_USER_FAILED: 'SAVE_USER_FAILED',\r\n\r\n    EDIT_USER_SUCCESS: 'EDIT_USER_SUCCESS',\r\n    EDIT_USER_FAILED: 'EDIT_USER_FAILED',\r\n\r\n    FETCH_USER_SUCCESS: 'FETCH_USER_SUCCESS',\r\n    FETCH_USER_FAILED: 'FETCH_USER_FAILED',\r\n\r\n    DELETE_USER_SUCCESS: 'DELETE_USER_SUCCESS',\r\n    DELETE_USER_FAILED: 'DELETE_USER_FAILED',\r\n\r\n    FETCH_TOPDOCTOR_SUCCESS: 'FETCH_TOPDOCTOR_SUCCESS',\r\n    FETCH_TOPDOCTOR_FAILED: 'FETCH_TOPDOCTOR_FAILED',\r\n\r\n    FETCH_ALLDOCTOR_SUCCESS: 'FETCH_ALLDOCTOR_SUCCESS',\r\n    FETCH_ALLDOCTOR_FAILED: 'FETCH_ALLDOCTOR_FAILED',\r\n\r\n    SAVE_INFODOCTOR_SUCCESS: 'SAVE_INFODOCTOR_SUCCESS',\r\n    SAVE_INFODOCTOR_FAILED: 'SAVE_INFODOCTOR_FAILED',\r\n\r\n    FETCH_DETAILDOCTOR_SUCCESS: 'FETCH_DETAILDOCTOR_SUCCESS',\r\n    FETCH_DETAILDOCTOR_FAILED: 'FETCH_DETAILDOCTOR_FAILED',\r\n\r\n    FETCH_SCHEDULE_SUCCESS: 'FETCH_SCHEDULE_SUCCESS',\r\n    FETCH_SCHEDULE_FAILED: 'FETCH_SCHEDULE_FAILED',\r\n\r\n    SAVE_SCHEDULE_SUCCESS: 'SAVE_SCHEDULE_SUCCESS',\r\n    SAVE_SCHEDULE_FAILED: 'SAVE_SCHEDULE_FAILED',\r\n\r\n    FETCH_REQUIREDOCTORINFO_SUCCESS: 'FETCH_REQUIREDOCTORINFO_SUCCESS',\r\n    FETCH_REQUIREDOCTORINFO_FAILED: 'FETCH_REQUIREDOCTORINFO_FAILED',\r\n\r\n    FETCH_EXTRAINFODOCTOR_SUCCESS: 'FETCH_EXTRAINFODOCTOR_SUCCESS',\r\n    FETCH_EXTRAINFODOCTOR_FAILED: 'FETCH_EXTRAINFODOCTOR_FAILED',\r\n\r\n    CONFIRM_BOOKING_SUCCESS: 'CONFIRM_BOOKING_SUCCESS',\r\n    CONFIRM_BOOKING_FAILED: 'CONFIRM_BOOKING_FAILED',\r\n\r\n    // FETCH_ALLCLINIC_SUCCESS: 'FETCH_ALLCLINIC_SUCCESS',\r\n    // FETCH_ALLCLINIC_FAILED: 'FETCH_ALLCLINIC_FAILED',\r\n\r\n\r\n    //user\r\n    ADD_USER_SUCCESS: 'ADD_USER_SUCCESS',\r\n    USER_LOGIN_SUCCESS: 'USER_LOGIN_SUCCESS',\r\n})\r\n\r\nexport default actionTypes;","import axios from 'axios';\r\nimport _ from 'lodash';\r\nimport config from './config';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    withCredentials: true\r\n});\r\n\r\n// const createError = (httpStatusCode, statusCode, errorMessage, problems, errorCode = '') => {\r\n//     const error = new Error();\r\n//     error.httpStatusCode = httpStatusCode;\r\n//     error.statusCode = statusCode;\r\n//     error.errorMessage = errorMessage;\r\n//     error.problems = problems;\r\n//     error.errorCode = errorCode + \"\";\r\n//     return error;\r\n// };\r\n\r\n// export const isSuccessStatusCode = (s) => {\r\n//     // May be string or number\r\n//     const statusType = typeof s;\r\n//     return (statusType === 'number' && s === 0) || (statusType === 'string' && s.toUpperCase() === 'OK');\r\n// };\r\n\r\n// instance.interceptors.response.use(\r\n//     (response) => {\r\n//         // Thrown error for request with OK status code\r\n//         const { data } = response;\r\n//         if (data.hasOwnProperty('s') && !isSuccessStatusCode(data['s']) && data.hasOwnProperty('errmsg')) {\r\n//             return Promise.reject(createError(response.status, data['s'], data['errmsg'], null, data['errcode'] ? data['errcode'] : \"\"));\r\n//         }\r\n\r\n//         // Return direct data to callback\r\n//         if (data.hasOwnProperty('s') && data.hasOwnProperty('d')) {\r\n//             return data['d'];\r\n//         }\r\n//         // Handle special case\r\n//         if (data.hasOwnProperty('s') && _.keys(data).length === 1) {\r\n//             return null;\r\n//         }\r\n//         return response.data;\r\n//     },\r\n//     (error) => {\r\n//         const { response } = error;\r\n//         if (response == null) {\r\n//             return Promise.reject(error);\r\n//         }\r\n\r\n//         const { data } = response;\r\n\r\n//         if (data.hasOwnProperty('s') && data.hasOwnProperty('errmsg')) {\r\n//             return Promise.reject(createError(response.status, data['s'], data['errmsg']));\r\n//         }\r\n\r\n//         if (data.hasOwnProperty('code') && data.hasOwnProperty('message')) {\r\n//             return Promise.reject(createError(response.status, data['code'], data['message'], data['problems']));\r\n//         }\r\n\r\n//         return Promise.reject(createError(response.status));\r\n//     }\r\n// );\r\n\r\n\r\nexport default instance;\r\n","import axios from \"../axios\";\r\nconst handleLoginAPI = (username, password) => {\r\n    return axios.post('/api/login', {\r\n        email: username,\r\n        password: password\r\n    });\r\n}\r\n\r\nconst getAllUser = (userId) => {\r\n    return axios.get(`/api/getAllUsers?id=${userId}`)\r\n}\r\n\r\nconst createUser = (dataCreate) => {\r\n    return axios.post('/api/createUsers', {\r\n        firstName: dataCreate.firstName,\r\n        lastName: dataCreate.lastName,\r\n        email: dataCreate.email,\r\n        password: dataCreate.password,\r\n        phone: dataCreate.phone,\r\n        address: dataCreate.address,\r\n        gender: dataCreate.gender,\r\n        role: dataCreate.role,\r\n        position: dataCreate.position,\r\n        avatar: dataCreate.avatar\r\n\r\n    })\r\n}\r\n\r\nconst updateUser = (dataUpdate) => {\r\n    return axios.put('/api/editUsers', dataUpdate)\r\n}\r\n\r\nconst deleteUser = (userId) => {\r\n    return axios.delete('/api/deleteUsers', {\r\n        data: {\r\n            id: userId,\r\n        }\r\n    });\r\n}\r\n\r\nconst getAllCode = (type) => {\r\n    return axios.get(`/api/getAllCode?type=${type}`);\r\n}\r\n\r\nconst getTopDoctor = () => {\r\n    return axios.get('/api/outstanding_doctor');\r\n}\r\n\r\nconst getAllDoctor = () => {\r\n    return axios.get('/api/getAllDoctor');\r\n}\r\n\r\nconst SaveInfoDoctor = (data) => {\r\n    return axios.post('/api/saveInfoDoctor', data);\r\n}\r\n\r\nconst getDetailDoctor = (doctorId) => {\r\n    return axios.get(`/api/getDetailDoctor?id=${doctorId}`)\r\n}\r\n\r\nconst createSchedule = (data) => {\r\n    return axios.post(`/api/createSchedule`, data);\r\n\r\n}\r\n\r\nconst getDoctorSchedule = (doctorId, date) => {\r\n    return axios.get(`/api/getScheduleByDoctor?doctorId=${doctorId}&date=${date}`);\r\n}\r\n\r\n\r\nconst getExtraInfoDoctor = (doctorId) => {\r\n    return axios.get(`/api/getExtraDoctorInfo?doctorId=${doctorId}`);\r\n\r\n}\r\n\r\nconst getProfileDoctor = (doctorId) => {\r\n    return axios.get(`/api/getProfileDoctor?doctorId=${doctorId}`);\r\n\r\n}\r\n\r\nconst confirmBooking = (dataBooking) => {\r\n    return axios.post('/api/patientBooking', dataBooking);\r\n}\r\n\r\nconst verifyEmail = (dataVerify) => {\r\n    return axios.post('/api/verifyEmailBooking', dataVerify);\r\n\r\n}\r\n\r\nconst createSpecialty = (dataCreate) => {\r\n    return axios.post('/api/createSpecialty', dataCreate);\r\n\r\n}\r\n\r\nconst getAllSpecialty = () => {\r\n    return axios.get('/api/getAllSpecialty');\r\n\r\n}\r\n\r\nconst editSpecialty = (dataEdit) => {\r\n    return axios.put('/api/editSpecialty', dataEdit);\r\n}\r\n\r\nconst deleteSpecialty = (dataDelete) => {\r\n    return axios.delete(`/api/deleteSpecialty?id=${dataDelete}`);\r\n}\r\n\r\nconst getDetailSpecialty = (specialtyId) => {\r\n    return axios.get(`/api/getDetailSpecialty?specialtyId=${specialtyId}`);\r\n}\r\n\r\nconst createClinic = (dataCreate) => {\r\n    return axios.post('/api/createClinic', dataCreate);\r\n}\r\n\r\nconst getAllClinic = () => {\r\n    return axios.get('/api/getAllClinic');\r\n}\r\n\r\nconst editClinic = (dataEdit) => {\r\n    return axios.put('/api/editClinic', dataEdit);\r\n}\r\n\r\nconst deleteClinic = (dataDelete) => {\r\n    return axios.delete(`/api/deleteClinic?id=${dataDelete}`);\r\n}\r\n\r\nconst getDetailClinic = (clinicId) => {\r\n    return axios.get(`/api/getDetailClinic?clinicId=${clinicId}`);\r\n}\r\n\r\nconst createHandbook = (dataCreate) => {\r\n    return axios.post('/api/createHandbook', dataCreate);\r\n}\r\n\r\nconst getAllHandbook = () => {\r\n    return axios.get('/api/getAllHandbook');\r\n}\r\n\r\nconst editHandbook = (dataEdit) => {\r\n    return axios.put('/api/editHandbook', dataEdit);\r\n}\r\n\r\nconst deleteHandbook = (dataDelete) => {\r\n    return axios.delete(`/api/deleteHandbook?id=${dataDelete}`);\r\n}\r\n\r\nconst getDetailHandbook = (clinicId) => {\r\n    return axios.get(`/api/getDetailHandbook?id=${clinicId}`);\r\n}\r\n\r\nconst getAllBooking = (doctorId, date) => {\r\n    return axios.get(`/api/getAllBooking?date=${date}&doctorId=${doctorId}`);\r\n}\r\n\r\nconst confirmRemedy = (dataRemedy) => {\r\n    return axios.post('/api/confirmRemedy', dataRemedy);\r\n}\r\n\r\nexport {\r\n    handleLoginAPI,\r\n    getAllUser,\r\n    createUser,\r\n    deleteUser,\r\n    updateUser,\r\n\r\n    getAllCode,\r\n\r\n    getTopDoctor,\r\n    getAllDoctor,\r\n    SaveInfoDoctor,\r\n    getDetailDoctor,\r\n    getExtraInfoDoctor,\r\n    getProfileDoctor,\r\n\r\n    createSchedule,\r\n    getDoctorSchedule,\r\n\r\n    confirmBooking,\r\n    verifyEmail,\r\n    getAllBooking,\r\n\r\n    createSpecialty,\r\n    getAllSpecialty,\r\n    editSpecialty,\r\n    deleteSpecialty,\r\n    getDetailSpecialty,\r\n\r\n    createClinic,\r\n    getAllClinic,\r\n    editClinic,\r\n    deleteClinic,\r\n    getDetailClinic,\r\n    confirmRemedy,\r\n\r\n    createHandbook,\r\n    getAllHandbook,\r\n    editHandbook,\r\n    deleteHandbook,\r\n    getDetailHandbook,\r\n};","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport { languages, crud_actions } from '../../../utils/constant';\r\nimport { CommonUtils } from '../../../utils'\r\nimport * as action from '../../../store/actions'\r\nimport './UserRedux.scss'\r\nimport TableManage from './TableManageUser';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass UserRedux extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arrGender: [],\r\n      arrRole: [],\r\n      arrPosition: [],\r\n      previewImg: '',\r\n      isOpen: false,\r\n      inputDisable: false,\r\n      action: '',\r\n\r\n      id: '',\r\n      email: '',\r\n      password: '',\r\n      phone: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      address: '',\r\n      sex: '',\r\n      role: '',\r\n      position: '',\r\n      avatar: ''\r\n    }\r\n\r\n  }\r\n\r\n  handleEdit = (user) => {\r\n    let imgBase64 = '';\r\n    if (user.image) {\r\n      imgBase64 = new Buffer(user.image, 'base64').toString('binary');\r\n    }\r\n    this.setState({\r\n      action: crud_actions.EDIT,\r\n      inputDisable: true,\r\n      id: user.id,\r\n      email: user.email,\r\n      password: 'hardcode',\r\n      phone: user.phoneNumber,\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      address: user.address,\r\n      sex: user.gender,\r\n      role: user.roleID,\r\n      position: user.positionID,\r\n      previewImg: imgBase64\r\n    })\r\n  }\r\n\r\n  async handleUploadImg(element) {\r\n    let files = element.target.files[0];\r\n    if (files) {\r\n      let base64 = await CommonUtils.getBase64(files);\r\n      console.log(typeof files);\r\n      console.log(base64);\r\n      const objectUrl = URL.createObjectURL(files)\r\n      this.setState({\r\n        previewImg: objectUrl,\r\n        avatar: base64,\r\n      })\r\n    }\r\n    // setPreview(objectUrl)\r\n  }\r\n\r\n  handlePreviewImg() {\r\n    this.setState({\r\n      isOpen: true,\r\n    })\r\n\r\n  }\r\n\r\n  handleSaveUser() {\r\n    let isValid = this.handleValidate();\r\n    let { action } = this.state;\r\n    if (isValid === false) return;\r\n\r\n    if (action === crud_actions.CREATE) {\r\n      this.props.createUser({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        phone: this.state.phone,\r\n        firstName: this.state.firstName,\r\n        lastName: this.state.lastName,\r\n        address: this.state.address,\r\n        gender: this.state.sex,\r\n        role: this.state.role,\r\n        position: this.state.position,\r\n        avatar: this.state.avatar\r\n      })\r\n    }\r\n    if (action === crud_actions.EDIT) {\r\n      this.props.editUser({\r\n        id: this.state.id,\r\n        phone: this.state.phone,\r\n        firstName: this.state.firstName,\r\n        lastName: this.state.lastName,\r\n        address: this.state.address,\r\n        gender: this.state.sex,\r\n        role: this.state.role,\r\n        position: this.state.position,\r\n        avatar: this.state.avatar\r\n      })\r\n    }\r\n\r\n    // this.props.getUser();\r\n\r\n  }\r\n\r\n  handleValidate() {\r\n    let isValid = true;\r\n    let arrInput = ['firstName', 'lastName', 'email', 'password', 'address', 'sex', 'role', 'position'];\r\n    for (let i = 0; i < arrInput.length; i++) {\r\n      if (!this.state[arrInput[i]]) {\r\n        isValid = false;\r\n        toast.warn(\"Bạn chưa điền \" + arrInput[i]);\r\n        break;\r\n      }\r\n    }\r\n    return isValid;\r\n  }\r\n\r\n  handleOnChange(event, id) {\r\n    let copyState = { ...this.state };\r\n    copyState[id] = event.target.value;\r\n    this.setState({\r\n      ...copyState\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getGender();\r\n    this.props.getRole();\r\n    this.props.getPosition();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.dataGender != this.props.dataGender) {\r\n      this.setState({\r\n        arrGender: this.props.dataGender,\r\n      })\r\n    }\r\n    if (prevProps.dataRole != this.props.dataRole) {\r\n      this.setState({\r\n        arrRole: this.props.dataRole,\r\n      })\r\n    }\r\n    if (prevProps.dataPosition != this.props.dataPosition) {\r\n      this.setState({\r\n        arrPosition: this.props.dataPosition,\r\n      })\r\n    }\r\n    if (prevProps.dataUser != this.props.dataUser) {\r\n      this.setState({\r\n        email: '',\r\n        password: '',\r\n        phone: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        address: '',\r\n        sex: '',\r\n        role: '',\r\n        position: '',\r\n        action: crud_actions.CREATE,\r\n        inputDisable: false,\r\n        previewImg: '',\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    let { firstName, lastName, email, password, sex, role, address, phone, position, inputDisable, action } = this.state;\r\n    let genders = this.state.arrGender;\r\n    let roles = this.state.arrRole;\r\n    let positions = this.state.arrPosition;\r\n    let language = this.props.lang;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"title text-center\" >User redux</div>\r\n        <div className='main' >\r\n          <div className='container' >\r\n            <div className='row' >\r\n              <div class=\"col-12 mt-5\">\r\n                <form class=\"row g-2 ms-5 me-5\">\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"validationDefault01\" class=\"form-label\"><FormattedMessage id=\"manage-user.firstName\" /></label>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      id=\"validationDefault01\"\r\n                      placeholder=\"VD: NGO\"\r\n                      name=\"firstName\"\r\n                      value={firstName}\r\n                      onInput={(event) => this.handleOnChange(event, 'firstName')}\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"validationDefault02\" class=\"form-label\"><FormattedMessage id=\"manage-user.lastName\" /></label>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      id=\"validationDefault02\"\r\n                      placeholder=\"VD: HOANG\"\r\n                      name=\"lastName\"\r\n                      value={lastName}\r\n                      onInput={(event) => this.handleOnChange(event, 'lastName')}\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"validationDefault01\" class=\"form-label\"><FormattedMessage id=\"manage-user.email\" /></label>\r\n                    <input\r\n                      disabled={inputDisable}\r\n                      type=\"email\"\r\n                      class=\"form-control\"\r\n                      name=\"email\"\r\n                      value={email}\r\n                      onInput={(event) => this.handleOnChange(event, 'email')}\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"validationDefault02\" class=\"form-label\"><FormattedMessage id=\"manage-user.password\" /></label>\r\n                    <input\r\n                      disabled={inputDisable}\r\n                      type=\"password\"\r\n                      class=\"form-control\"\r\n                      name=\"password\"\r\n                      value={password}\r\n                      onInput={(event) => this.handleOnChange(event, 'password')}\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"validationDefault03\" class=\"form-label\"><FormattedMessage id=\"manage-user.address\" /></label>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      name=\"address\"\r\n                      value={address}\r\n                      onInput={(event) => this.handleOnChange(event, 'address')}\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-3\">\r\n                    <label for=\"validationDefault04\" class=\"form-label\"><FormattedMessage id=\"manage-user.gender\" /></label>\r\n                    <select value={sex} class=\"form-select\" name=\"gender\" onInput={(event) => this.handleOnChange(event, 'sex')} >\r\n                      <option selected disabled value={''} >Choose...</option>\r\n                      {genders && genders.length > 0 && genders.map(function (gender, index) {\r\n\r\n                        return (\r\n                          <option value={gender.keyMap} >{(language == languages.VI) ? gender.valueVi : gender.valueEn}</option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-md-3\">\r\n                    <label for=\"validationDefault04\" class=\"form-label\"><FormattedMessage id=\"manage-user.role\" /></label>\r\n                    <select value={role} class=\"form-select\" name=\"role\" onInput={(event) => this.handleOnChange(event, 'role')} >\r\n                      <option selected disabled value={''}>Choose...</option>\r\n                      {roles && roles.length > 0 && roles.map(function (role, index) {\r\n                        return (\r\n                          <option value={role.keyMap} >{(language == languages.VI) ? role.valueVi : role.valueEn}</option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div>\r\n                      <label for=\"previewImg\" class=\"form-label previewImg-Btn\"><FormattedMessage id=\"manage-user.prevImg\" /></label>\r\n                    </div>\r\n                    <input id='previewImg' type='file' hidden onChange={(event) => this.handleUploadImg(event)}  ></input>\r\n                    <div className='previewImg-wrapper' style={{ backgroundImage: `url(${this.state.previewImg})` }} onClick={() => this.handlePreviewImg()} >\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-3\">\r\n                    <label for=\"validationDefault04\" class=\"form-label\"><FormattedMessage id=\"manage-user.position\" /></label>\r\n                    <select value={position} class=\"form-select\" name=\"position\" onInput={(event) => this.handleOnChange(event, 'position')} >\r\n                      <option selected disabled value={''} >Choose...</option>\r\n                      {positions && positions.length > 0 && positions.map(function (position, index) {\r\n                        return (\r\n                          <option value={position.keyMap} >{(language == languages.VI) ? position.valueVi : position.valueEn}</option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-md-3\">\r\n                    <label for=\"validationDefault03\" class=\"form-label\"><FormattedMessage id=\"manage-user.phone\" /></label>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      name=\"phone\"\r\n                      value={phone}\r\n                      onInput={(event) => this.handleOnChange(event, 'phone')}\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-12\">\r\n                    <button type='button' class={(action === crud_actions.EDIT) ? \"btn btn-warning pe-3 ps-3\" : \"btn btn-primary pe-3 ps-3\"} onClick={this.handleSaveUser.bind(this)} ><FormattedMessage id=\"manage-user.submit\" /></button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.state.isOpen &&\r\n          <Lightbox\r\n            mainSrc={this.state.previewImg}\r\n            onCloseRequest={() => this.setState({ isOpen: false })\r\n            }\r\n          />\r\n\r\n        }\r\n        <TableManage\r\n          handleEditUser={this.handleEdit}\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lang: state.app.language,\r\n    dataGender: state.admin.genders,\r\n    dataRole: state.admin.roles,\r\n    dataPosition: state.admin.positions,\r\n    dataUser: state.admin.users,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getGender: () => dispatch(action.fetchGenderStart()),\r\n    getRole: () => dispatch(action.fetchRoleStart()),\r\n    getPosition: () => dispatch(action.fetchPositionStart()),\r\n    createUser: (data) => dispatch(action.createNewUser(data)),\r\n    editUser: (data) => dispatch(action.EditUserStart(data)),\r\n    // getUser: () => dispatch(action.fetchUserStart())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\r\n","import actionTypes from './actionTypes';\r\nimport { getDetailDoctor, getExtraInfoDoctor, confirmBooking } from '../../services/userService';\r\nimport { toast } from 'react-toastify';\r\nexport const addUserSuccess = () => ({\r\n    type: actionTypes.ADD_USER_SUCCESS\r\n})\r\nexport const userLoginAccess = (userInfo) => ({\r\n    type: actionTypes.USER_LOGIN_SUCCESS,\r\n    userInfo: userInfo,\r\n})\r\nexport const userLoginFail = () => ({\r\n    type: actionTypes.USER_LOGIN_FAIL\r\n})\r\n\r\nexport const processLogout = () => ({\r\n    type: actionTypes.PROCESS_LOGOUT\r\n})\r\n\r\nexport const fetchDetailDoctorStart = (doctorId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let dataDoctor = await getDetailDoctor(doctorId);\r\n            if (dataDoctor.data && dataDoctor.data.errCode === 0) {\r\n                dispatch(fetchDetailDoctorSuccess(dataDoctor.data.detailDoctor));\r\n            };\r\n        } catch (error) {\r\n            // dispatch(fetchUserFailed(error));\r\n        }\r\n    }\r\n};\r\n\r\nexport const fetchDetailDoctorSuccess = (user) => ({\r\n    type: actionTypes.FETCH_DETAILDOCTOR_SUCCESS,\r\n    data: user,\r\n});\r\n\r\nexport const fetchDetailDoctorFailed = () => ({\r\n    type: actionTypes.FETCH_DETAILDOCTOR_FAILED,\r\n});\r\n\r\nexport const fetchExtraInfoDoctorStart = (doctorId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let dataExtra = await getExtraInfoDoctor(doctorId);\r\n            if (dataExtra.data && dataExtra.data.errCode === 0) {\r\n                dispatch(fetchExtraInfoDoctorSuccess(dataExtra.data.extraInfoDoctor));\r\n            };\r\n        } catch (error) {\r\n            dispatch(fetchExtraInfoDoctorFailed(error));\r\n        }\r\n    }\r\n};\r\n\r\nexport const fetchExtraInfoDoctorSuccess = (dataExtra) => ({\r\n    type: actionTypes.FETCH_EXTRAINFODOCTOR_SUCCESS,\r\n    data: dataExtra,\r\n});\r\n\r\nexport const fetchExtraInfoDoctorFailed = () => ({\r\n    type: actionTypes.FETCH_EXTRAINFODOCTOR_FAILED,\r\n});\r\n\r\nexport const confirmBookingStart = (dataBooking) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let response = await confirmBooking(dataBooking);\r\n            if (response.data && response.data.errCode === 0) {\r\n                dispatch(confirmBookingSuccess());\r\n                toast.success(response.data.message)\r\n            } else {\r\n                toast.error(response.data.message)\r\n            }\r\n        } catch (error) {\r\n            dispatch(confirmBookingFailed(error));\r\n        }\r\n    }\r\n};\r\n\r\nexport const confirmBookingSuccess = () => ({\r\n    type: actionTypes.CONFIRM_BOOKING_SUCCESS,\r\n});\r\n\r\nexport const confirmBookingFailed = () => ({\r\n    type: actionTypes.CONFIRM_BOOKING_FAILED,\r\n});","import actionTypes from './actionTypes';\r\nimport {\r\n    getAllCode,\r\n    createUser,\r\n    getAllUser,\r\n    deleteUser,\r\n    updateUser,\r\n    getTopDoctor,\r\n    getAllDoctor,\r\n    SaveInfoDoctor,\r\n    createSchedule,\r\n    getAllSpecialty,\r\n    getAllClinic\r\n} from '../../services/userService';\r\n\r\n\r\nimport { toast } from 'react-toastify';\r\n//lấy thông tin giới tính\r\nexport const fetchGenderStart = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let dataCode = await getAllCode('GENDER');\r\n            if (dataCode.data.dataAllCode && dataCode.data.dataAllCode.errCode === 0) {\r\n                dispatch(fetchGenderSuccess(dataCode.data.dataAllCode.dataAllCode));\r\n                // console.log(dataCode.data.dataAllCode)\r\n            };\r\n        } catch (error) {\r\n            dispatch(fetchGenderFailed(error));\r\n        }\r\n    }\r\n};\r\n\r\nexport const fetchGenderSuccess = (gender) => ({\r\n    type: actionTypes.FETCH_GENDER_SUCCESS,\r\n    data: gender,\r\n});\r\n\r\nexport const fetchGenderFailed = () => ({\r\n    type: actionTypes.FETCH_GENDER_FAILED,\r\n});\r\n//lấy thông tin vai trò\r\n\r\nexport const fetchRoleStart = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let dataCode = await getAllCode('ROLE');\r\n            if (dataCode.data.dataAllCode && dataCode.data.dataAllCode.errCode === 0) {\r\n                dispatch(fetchRoleSuccess(dataCode.data.dataAllCode.dataAllCode));\r\n                // console.log(dataCode.data.dataAllCode)\r\n            };\r\n        } catch (error) {\r\n            dispatch(fetchRoleFailed(error));\r\n        }\r\n    }\r\n};\r\n\r\nexport const fetchRoleSuccess = (gender) => ({\r\n    type: actionTypes.FETCH_ROLE_SUCCESS,\r\n    data: gender,\r\n});\r\n\r\nexport const fetchRoleFailed = () => ({\r\n    type: actionTypes.FETCH_ROLE_FAILED,\r\n});\r\n//lấy thông tin vị trí\r\n\r\nexport const fetchPositionStart = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let dataCode = await getAllCode('POSITION');\r\n            if (dataCode.data.dataAllCode && dataCode.data.dataAllCode.errCode === 0) {\r\n                dispatch(fetchPositionSuccess(dataCode.data.dataAllCode.dataAllCode));\r\n                // console.log(dataCode.data.dataAllCode)\r\n            };\r\n        } catch (error) {\r\n            dispatch(fetchPositionFailed(error));\r\n        }\r\n    }\r\n};\r\n\r\nexport const fetchPositionSuccess = (gender) => ({\r\n    type: actionTypes.FETCH_POSITION_SUCCESS,\r\n    data: gender,\r\n});\r\n\r\nexport const fetchPositionFailed = () => ({\r\n    type: actionTypes.FETCH_POSITION_FAILED,\r\n});\r\n//tạo người dùng\r\nexport const createNewUser = (data) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let dataUser = await createUser(data);\r\n            console.log(dataUser)\r\n            if (dataUser.data.userData && dataUser.data.errCode === 0) {\r\n                dispatch(saveUserSuccess());\r\n                dispatch(fetchUserStart());\r\n                toast.success(\"Tạo mới người dùng thành công !\");\r\n            } else {\r\n                toast.error(dataUser.data.message);\r\n            }\r\n        } catch (error) {\r\n            dispatch(saveUserFailed());\r\n        }\r\n    }\r\n}\r\n\r\nexport const saveUserSuccess = () => ({\r\n    type: actionTypes.SAVE_USER_SUCCESS,\r\n})\r\n\r\nexport const saveUserFailed = () => ({\r\n    type: actionTypes.SAVE_USER_SUCCESS\r\n})\r\n//lấy thông tin người dùng\r\n\r\nexport const fetchUserStart = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let dataUser = await getAllUser('ALL');\r\n            console.log(dataUser);\r\n            if (dataUser.data.userData && dataUser.data.errCode === 0) {\r\n                dispatch(fetchUserSuccess(dataUser.data.userData.user.reverse()));\r\n            };\r\n        } catch (error) {\r\n            dispatch(fetchUserFailed(error));\r\n        }\r\n    }\r\n};\r\n\r\nexport const fetchUserSuccess = (user) => ({\r\n    type: actionTypes.FETCH_USER_SUCCESS,\r\n    data: user,\r\n});\r\n\r\nexport const fetchUserFailed = () => ({\r\n    type: actionTypes.FETCH_USER_FAILED,\r\n});\r\n//Xóa người dùng\r\nexport const DeleteUserStart = (id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let dataDelete = await deleteUser(id);\r\n            console.log(dataDelete);\r\n            if (dataDelete.data.userData && dataDelete.data.errCode === 0) {\r\n                dispatch(DeleteUserSuccess(dataDelete.data.message));\r\n                dispatch(fetchUserStart());\r\n                toast.success(\"Xóa người dùng thành công !\");\r\n            };\r\n        } catch (error) {\r\n            dispatch(DeleteUserFailed());\r\n        }\r\n    }\r\n};\r\nexport const DeleteUserSuccess = (message) => ({\r\n    type: actionTypes.DELETE_USER_SUCCESS,\r\n    data: message,\r\n});\r\n\r\nexport const DeleteUserFailed = () => ({\r\n    type: actionTypes.DELETE_USER_FAILED,\r\n});\r\n\r\n//sửa người dùng\r\n\r\nexport const EditUserStart = (user) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let dataEdit = await updateUser(user);\r\n            console.log(dataEdit);\r\n            if (dataEdit.data.userData && dataEdit.data.errCode === 0) {\r\n                dispatch(EditUserSuccess(dataEdit.data.message));\r\n                dispatch(fetchUserStart());\r\n                toast.success(\"Cập nhật người dùng thành công !\");\r\n            };\r\n        } catch (error) {\r\n            // dispatch(EditUserFailed());\r\n        }\r\n    }\r\n};\r\nexport const EditUserSuccess = (message) => ({\r\n    type: actionTypes.EDIT_USER_SUCCESS,\r\n    data: message,\r\n});\r\n\r\nexport const EditUserFailed = () => ({\r\n    type: actionTypes.EDIT_USER_FAILED,\r\n});\r\n\r\nexport const fetchTopDoctorStart = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let dataUser = await getTopDoctor();\r\n            console.log(dataUser);\r\n            if (dataUser.data && dataUser.data.errCode === 0) {\r\n                dispatch(fetchTopDoctorSuccess(dataUser.data.doctors.reverse()));\r\n            };\r\n        } catch (error) {\r\n            // dispatch(fetchUserFailed(error));\r\n        }\r\n    }\r\n};\r\n\r\nexport const fetchTopDoctorSuccess = (user) => ({\r\n    type: actionTypes.FETCH_TOPDOCTOR_SUCCESS,\r\n    data: user,\r\n});\r\n\r\nexport const fetchTopDoctorFailed = () => ({\r\n    type: actionTypes.FETCH_TOPDOCTOR_FAILED,\r\n});\r\n\r\nexport const fetchAllDoctorStart = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let dataUser = await getAllDoctor();\r\n            if (dataUser.data && dataUser.data.errCode === 0) {\r\n                dispatch(fetchAllDoctorSuccess(dataUser.data.doctors.reverse()));\r\n            };\r\n        } catch (error) {\r\n            dispatch(fetchAllDoctorFailed(error));\r\n        }\r\n    }\r\n};\r\n\r\nexport const fetchAllDoctorSuccess = (user) => ({\r\n    type: actionTypes.FETCH_ALLDOCTOR_SUCCESS,\r\n    data: user,\r\n});\r\n\r\nexport const fetchAllDoctorFailed = () => ({\r\n    type: actionTypes.FETCH_ALLDOCTOR_FAILED,\r\n});\r\n\r\nexport const SaveInfoDoctorStart = (infoDoctor) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let dataSave = await SaveInfoDoctor(infoDoctor);\r\n            if (dataSave.data && dataSave.data.errCode === 0) {\r\n                dispatch(SaveInfoDoctorSuccess(dataSave.data));\r\n                toast.success(dataSave.data.message);\r\n            } else {\r\n                dispatch(SaveInfoDoctorFailed(dataSave.data))\r\n                toast.error(dataSave.data.message);\r\n            };\r\n        } catch (error) {\r\n            dispatch(SaveInfoDoctorFailed(error));\r\n        }\r\n    }\r\n};\r\n\r\nexport const SaveInfoDoctorSuccess = (dataErr) => ({\r\n    type: actionTypes.SAVE_INFODOCTOR_SUCCESS,\r\n    data: dataErr\r\n});\r\n\r\nexport const SaveInfoDoctorFailed = (dataErr) => ({\r\n    type: actionTypes.SAVE_INFODOCTOR_FAILED,\r\n    data: dataErr\r\n});\r\n\r\n\r\nexport const fetchScheduleStart = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let dataCode = await getAllCode('TIME');\r\n            console.log(dataCode);\r\n            if (dataCode.data.dataAllCode && dataCode.data.dataAllCode.errCode === 0) {\r\n                dispatch(fetchScheduleSuccess(dataCode.data.dataAllCode.dataAllCode));\r\n            };\r\n        } catch (error) {\r\n            // dispatch(fetchScheduleFailed(error));\r\n        }\r\n    }\r\n};\r\n\r\nexport const fetchScheduleSuccess = (dataCode) => ({\r\n    type: actionTypes.FETCH_SCHEDULE_SUCCESS,\r\n    data: dataCode,\r\n});\r\n\r\nexport const fetchScheduleFailed = () => ({\r\n    type: actionTypes.FETCH_SCHEDULE_FAILED,\r\n});\r\n\r\n\r\nexport const createScheduleStart = (data) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let dataSchedule = await createSchedule(data);\r\n            console.log(dataSchedule)\r\n            if (dataSchedule.data && dataSchedule.data.errCode === 0) {\r\n                toast.success(dataSchedule.data.message);\r\n                dispatch(saveScheduleSuccess());\r\n            } else {\r\n                toast.error(dataSchedule.data.message);\r\n            }\r\n        } catch (error) {\r\n            dispatch(saveScheduleFailed());\r\n        }\r\n    }\r\n}\r\n\r\nexport const saveScheduleSuccess = () => ({\r\n    type: actionTypes.SAVE_SCHEDULE_SUCCESS,\r\n})\r\n\r\nexport const saveScheduleFailed = () => ({\r\n    type: actionTypes.SAVE_SCHEDULE_FAILED\r\n})\r\n\r\nexport const fetchRequireDoctorStart = (doctorId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let dataPrice = await getAllCode('PRICE');\r\n            let dataPayment = await getAllCode('PAYMENT');\r\n            let dataProvince = await getAllCode('PROVINCE');\r\n            let dataSpecialty = await getAllSpecialty();\r\n            let dataClinic = await getAllClinic();\r\n            // console.log(dataClinic);\r\n            if (dataPrice.data.dataAllCode && dataPrice.data.dataAllCode.errCode === 0\r\n                && dataPayment.data.dataAllCode && dataPayment.data.dataAllCode.errCode === 0\r\n                && dataProvince.data.dataAllCode && dataProvince.data.dataAllCode.errCode === 0\r\n                && dataSpecialty.data.specialties && dataSpecialty.data.errCode === 0\r\n                && dataClinic.data.clinics && dataClinic.data.errCode === 0) {\r\n                dispatch(fetchRequireDoctorSuccess({\r\n                    prices: dataPrice.data.dataAllCode.dataAllCode,\r\n                    payments: dataPayment.data.dataAllCode.dataAllCode,\r\n                    provinces: dataProvince.data.dataAllCode.dataAllCode,\r\n                    specialties: dataSpecialty.data.specialties,\r\n                    clinics: dataClinic.data.clinics,\r\n                }));\r\n            } else {\r\n                dispatch(fetchRequireDoctorFailed());\r\n            };\r\n        } catch (error) {\r\n            // dispatch(fetchUserFailed(error));\r\n        }\r\n    }\r\n};\r\n\r\nexport const fetchRequireDoctorSuccess = (dataRequire) => ({\r\n    type: actionTypes.FETCH_REQUIREDOCTORINFO_SUCCESS,\r\n    data: dataRequire,\r\n});\r\n\r\nexport const fetchRequireDoctorFailed = () => ({\r\n    type: actionTypes.FETCH_REQUIREDOCTORINFO_FAILED,\r\n\r\n});\r\n\r\n\r\n// export const fetchAllClinicStart = () => {\r\n//     return async (dispatch) => {\r\n//         try {\r\n//             let dataClinic = await getAllClinic();\r\n//             console.log(dataClinic);\r\n//             if (dataClinic.data && dataClinic.data.errCode === 0) {\r\n//                 dispatch(fetchAllClinicSuccess(dataClinic.data.clinics.reverse()));\r\n//             };\r\n//         } catch (error) {\r\n//             dispatch(fetchAllClinicFailed(error));\r\n//         }\r\n//     }\r\n// };\r\n\r\n// export const fetchAllClinicSuccess = (clinic) => ({\r\n//     type: actionTypes.FETCH_ALLCLINIC_SUCCESS,\r\n//     data: clinic,\r\n// });\r\n\r\n// export const fetchAllClinicFailed = () => ({\r\n//     type: actionTypes.FETCH_ALLCLINIC_FAILED,\r\n// });\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../../store/actions';\r\nimport \"../userManager.scss\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\nfunction handleEditorChange({ html, text }) {\r\n    console.log('handleEditorChange', html, text);\r\n}\r\nclass TableManage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrUser: [],\r\n        }\r\n    }\r\n\r\n    handleEdit(user) {\r\n        this.props.handleEditUser(user)\r\n    }\r\n\r\n    handleDelete(id) {\r\n        this.props.deleteUser(id);\r\n    }\r\n    componentDidMount() {\r\n        this.props.getUser();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.dataUser != this.props.dataUser) {\r\n            this.setState({\r\n                arrUser: this.props.dataUser,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let users = this.state.arrUser;\r\n        return (\r\n            <div className=\"container\">\r\n                <h2 className='title'>Manage users with React</h2>\r\n                <div className='user-table w-100 mb-4'>\r\n                    <table className='w-100'>\r\n                        <tr>\r\n                            <th>Email</th>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th>Address</th>\r\n                            <th>Gender</th>\r\n                            <th>Role</th>\r\n                            <th>Position</th>\r\n                            <th>Phone</th>\r\n                            <th>Action</th>\r\n\r\n                        </tr>\r\n                        {users.map((user, index) => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.firstName}</td>\r\n                                    <td>{user.lastName}</td>\r\n                                    <td>{user.address}</td>\r\n                                    <td>{user.gender}</td>\r\n                                    <td>{user.roleID}</td>\r\n                                    <td>{user.positionID}</td>\r\n                                    <td>{user.phoneNumber}</td>\r\n                                    <td>\r\n                                        <button\r\n                                            key={index}\r\n                                            className='btn-Edit me-5 w-25'\r\n                                            onClick={() => { this.handleEdit(user) }}\r\n                                        >Edit</button>\r\n                                        <button\r\n                                            key={index}\r\n                                            className='btn-Delete w-25'\r\n                                            onClick={() => { this.handleDelete(user.id) }}\r\n                                        >Delete</button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataUser: state.admin.users,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getUser: () => dispatch(action.fetchUserStart()),\r\n        deleteUser: (userId) => dispatch(action.DeleteUserStart(userId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManage);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../../store/actions';\r\nimport \"./ManageSpecialty.scss\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport Lightbox from 'react-image-lightbox';\r\n\r\nimport './ManageSpecialty.scss';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport { createSpecialty, editSpecialty, deleteSpecialty } from '../../../services/userService';\r\nimport { Toast } from 'react-toastify';\r\nimport { languages } from '../../../utils';\r\nimport { getAllSpecialty } from '../../../services/userService';\r\nimport { crud_actions } from '../../../utils';\r\n\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\nclass ManageSpecialty extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false,\r\n            id: '',\r\n            name: '',\r\n            image: '',\r\n            descriptionMarkdown: '',\r\n            descriptionHTML: '',\r\n            previewImg: '',\r\n            action: crud_actions.CREATE,\r\n\r\n            specialties: [],\r\n        }\r\n    }\r\n\r\n    resetInput = () => {\r\n        this.setState({\r\n            name: '',\r\n            image: '',\r\n            descriptionMarkdown: '',\r\n            descriptionHTML: '',\r\n            previewImg: '',\r\n            action: crud_actions.CREATE,\r\n        })\r\n    }\r\n\r\n    getAllSpecialty = async () => {\r\n        let specialties = await getAllSpecialty();\r\n        if (specialties && specialties.data.errCode === 0) {\r\n            this.setState({\r\n                specialties: specialties.data.specialties,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleEditorChange = ({ text, html }) => {\r\n        this.setState({\r\n            descriptionHTML: html,\r\n            descriptionMarkdown: text,\r\n        })\r\n    }\r\n\r\n    async handleUploadImg(element) {\r\n        let files = element.target.files[0];\r\n        if (files) {\r\n            let base64 = await CommonUtils.getBase64(files);\r\n            console.log(base64);\r\n            const objectUrl = URL.createObjectURL(files)\r\n            this.setState({\r\n                image: base64,\r\n                previewImg: objectUrl\r\n            })\r\n        }\r\n        // setPreview(objectUrl)\r\n    }\r\n\r\n    handlePreviewImg() {\r\n        this.setState({\r\n            isOpen: true,\r\n        })\r\n\r\n    }\r\n\r\n    handleOnChangeInput = (event, id) => {\r\n        let copyState = this.state;\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n    }\r\n\r\n    handleSave = async () => {\r\n        let { action } = this.state;\r\n        let response = '';\r\n        if (action === crud_actions.CREATE) {\r\n            response = await createSpecialty(this.state);\r\n        }\r\n\r\n        if (action === crud_actions.EDIT) {\r\n            response = await editSpecialty(this.state);\r\n\r\n        }\r\n\r\n        if (response.data && response.data.errCode === 0) {\r\n            toast.success(response.data.message);\r\n            this.getAllSpecialty();\r\n            this.resetInput();\r\n\r\n        } else {\r\n            toast.error(response.data.message);\r\n        }\r\n\r\n    }\r\n\r\n    handleEdit = (specialty) => {\r\n        if (specialty && specialty.id) {\r\n\r\n            this.setState({\r\n                action: crud_actions.EDIT,\r\n                id: specialty.id,\r\n                name: specialty.name,\r\n                descriptionMarkdown: specialty.descriptionMarkdown,\r\n                descriptionHTML: specialty.descriptionHTML,\r\n                previewImg: new Buffer(specialty.image, 'base64').toString('binary'),\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDelete = async (specialty) => {\r\n        if (specialty && specialty.id) {\r\n            let response = await deleteSpecialty(specialty.id);\r\n            if (response && response.data.errCode === 0) {\r\n                toast.success(response.data.message);\r\n                this.getAllSpecialty();\r\n            } else {\r\n                toast.error(response.data.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.resetInput();\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getAllSpecialty();\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let { specialties, descriptionMarkdown, descriptionHTML, name, image, previewImg } = this.state;\r\n        console.log(specialties);\r\n        return (\r\n            <div className='manage-specialty__container' >\r\n                <h1 className='text-center' >Quản lí chuyên khoa</h1>\r\n                <div className='manage-specialty__table w-100 mb-4'>\r\n                    <table className='w-100' style={{ tableLayout: 'fixed' }} >\r\n                        <tr>\r\n                            <th>STT</th>\r\n                            <th>Tên chuyên khoa</th>\r\n                            <th>Thông tin chuyên khoa</th>\r\n                            <th>Tùy chỉnh</th>\r\n                        </tr>\r\n                        {specialties && specialties.length > 0 && specialties.map((item, index) => {\r\n                            return (\r\n                                <tr key={index} className='row-specialty' style={{ height: \"20px\" }} >\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{item.name}</td>\r\n                                    <td>{item.descriptionMarkdown}</td>\r\n                                    <td>\r\n                                        <button\r\n                                            className='btn-Edit me-5 w-25'\r\n                                            onClick={() => this.handleEdit(item)}\r\n                                        >Edit</button>\r\n                                        <button\r\n                                            className='btn-Delete w-25'\r\n                                            onClick={() => this.handleDelete(item)}\r\n                                        >Delete</button>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            );\r\n                        })}\r\n                    </table>\r\n                </div>\r\n                <div className='d-flex' >\r\n                    <div className='manage-specialty__name  ' >\r\n                        <label htmlFor='name' className='manage-specialty__name--heading' >Tên chuyên khoa</label>\r\n                        <input\r\n                            id='name'\r\n                            className='manage-specialty__name--input'\r\n                            onChange={(event) => this.handleOnChangeInput(event, 'name')}\r\n                            value={name}\r\n                        ></input>\r\n                    </div>\r\n                    {/* <div className='manage-specialty__image' >\r\n                        <label htmlFor='image' className='manage-specialty__image--heading' >Ảnh chuyên khoa</label>\r\n                        <input\r\n                            type='file'\r\n                            id='image'\r\n                            className='manage-specialty__image--input'\r\n                            accept='image/*'\r\n                            onChange={(event) => this.handleUploadImg(event)}\r\n\r\n                        ></input>\r\n                    </div> */}\r\n                    <div class=\"col-md-6 manage-specialty__image\">\r\n                        <div>\r\n                            <label for=\"previewImg\" class=\"form-label previewImg-Btn\"><FormattedMessage id=\"manage-user.prevImg\" /></label>\r\n                        </div>\r\n                        <input\r\n                            id='previewImg'\r\n                            type='file'\r\n                            hidden\r\n                            onChange={(event) => this.handleUploadImg(event)}\r\n                        ></input>\r\n                        <div className='previewImg-wrapper'\r\n                            style={{ backgroundImage: `url(${previewImg})` }}\r\n                            onClick={this.handlePreviewImg.bind(this)}\r\n                        >\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='manage-specialty__markdown' >\r\n                    <MdEditor\r\n                        style={{ height: '500px' }}\r\n                        renderHTML={text => mdParser.render(text)}\r\n                        onChange={this.handleEditorChange}\r\n                        value={descriptionMarkdown}\r\n                    />\r\n                </div>\r\n\r\n                <button\r\n                    className='manage-specialty__btn--cancel'\r\n                    onClick={this.handleCancel}\r\n                >\r\n                    Cancel\r\n                </button>\r\n\r\n                <button\r\n                    className='manage-specialty__btn--save'\r\n                    onClick={this.handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n\r\n\r\n                {this.state.isOpen &&\r\n                    <Lightbox\r\n                        mainSrc={previewImg}\r\n                        onCloseRequest={() => this.setState({ isOpen: false })\r\n                        }\r\n                    />\r\n\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSpecialty);\r\n","import React, { Component, useState } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../../store/actions';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport DatePicker from 'react-flatpickr';\r\n\r\n\r\n\r\nimport './ManageHandbook.scss';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\nimport { getAllHandbook, createHandbook, editHandbook, deleteHandbook } from '../../../services/userService';\r\nimport { Toast } from 'react-toastify';\r\nimport { crud_actions } from '../../../utils';\r\nimport { languages } from '../../../utils';\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\nclass ManageHandbook extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            handbooks: [],\r\n\r\n            title: '',\r\n            image: '',\r\n            author: '',\r\n            release: new Date(),\r\n            descriptionMarkdown: '',\r\n            descriptionHTML: '',\r\n            previewImg: '',\r\n            action: crud_actions.CREATE\r\n        }\r\n    }\r\n\r\n    resetInput() {\r\n        this.setState({\r\n            title: '',\r\n            image: '',\r\n            author: '',\r\n            release: new Date(),\r\n            descriptionMarkdown: '',\r\n            descriptionHTML: '',\r\n            previewImg: '',\r\n            action: crud_actions.CREATE\r\n        })\r\n    }\r\n\r\n    handleGetAllHandbook = async () => {\r\n        let handbooks = await getAllHandbook();\r\n        console.log(handbooks);\r\n        if (handbooks && handbooks.data.errCode === 0) {\r\n            this.setState({\r\n                handbooks: handbooks.data.handbooks,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleEditorChange = ({ text, html }) => {\r\n        this.setState({\r\n            descriptionHTML: html,\r\n            descriptionMarkdown: text,\r\n        })\r\n    }\r\n\r\n    async handleUploadImg(element) {\r\n        let files = element.target.files[0];\r\n        if (files) {\r\n            let base64 = await CommonUtils.getBase64(files);\r\n            console.log(base64);\r\n            const objectUrl = URL.createObjectURL(files)\r\n            this.setState({\r\n                image: base64,\r\n                previewImg: objectUrl\r\n            })\r\n        }\r\n        // setPreview(objectUrl)\r\n    }\r\n\r\n    handleDateChange = (date) => {\r\n        this.setState({\r\n            release: new Date(date).getTime(),\r\n        })\r\n    }\r\n\r\n    handleOnChangeInput = (event, id) => {\r\n        let copyState = this.state;\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n    }\r\n\r\n    handleSave = async () => {\r\n        let { action } = this.state;\r\n        let response = '';\r\n        if (action === crud_actions.CREATE) {\r\n            response = await createHandbook(this.state);\r\n        }\r\n\r\n        if (action === crud_actions.EDIT) {\r\n            response = await editHandbook(this.state);\r\n\r\n        }\r\n\r\n        if (response.data && response.data.errCode === 0) {\r\n            toast.success(response.data.message);\r\n            this.handleGetAllHandbook();\r\n            this.resetInput();\r\n        } else {\r\n            toast.error(response.data.message);\r\n        }\r\n\r\n    }\r\n\r\n    handleEdit = (handbook) => {\r\n        if (handbook && handbook.id) {\r\n            this.setState({\r\n                action: crud_actions.EDIT,\r\n                id: handbook.id,\r\n                title: handbook.title,\r\n                descriptionMarkdown: handbook.descriptionMarkdown,\r\n                descriptionHTML: handbook.descriptionHTML,\r\n                author: handbook.author,\r\n                release: handbook.release,\r\n                previewImg: new Buffer(handbook.image, 'base64').toString('binary'),\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDelete = async (handbook) => {\r\n        if (handbook && handbook.id) {\r\n            let response = await deleteHandbook(handbook.id);\r\n            if (response && response.data.errCode === 0) {\r\n                toast.success(response.data.message);\r\n                this.handleGetAllHandbook();\r\n            } else {\r\n                toast.error(response.data.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.resetInput();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleGetAllHandbook();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        // console.log(this.state);\r\n        let { handbooks, descriptionMarkdown, descriptionHTML, title, image, author, previewImg, release } = this.state;\r\n        return (\r\n            <div className='manage-handbook__container' >\r\n                <h1 className='text-center' >Quản lí phòng khám</h1>\r\n                <div className='manage-handbook__table w-100 mb-4'>\r\n                    <table className='w-100' style={{ tableLayout: 'fixed' }} >\r\n                        <tr className='row-handbook' >\r\n                            <th>STT</th>\r\n                            <th>Tiêu đề</th>\r\n                            <th>Tác giả</th>\r\n                            <th>Ngày phát hành</th>\r\n                            <th>Nội dung</th>\r\n                            <th>Tùy chỉnh</th>\r\n                        </tr>\r\n\r\n\r\n                        {handbooks && handbooks.length > 0 && handbooks.map((item, index) => {\r\n                            return (\r\n                                <tr key={index} className='row-handbook' style={{ height: \"20px\" }} >\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{item.title}</td>\r\n                                    <td>{item.author}</td>\r\n                                    <td>{item.release}</td>\r\n                                    <td>{item.descriptionMarkdown}</td>\r\n                                    <td>\r\n                                        <button\r\n                                            className='btn-Edit me-5 w-25'\r\n                                            onClick={() => this.handleEdit(item)}\r\n                                        >Edit</button>\r\n                                        <button\r\n                                            className='btn-Delete w-25'\r\n                                            onClick={() => this.handleDelete(item)}\r\n                                        >Delete</button>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            );\r\n                        })}\r\n\r\n                    </table>\r\n                </div>\r\n                <div className='row' >\r\n                    <div className='col-6 manage-handbook__name  ' >\r\n                        <label htmlFor='name' className='manage-handbook__name--heading' >Tiêu đề</label>\r\n                        <input\r\n                            id='name'\r\n                            className='manage-handbook__name--input'\r\n                            onChange={(event) => this.handleOnChangeInput(event, 'title')}\r\n                            value={title}\r\n                        ></input>\r\n                    </div>\r\n                    <div class=\"col-md-6 manage-handbook__image\">\r\n                        <div>\r\n                            <label for=\"previewImg\" class=\"form-label previewImg-Btn\"><FormattedMessage id=\"manage-user.prevImg\" /></label>\r\n                        </div>\r\n                        <input\r\n                            id='previewImg'\r\n                            type='file'\r\n                            hidden\r\n                            onChange={(event) => this.handleUploadImg(event)}\r\n                        ></input>\r\n                        <div className='previewImg-wrapper'\r\n                            style={{ backgroundImage: `url(${previewImg})` }}\r\n                        // onClick={this.handlePreviewImg.bind(this)}\r\n                        >\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-6 manage-handbook__author'>\r\n                        <label htmlFor='name' className='manage-handbook__author--heading' >Tác giả</label>\r\n                        <input\r\n                            id='author'\r\n                            className='manage-handbook__author--input'\r\n                            onChange={(event) => this.handleOnChangeInput(event, 'author')}\r\n                            value={author}\r\n                        ></input>\r\n                    </div>\r\n                    <div className='col-6 manage-handbook__date-picked' >\r\n                        <label className='d-block ' >Ngày phát hành</label>\r\n                        <DatePicker\r\n                            className='date-picker'\r\n                            value={new Date(+release)}\r\n                            options={{ minDate: 'today', dateFormat: \"d-m-Y\" }}\r\n                            onChange={(selectedDates, dateStr) => this.handleDateChange(selectedDates[0])}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='manage-handbook__markdown' >\r\n                    <MdEditor\r\n                        style={{ height: '500px' }}\r\n                        renderHTML={text => mdParser.render(text)}\r\n                        onChange={this.handleEditorChange}\r\n                        value={descriptionMarkdown}\r\n                    />\r\n\r\n                </div>\r\n\r\n                <button\r\n                    className='manage-handbook__btn--cancel'\r\n                    onClick={this.handleCancel}\r\n                >\r\n                    Cancel\r\n                </button>\r\n\r\n                <button\r\n                    className='manage-handbook__btn--save'\r\n                    onClick={this.handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageHandbook);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\r\nimport { FacebookProvider, Like, Comments } from 'react-facebook';\r\n\r\nimport './DetailDoctor.scss';\r\nimport HomeHeader from '../homeHeader';\r\nimport DetailSection from '../section/DetailSection';\r\nimport * as action from '../../../store/actions';\r\nimport DoctorSchedule from './DoctorSchedule';\r\nimport DoctorExtraInfo from './DoctorExtraInfo';\r\nimport HomeFooter from '../homeFooter';\r\nimport LikeAndSharePlugin from '../../Plugins/SocialPlugins/LikeAndSharePlugin';\r\nimport { languages } from '../../../utils';\r\nrequire('dotenv').config();\r\nclass DetailDoctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            doctor: '',\r\n            currentURL: '',\r\n        }\r\n    }\r\n\r\n    getCurrentURL = () => {\r\n        this.setState({\r\n            currentURL: window.location.href\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getDetailDoctor(this.props.match.params.id);\r\n        this.getCurrentURL();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.detailDoctor != this.props.detailDoctor) {\r\n            this.setState({\r\n                doctor: this.props.detailDoctor,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { doctor, currentURL } = this.state;\r\n        let imgBase64;\r\n        return (\r\n            <React.Fragment>\r\n                <HomeHeader isShowBanner={false} />\r\n                <div className='detail-doctor-container' >\r\n                    <div className='doctor-introduction' >\r\n                        {\r\n                            doctor ?\r\n                                <>\r\n                                    <div className='detail-doctor__image' style={{ backgroundImage: `url(${imgBase64 = new Buffer(doctor && doctor.image, 'base64').toString('binary')})` }} ></div>\r\n                                    <div className='detail-doctor__introduce' >\r\n                                        <h2 className='detail-doctor__introduce--name' >\r\n                                            {`${doctor.positionData && this.props.lang === languages.EN ? doctor.positionData.valueEn : doctor.positionData.valueVi}, ${doctor.firstName} ${doctor.lastName}`}\r\n                                        </h2>\r\n                                        <p className='detail-doctor__introduce--profile' >\r\n                                            {doctor.Markdown && doctor.Markdown.description}\r\n                                        </p>\r\n                                        <div className='detail-doctor__introduce--interact' >\r\n                                            {/* <button className='btn-primary btn-like' >Thích 56</button>\r\n                                            <button className='btn-primary btn-share ' >Chia sẻ</button> */}\r\n                                            {/* <LikeAndSharePlugin /> */}\r\n                                            <FacebookProvider appId={process.env.REACT_APP_FACEBOOL_ID}>\r\n                                                <Like href={currentURL} colorScheme=\"dark\" showFaces share />\r\n                                            </FacebookProvider>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                                :\r\n                                <div class=\"w-100 d-flex justify-content-center text-primary m-5\">\r\n                                    <div class=\"spinner-border\" role=\"status\">\r\n                                        <span class=\"visually-hidden\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                    <div className='container-schedule' >\r\n                        <div className='left-content'>\r\n                            <DoctorSchedule\r\n                                doctorId={this.props.match.params.id}\r\n                            />\r\n                        </div>\r\n                        <div className='right-content' >\r\n                            <DoctorExtraInfo\r\n                                doctorId={this.props.match.params.id}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <DetailSection\r\n                    style={{ backgroundColor: '#f9f9f9' }}\r\n                    dataDetail={doctor.Markdown}\r\n                />\r\n                <div\r\n                    className='comment-plugin'\r\n                    style={{\r\n                        maxWidth: '1200px',\r\n                        marginLeft: 'auto',\r\n                        marginRight: 'auto',\r\n                    }}\r\n                >\r\n                    <h3 className='m-3'>Bình luận</h3>\r\n                    <FacebookProvider appId={process.env.REACT_APP_FACEBOOL_ID} >\r\n                        <Comments href={'http://musicplayer-nth.surge.sh/'} />\r\n                    </FacebookProvider>\r\n                </div>\r\n                <HomeFooter />\r\n\r\n\r\n\r\n\r\n\r\n            </React.Fragment >\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        detailDoctor: state.user.doctor,\r\n        lang: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getDetailDoctor: (doctorId) => dispatch(action.fetchDetailDoctorStart(doctorId))\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailDoctor);\r\n","export const path = {\r\n    HOME: '/',\r\n    HOMEPAGE: '/home',\r\n    LOGIN: '/login',\r\n    LOG_OUT: '/logout',\r\n    SYSTEM: '/system',\r\n    DETAIL_DOCTOR: '/detail-doctor/:id',\r\n    DOCTOR_SCHEDULE: '/doctor/manage-schedule',\r\n    DOCTOR_PATIENT: '/doctor/manage-patient',\r\n    DETAIL_SPECIALTY: '/detail-specialty/:id',\r\n    DETAIL_CLINIC: '/detail-clinic/:id',\r\n    DETAIL_HANDBOOK: '/detail-handbook/:id',\r\n    VERIFY_EMAIL: '/verify-booking',\r\n};\r\n\r\nexport const languages = {\r\n    VI: 'vi',\r\n    EN: 'en'\r\n};\r\n\r\nexport const crud_actions = {\r\n    CREATE: \"CREATE\",\r\n    EDIT: \"EDIT\",\r\n    DELETE: \"DELETE\"\r\n};\r\n\r\nexport const dateFormat = {\r\n    SEND_TO_SERVER: 'DD/MM/YYYY'\r\n};\r\n\r\nexport const YesNoObj = {\r\n    YES: 'Y',\r\n    NO: 'N'\r\n}\r\n\r\nexport const role = {\r\n    ADMIN: \"R1\",\r\n    DOCTOR: \"R2\",\r\n    PATIENT: \"R3\",\r\n}\r\n\r\nexport const settings = {\r\n    dots: false,\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 2\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './LikeAndSharePlugin.scss';\r\n\r\nclass LikeAndSharePlugin extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div\r\n                    class=\"fb-like\"\r\n                    data-href=\"https://developers.facebook.com/docs/plugins/\"\r\n                    data-width=\"\"\r\n                    data-layout=\"\"\r\n                    data-action=\"\"\r\n                    data-size=\"\"\r\n                    data-share=\"true\"\r\n                ></div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LikeAndSharePlugin);","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initContentOfConfirmModal = {\r\n    isOpen: false,\r\n    messageId: \"\",\r\n    handleFunc: null,\r\n    dataFunc: null\r\n}\r\n\r\nconst initialState = {\r\n    started: true,\r\n    language: 'vi',\r\n    systemMenuPath: '/system/user-manage',\r\n    contentOfConfirmModal: {\r\n        ...initContentOfConfirmModal\r\n    }\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.APP_START_UP_COMPLETE:\r\n            return {\r\n                ...state,\r\n                started: true\r\n            }\r\n        case actionTypes.SET_CONTENT_OF_CONFIRM_MODAL:\r\n            return {\r\n                ...state,\r\n                contentOfConfirmModal: {\r\n                    ...state.contentOfConfirmModal,\r\n                    ...action.contentOfConfirmModal\r\n                }\r\n            }\r\n        case actionTypes.CHANGE_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                language: action.language,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    genders: [],\r\n    roles: [],\r\n    positions: [],\r\n    users: [],\r\n    topDoctors: [],\r\n    allDoctor: [],\r\n    allClinic: [],\r\n    allSchedule: [],\r\n    dataError: {},\r\n    requireDoctorInfo: {},\r\n}\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_GENDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                genders: action.data,\r\n            }\r\n        case actionTypes.FETCH_GENDER_FAILED:\r\n            return {\r\n                ...state,\r\n            }\r\n        case actionTypes.FETCH_ROLE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                roles: action.data,\r\n            }\r\n        case actionTypes.FETCH_ROLE_FAILED:\r\n            return {\r\n                ...state,\r\n            }\r\n        case actionTypes.FETCH_POSITION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                positions: action.data,\r\n            }\r\n        case actionTypes.FETCH_POSITION_FAILED:\r\n            return {\r\n                ...state,\r\n            }\r\n        case actionTypes.SAVE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        case actionTypes.SAVE_USER_FAILED:\r\n            return {\r\n                ...state,\r\n            }\r\n        case actionTypes.FETCH_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                users: action.data\r\n            }\r\n        case actionTypes.FETCH_USER_FAILED:\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        case actionTypes.DELETE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                message: action.data\r\n            }\r\n        case actionTypes.DELETE_USER_FAILED:\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        case actionTypes.FETCH_TOPDOCTOR_SUCCESS:\r\n            return {\r\n                ...state,\r\n                topDoctors: action.data\r\n            }\r\n        case actionTypes.FETCH_TOPDOCTOR_FAILED:\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n\r\n        case actionTypes.FETCH_ALLDOCTOR_SUCCESS:\r\n            return {\r\n                ...state,\r\n                allDoctor: action.data\r\n            }\r\n        case actionTypes.FETCH_ALLDOCTOR_FAILED:\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n\r\n        case actionTypes.FETCH_SCHEDULE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                allSchedule: action.data\r\n            }\r\n        case actionTypes.FETCH_SCHEDULE_FAILED:\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        case actionTypes.FETCH_REQUIREDOCTORINFO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                requireDoctorInfo: action.data\r\n            }\r\n        case actionTypes.FETCH_REQUIREDOCTORINFO_FAILED:\r\n            return {\r\n                ...state,\r\n\r\n            }\r\n        case actionTypes.SAVE_INFODOCTOR_SUCCESS:\r\n            return {\r\n                ...state,\r\n                dataError: action.data\r\n\r\n            }\r\n        case actionTypes.SAVE_INFODOCTOR_FAILED:\r\n            return {\r\n                ...state,\r\n                dataError: action.data\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default adminReducer;","import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    userInfo: null,\r\n    doctor: [],\r\n    extraInfoDoctor: {},\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                userInfo: action.userInfo\r\n            }\r\n        case actionTypes.USER_LOGIN_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                userInfo: null\r\n            }\r\n        case actionTypes.PROCESS_LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                userInfo: null\r\n            }\r\n        case actionTypes.FETCH_DETAILDOCTOR_SUCCESS:\r\n            return {\r\n                ...state,\r\n                doctor: action.data,\r\n\r\n            }\r\n        case actionTypes.FETCH_DETAILDOCTOR_FAILED:\r\n            return {\r\n                ...state,\r\n            }\r\n        case actionTypes.FETCH_EXTRAINFODOCTOR_SUCCESS:\r\n            return {\r\n                ...state,\r\n                extraInfoDoctor: action.data,\r\n\r\n            }\r\n        case actionTypes.FETCH_EXTRAINFODOCTOR_FAILED:\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer;","import {combineReducers} from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport appReducer from \"./appReducer\";\r\nimport adminReducer from \"./adminReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from 'redux-persist';\r\n\r\nconst persistCommonConfig = {\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2,\r\n};\r\n\r\nconst userPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'user',\r\n    whitelist: ['isLoggedIn', 'userInfo']\r\n};\r\n\r\nconst appPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'app',\r\n    whitelist: ['language']\r\n};\r\n\r\nexport default (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    user: persistReducer(userPersistConfig, userReducer),\r\n    app: persistReducer(appPersistConfig, appReducer),\r\n    admin: adminReducer\r\n})","import { logger } from \"redux-logger\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { createStateSyncMiddleware } from 'redux-state-sync';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nimport createRootReducer from './store/reducers/rootReducer';\r\nimport actionTypes from './store/actions/actionTypes';\r\n\r\nconst environment = process.env.NODE_ENV || \"development\";\r\nlet isDevelopment = environment === \"development\";\r\n\r\n//hide redux logs\r\nisDevelopment = false;\r\n\r\n\r\nexport const history = createBrowserHistory({ basename: process.env.REACT_APP_ROUTER_BASE_NAME });\r\n\r\nconst reduxStateSyncConfig = {\r\n    whitelist: [\r\n        actionTypes.APP_START_UP_COMPLETE,\r\n    ]\r\n}\r\n\r\nconst rootReducer = createRootReducer(history);\r\nconst middleware = [\r\n    routerMiddleware(history),\r\n    thunkMiddleware,\r\n    createStateSyncMiddleware(reduxStateSyncConfig),\r\n]\r\nif (isDevelopment) middleware.push(logger);\r\n\r\nconst composeEnhancers = (isDevelopment && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\r\n\r\nconst reduxStore = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware)),\r\n)\r\n\r\nexport const dispatch = reduxStore.dispatch;\r\n\r\nexport const persistor = persistStore(reduxStore);\r\n\r\nexport default reduxStore;","import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\r\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n\r\nexport const userIsAuthenticated = connectedRouterRedirect({\r\n    authenticatedSelector: state => state.user.isLoggedIn,\r\n    wrapperDisplayName: 'UserIsAuthenticated',\r\n    redirectPath: '/login'\r\n});\r\n\r\nexport const userIsNotAuthenticated = connectedRouterRedirect({\r\n    // Want to redirect the user when they are authenticated\r\n    authenticatedSelector: state => !state.user.isLoggedIn,\r\n    wrapperDisplayName: 'UserIsNotAuthenticated',\r\n    redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || '/',\r\n    allowRedirectBack: false\r\n});","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { role } from '../utils';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        const { isLoggedIn } = this.props;\r\n        let linkToRedirect = '/login';\r\n        if (isLoggedIn && this.props.userInfo.roleId === role.ADMIN) {\r\n            linkToRedirect = '/system/user-redux';\r\n        }\r\n        if (isLoggedIn && this.props.userInfo.roleId === role.DOCTOR) {\r\n            linkToRedirect = '/doctor/manage-schedule';\r\n        }\r\n\r\n\r\n        return (\r\n            <Redirect to={linkToRedirect} />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        userInfo: state.user.userInfo,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { push } from \"connected-react-router\";\r\n\r\nimport * as actions from \"../../store/actions\";\r\nimport { handleLoginAPI } from \"../../services/userService\"\r\nimport '../Auth/login.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            isShowPassword: false,\r\n            errorMessage: \"\",\r\n        }\r\n    }\r\n\r\n    handleOnchangeUsername = (event) => {\r\n        this.setState({\r\n            username: event.target.value,\r\n        },)\r\n    }\r\n\r\n    handleOnchangePassword = (event) => {\r\n        this.setState({\r\n            password: event.target.value,\r\n        })\r\n    }\r\n\r\n    handleLogin = async () => {\r\n        this.setState({\r\n            errorMessage: \"\",\r\n        })\r\n        try {\r\n            let dataMess = await handleLoginAPI(this.state.username, this.state.password);\r\n            console.log(dataMess.data);\r\n\r\n            if (dataMess.data) {\r\n                if (dataMess.data.errCode != 0) {\r\n                    this.setState({\r\n                        errorMessage: dataMess.data.message,\r\n                    })\r\n                } else {\r\n                    this.props.userLoginAccess(dataMess.data.userData.user)\r\n                    console.log('Login succeed');\r\n                }\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error.response);\r\n            if (error.response) {\r\n                if (error.response.data) {\r\n                    this.setState({\r\n                        errorMessage: error.response.data.message,\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleHidePassword = () => {\r\n        this.setState({\r\n            isShowPassword: !this.state.isShowPassword,\r\n        })\r\n    }\r\n\r\n    handleOnKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            this.handleLogin();\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='login-background'>\r\n                <div className='login-container'>\r\n                    <h1 className='login-heading text-center mt-5 mb-5' >LOGIN</h1>\r\n                    <div className='login-content ms-3 me-3 fs-4'>\r\n                        <div className=\"mb-3 \">\r\n                            <label for=\"formGroupExampleInput\" className=\"form-label\">Email</label>\r\n                            <input type=\"email\"\r\n                                className=\"form-control\"\r\n                                id=\"formGroupExampleInput\"\r\n                                placeholder=\"example@gmail.com\"\r\n                                value={this.state.username}\r\n                                onChange={(event) => this.handleOnchangeUsername(event)}\r\n                                name='email'\r\n\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label for=\"formGroupExampleInput2\" className=\"form-label\">Password</label>\r\n                            <input\r\n                                type={this.state.isShowPassword ? 'text' : 'password'}\r\n                                className=\"form-control\"\r\n                                id=\"formGroupExampleInput2\"\r\n                                placeholder=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={(event) => this.handleOnchangePassword(event)}\r\n                                name='password'\r\n                                onKeyDown={(event) => this.handleOnKeyDown(event)}\r\n\r\n                            />\r\n                            <span className='hide-password' onClick={this.handleHidePassword} >\r\n                                <i class={this.state.isShowPassword ? \"fas fa-eye\" : \"far fa-eye-slash\"}></i>\r\n                            </span>\r\n                        </div>\r\n                        <span className='errorMessage fs-5' style={{ color: \"red\" }} >\r\n                            {this.state.errorMessage}\r\n                        </span>\r\n                        <button className='login-btn mt-5' onClick={this.handleLogin} >Login</button>\r\n                        <span className='forget-password d-block mt-3'>Forget Password?</span>\r\n                        <span className='login-option d-block mt-3 text-center fs-5'>Or login with:</span>\r\n                        <div className='login-social'>\r\n                            <div className='google' >\r\n                                <i class=\"fab fa-google\"></i>\r\n                            </div>\r\n                            <div className='facebook'>\r\n                                <i class=\"fab fa-facebook-f\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        userLoginFail: () => dispatch(actions.userLoginFail()),\r\n        userLoginAccess: (userinfo) => dispatch(actions.userLoginAccess(userinfo)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport {createUser} from '../../services/userService'\r\nclass ModalUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            address: \"\",\r\n            gender: \"\",\r\n            roleId: \"\",\r\n\r\n        };\r\n    }\r\n\r\n    handleOnchangeInput = (event, id) => {\r\n            let copyState = this.state;\r\n             copyState[id] = event.target.value;\r\n             this.setState({\r\n               ...copyState\r\n             })\r\n    }\r\n\r\n    handleCreateUser = async() => {\r\n        let userData = await createUser(this.state);\r\n        if(userData) {\r\n            this.setState({\r\n                errCode: userData.data.errCode,\r\n                errMessage: userData.data.message,\r\n            })\r\n            if(this.state.errCode === 0){\r\n                this.props.toggle();\r\n                await this.props.getAllUserById();\r\n            }\r\n        }\r\n        alert(this.state.errMessage)\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                isOpen={this.props.isOpen}\r\n                toggle={this.props.toggle}\r\n                size=\"lg\"\r\n            >\r\n\r\n                <ModalHeader toggle={this.props.toggle}>Create a new user</ModalHeader>\r\n                <ModalBody>\r\n                    <div className=\"col-12 mt-5\">\r\n                        <form className=\"row g-2 ms-5 me-5\" action=\"/create\" method=\"post\">\r\n                            <div className=\"col-md-6\">\r\n                                <label htmlFor=\"validationDefault01\" className=\"form-label\">First name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"validationDefault01\"\r\n                                    placeholder=\"VD: NGO\"\r\n                                    name=\"firstName\"\r\n                                    onChange={(event) => {this.handleOnchangeInput(event, 'firstName')}}\r\n                                    value={this.state.firstName}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <label htmlFor=\"validationDefault02\" className=\"form-label\">Last name</label>\r\n                                <input\r\n                                 type=\"text\"\r\n                                  className=\"form-control\"\r\n                                   id=\"validationDefault02\"\r\n                                    placeholder=\"VD: HOANG\"\r\n                                     name=\"lastName\"\r\n                                     onChange={(event) => {this.handleOnchangeInput(event, 'lastName')}}\r\n                                    value={this.state.lastName}\r\n\r\n                                      />\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <label htmlFor=\"validationDefault01\" className=\"form-label\">Email</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    name=\"email\"\r\n                                    onChange={(event) => {this.handleOnchangeInput(event, 'email')}}\r\n                                    value={this.state.email}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <label htmlFor=\"validationDefault02\" className=\"form-label\">Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    name=\"password\"\r\n                                    onChange={(event) => this.handleOnchangeInput(event, 'password')}\r\n                                    value={this.state.password}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <label htmlFor=\"validationDefault03\" className=\"form-label\">Address</label>\r\n                                <input\r\n                                 type=\"text\"\r\n                                  className=\"form-control\"\r\n                                   name=\"address\"\r\n                                   onChange={(event) => {this.handleOnchangeInput(event, 'address')}}\r\n                                   value={this.state.address}\r\n                                    />\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <label htmlFor=\"validationDefault04\" className=\"form-label\">Sex</label>\r\n                                <select\r\n                                 className=\"form-select\"\r\n                                  name=\"gender\"\r\n                                    onChange={(event) => {this.handleOnchangeInput(event, 'gender')}}\r\n                                    value={this.state.gender}\r\n                                     >\r\n                                    <option selected disabled value=\"\">Choose...</option>\r\n                                    <option value=\"1\" >Male</option>\r\n                                    <option value=\"0\">Female</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <label htmlFor=\"validationDefault04\" className=\"form-label\">Role</label>\r\n                                <select\r\n                                className=\"form-select\"\r\n                                 name=\"role\"  onChange={(event) => {this.handleOnchangeInput(event, 'roleId')}}\r\n                                 value={this.state.roleId}\r\n                                 >\r\n                                    <option selected disabled value=\"\">Choose...</option>\r\n                                    <option value=\"1\" >R1</option>\r\n                                    <option value=\"2\">R2</option>\r\n                                </select>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={this.handleCreateUser}>\r\n                        Create\r\n                    </Button>{' '}\r\n                    <Button color=\"secondary\" onClick={this.props.toggle}>\r\n                        Cancel\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport _ from 'lodash';\r\nclass ModalEditUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id:\"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            address: \"\",\r\n            gender: \"\",\r\n            roleId: \"\",\r\n\r\n        };\r\n    }\r\n\r\n    handleOnchangeInput = (event, id) => {\r\n            let copyState = this.state;\r\n             copyState[id] = event.target.value;\r\n             this.setState({\r\n               ...copyState\r\n             })\r\n    }\r\n\r\n    handleSaveChange = () => {\r\n       this.props.editUser(this.state);\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {   \r\n        let user = this.props.currentUser;\r\n        if(user && !_.isEmpty(user)) {\r\n            this.setState({\r\n                id: user.id,\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                email: user.email,\r\n                password: user.password,\r\n                address: user.address,\r\n                gender: user.gender,\r\n                roleId: user.roleId,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                isOpen={this.props.isOpen}\r\n                toggle={this.props.toggle}\r\n                size=\"lg\"\r\n            >\r\n\r\n                <ModalHeader toggle={this.props.toggle}>Edit user</ModalHeader>\r\n                <ModalBody>\r\n                    <div className=\"col-12 mt-5\">\r\n                        <form className=\"row g-2 ms-5 me-5\" action=\"/create\" method=\"post\">\r\n                            <div className=\"col-md-6\">\r\n                                <label htmlFor=\"validationDefault01\" className=\"form-label\">First name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"validationDefault01\"\r\n                                    placeholder=\"VD: NGO\"\r\n                                    name=\"firstName\"\r\n                                    onChange={(event) => {this.handleOnchangeInput(event, 'firstName')}}\r\n                                    value={this.state.firstName}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <label htmlFor=\"validationDefault02\" className=\"form-label\">Last name</label>\r\n                                <input\r\n                                 type=\"text\"\r\n                                  className=\"form-control\"\r\n                                   id=\"validationDefault02\"\r\n                                    placeholder=\"VD: HOANG\"\r\n                                     name=\"lastName\"\r\n                                     onChange={(event) => {this.handleOnchangeInput(event, 'lastName')}}\r\n                                    value={this.state.lastName}\r\n\r\n                                      />\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <label htmlFor=\"validationDefault01\" className=\"form-label\">Email</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    name=\"email\"\r\n                                    onChange={(event) => {this.handleOnchangeInput(event, 'email')}}\r\n                                    value={this.state.email}\r\n                                    disabled\r\n\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <label htmlFor=\"validationDefault02\" className=\"form-label\">Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    name=\"password\"\r\n                                    onChange={(event) => this.handleOnchangeInput(event, 'password')}\r\n                                    value={this.state.password}\r\n                                    disabled\r\n\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <label htmlFor=\"validationDefault03\" className=\"form-label\">Address</label>\r\n                                <input\r\n                                 type=\"text\"\r\n                                  className=\"form-control\"\r\n                                   name=\"address\"\r\n                                   onChange={(event) => {this.handleOnchangeInput(event, 'address')}}\r\n                                   value={this.state.address}\r\n                                    />\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <label htmlFor=\"validationDefault04\" className=\"form-label\">Sex</label>\r\n                                <select\r\n                                 className=\"form-select\"\r\n                                  name=\"gender\"\r\n                                    onChange={(event) => {this.handleOnchangeInput(event, 'gender')}}\r\n                                    value={this.state.gender}\r\n                                     >\r\n                                    <option selected disabled value=\"\">Choose...</option>\r\n                                    <option value=\"1\" >Male</option>\r\n                                    <option value=\"0\">Female</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <label htmlFor=\"validationDefault04\" className=\"form-label\">Role</label>\r\n                                <select\r\n                                className=\"form-select\"\r\n                                 name=\"role\"  onChange={(event) => {this.handleOnchangeInput(event, 'roleId')}}\r\n                                 value={this.state.roleId}\r\n                                 >\r\n                                    <option selected disabled value=\"\">Choose...</option>\r\n                                    <option value=\"1\" >R1</option>\r\n                                    <option value=\"2\">R2</option>\r\n                                </select>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={this.handleSaveChange}>\r\n                        Save Changes\r\n                    </Button>{' '}\r\n                    <Button color=\"secondary\" onClick={this.props.toggle}>\r\n                        Cancel\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalEditUser);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport \"./userManager.scss\";\r\nimport { getAllUser, deleteUser, updateUser } from '../../services/userService';\r\nimport ModalUser from '../System/modalUser'\r\nimport modalEditUser from './modalEditUser';\r\nimport ModalEditUser from './modalEditUser';\r\nclass UserManage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrUsers: [],\r\n            isShow: false,\r\n            isShowEditModal:false,\r\n            editUser: {},\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n       await this.getAllUserById();\r\n    }\r\n\r\n    getAllUserById = async() => {\r\n        let user = await getAllUser(\"ALL\");\r\n        if (user) {\r\n            this.setState({\r\n                arrUsers: user.data.userData.user,\r\n            })\r\n            console.log(this.state.arrUsers);\r\n        }\r\n    }\r\n\r\n    handleModalUser = () => {\r\n        this.setState({\r\n            isShow: !this.state.isShow,\r\n        })\r\n    }\r\n\r\n    handleEditModalUser = (user) => {\r\n        this.setState({\r\n            isShowEditModal: !this.state.isShowEditModal,\r\n            editUser: user,\r\n        })\r\n    }\r\n\r\n    doEditUser = async(user) => {\r\n        try {\r\n            let res = await updateUser(user);\r\n            if(res && res.data.errCode === 0 ) {\r\n                this.handleEditModalUser();\r\n                await this.getAllUserById();\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n       \r\n    }\r\n\r\n    async handleDeleteUser(user){\r\n    //    try {\r\n    //      let res = await deleteUser(user.id);\r\n    //      if(res && res.data.errCode === 0 ) {\r\n    //         await this.getAllUserById();\r\n    //      }\r\n        \r\n    //    } catch (error) {\r\n    //        console.log(error);\r\n    //    }\r\n    console.log(user)\r\n    }\r\n\r\n    // handleEditUser = async(user) => {\r\n\r\n    // }\r\n\r\n    \r\n\r\n\r\n\r\n    render() {\r\n        let allUser = this.state.arrUsers;\r\n        return (\r\n            <div className=\"container\">\r\n                <h2 className='title'>Manage users with React</h2>\r\n                <button type=\"button\" class=\"btn btn-primary mb-3\" onClick={this.handleModalUser} >\r\n                    <i class=\"fas fa-plus ms-1 me-1\"></i>\r\n                    Add New User\r\n                </button>\r\n                <div className='user-table w-100'>\r\n                    <table className='w-100'>\r\n                        <tr>\r\n                            <th>Email</th>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th>Address</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                        {\r\n                            allUser.map((value) => {\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{value.email}</td>\r\n                                        <td>{value.firstName}</td>\r\n                                        <td>{value.lastName}</td>\r\n                                        <td>{value.address}</td>\r\n                                        <td>\r\n                                            <button\r\n                                             className='btn-Edit me-5 w-25'\r\n                                             onClick={()=> this.handleEditModalUser(value)}\r\n                                             >Edit</button>\r\n                                            <button  \r\n                                            className='btn-Delete w-25'\r\n                                            onClick={()=>this.handleDeleteUser(value)}\r\n                                            >Delete</button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                )\r\n                            })\r\n                        }\r\n                    </table>\r\n                </div>\r\n                <ModalUser\r\n                    isOpen = {this.state.isShow} \r\n                    toggle = {this.handleModalUser}\r\n                    getAllUserById = {this.getAllUserById}\r\n                 />\r\n                {\r\n                    this.state.isShowEditModal && \r\n                    <ModalEditUser\r\n                     isOpen = {this.state.isShowEditModal} \r\n                     toggle = {this.handleEditModalUser}\r\n                     currentUser = {this.state.editUser}\r\n                     editUser = {this.doEditUser}\r\n                     />\r\n\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Navigator.scss';\r\n\r\nclass MenuGroup extends Component {\r\n\r\n    render() {\r\n        const { name, children } = this.props;\r\n        return (\r\n            <li className=\"menu-group\">\r\n                <div className=\"menu-group-name\">\r\n                    <FormattedMessage id={name} />\r\n                </div>\r\n                <ul className=\"menu-list list-unstyled\">\r\n                    {children}\r\n                </ul>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass Menu extends Component {\r\n\r\n    render() {\r\n        const { name, active, link, children, onClick, hasSubMenu, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"menu\" + (hasSubMenu ? \" has-sub-menu\" : \"\") + (\"\") + (active ? \" active\" : \"\")}>\r\n                {hasSubMenu ? (\r\n                    <Fragment>\r\n                        <span\r\n                            data-toggle=\"collapse\"\r\n                            className={\"menu-link collapsed\"}\r\n                            onClick={onClick}\r\n                            aria-expanded={\"false\"}\r\n                        >\r\n                            <FormattedMessage id={name} />\r\n                            <div className=\"icon-right\">\r\n                                <i className={\"far fa-angle-right\"} />\r\n                            </div>\r\n                        </span>\r\n                        <div>\r\n                            <ul className=\"sub-menu-list list-unstyled\">\r\n                                {children}\r\n                            </ul>\r\n                        </div>\r\n                    </Fragment>\r\n                ) : (\r\n                        <Link to={link} className=\"menu-link\" onClick={onLinkClick}>\r\n                            <FormattedMessage id={name} />\r\n                        </Link>\r\n                    )}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nclass SubMenu extends Component {\r\n\r\n    getItemClass = path => {\r\n        return this.props.location.pathname === path ? \"active\" : \"\";\r\n    };\r\n\r\n    render() {\r\n        const { name, link, onLinkClick } = this.props;\r\n        return (\r\n            <li className={\"sub-menu \" + this.getItemClass(link)}>\r\n                <Link to={link} className=\"sub-menu-link\" onClick={onLinkClick}>\r\n                    <FormattedMessage id={name} />\r\n                </Link>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nconst MenuGroupWithRouter = withRouter(MenuGroup);\r\nconst MenuWithRouter = withRouter(Menu);\r\nconst SubMenuWithRouter = withRouter(SubMenu);\r\n\r\nconst withRouterInnerRef = (WrappedComponent) => {\r\n\r\n    class InnerComponentWithRef extends React.Component {\r\n        render() {\r\n            const { forwardRef, ...rest } = this.props;\r\n            return <WrappedComponent {...rest} ref={forwardRef} />;\r\n        }\r\n    }\r\n\r\n    const ComponentWithRef = withRouter(InnerComponentWithRef, { withRef: true });\r\n\r\n    return React.forwardRef((props, ref) => {\r\n        return <ComponentWithRef {...props} forwardRef={ref} />;\r\n    });\r\n};\r\n\r\nclass Navigator extends Component {\r\n    state = {\r\n        expandedMenu: {}\r\n    };\r\n\r\n    toggle = (groupIndex, menuIndex) => {\r\n        const expandedMenu = {};\r\n        const needExpand = !(this.state.expandedMenu[groupIndex + '_' + menuIndex] === true);\r\n        if (needExpand) {\r\n            expandedMenu[groupIndex + '_' + menuIndex] = true;\r\n        }\r\n\r\n        this.setState({\r\n            expandedMenu: expandedMenu\r\n        });\r\n    };\r\n\r\n    isMenuHasSubMenuActive = (location, subMenus, link) => {\r\n        if (subMenus) {\r\n            if (subMenus.length === 0) {\r\n                return false;\r\n            }\r\n\r\n            const currentPath = location.pathname;\r\n            for (let i = 0; i < subMenus.length; i++) {\r\n                const subMenu = subMenus[i];\r\n                if (subMenu.link === currentPath) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (link) {\r\n            return this.props.location.pathname === link;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    checkActiveMenu = () => {\r\n        const { menus, location } = this.props;\r\n        outerLoop:\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const group = menus[i];\r\n            if (group.menus && group.menus.length > 0) {\r\n                for (let j = 0; j < group.menus.length; j++) {\r\n                    const menu = group.menus[j];\r\n                    if (menu.subMenus && menu.subMenus.length > 0) {\r\n                        if (this.isMenuHasSubMenuActive(location, menu.subMenus, null)) {\r\n                            const key = i + '_' + j;\r\n                            this.setState({\r\n                                expandedMenu: {\r\n                                    [key]: true\r\n                                }\r\n                            });\r\n                            break outerLoop;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.checkActiveMenu();\r\n    };\r\n\r\n    // componentWillReceiveProps(nextProps, prevState) {\r\n    //     const { location, setAccountMenuPath, setSettingMenuPath } = this.props;\r\n    //     const { location: nextLocation } = nextProps;\r\n    //     if (location !== nextLocation) {\r\n    //         let pathname = nextLocation && nextLocation.pathname;\r\n    //         if ((pathname.startsWith('/account/') || pathname.startsWith('/fds/account/'))) {\r\n    //             setAccountMenuPath(pathname);\r\n    //         }\r\n    //         if (pathname.startsWith('/settings/')) {\r\n    //             setSettingMenuPath(pathname);\r\n    //         };\r\n    //     };\r\n    // };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { location } = this.props;\r\n        const { location: prevLocation } = prevProps;\r\n        if (location !== prevLocation) {\r\n            this.checkActiveMenu();\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { menus, location, onLinkClick } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <ul className=\"navigator-menu list-unstyled\">\r\n                    {\r\n                        menus.map((group, groupIndex) => {\r\n                            return (\r\n                                <Fragment key={groupIndex}>\r\n                                    <MenuGroupWithRouter name={group.name}>\r\n                                        {group.menus ? (\r\n                                            group.menus.map((menu, menuIndex) => {\r\n                                                const isMenuHasSubMenuActive = this.isMenuHasSubMenuActive(location, menu.subMenus, menu.link);\r\n                                                const isSubMenuOpen = this.state.expandedMenu[groupIndex + '_' + menuIndex] === true;\r\n                                                return (\r\n                                                    <MenuWithRouter\r\n                                                        key={menuIndex}\r\n                                                        active={isMenuHasSubMenuActive}\r\n                                                        name={menu.name}\r\n                                                        link={menu.link}\r\n                                                        hasSubMenu={menu.subMenus}\r\n                                                        isOpen={isSubMenuOpen}\r\n                                                        onClick={() => this.toggle(groupIndex, menuIndex)}\r\n                                                        onLinkClick={onLinkClick}\r\n                                                    >\r\n                                                        {menu.subMenus && menu.subMenus.map((subMenu, subMenuIndex) => (\r\n                                                            <SubMenuWithRouter\r\n                                                                key={subMenuIndex}\r\n                                                                name={subMenu.name}\r\n                                                                link={subMenu.link}\r\n                                                                onClick={this.closeOtherExpand}\r\n                                                                onLinkClick={onLinkClick}\r\n                                                            />\r\n                                                        ))}\r\n                                                    </MenuWithRouter>\r\n                                                );\r\n                                            })\r\n                                        ) : null}\r\n                                    </MenuGroupWithRouter>\r\n                                </Fragment>\r\n                            );\r\n                        })\r\n                    }\r\n                </ul>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default withRouterInnerRef(connect(mapStateToProps, mapDispatchToProps)(Navigator));\r\n","export const adminMenu = [\r\n    { //hệ thống\r\n        name: 'admin.account.header', menus: [\r\n            // {\r\n            //     name: 'admin.account.manage-Admin',\r\n\r\n            //     // subMenus: [\r\n            //     //     { name: 'menu.system.system-administrator.user-manage', link: '/system/user-manage' },\r\n            //     //     { name: 'menu.system.system-administrator.product-manage', link: '/system/user-redux' },\r\n            //     // ]\r\n            // },\r\n            {\r\n                name: 'admin.account.manage-User',\r\n                link: '/system/user-manage',\r\n                // subMenus: [\r\n                //     { name: 'menu.system.system-administrator.user-manage', link: '/system/user-manage' },\r\n                //     { name: 'menu.system.system-administrator.product-manage', link: '/system/user-redux' },\r\n                // ]\r\n            },\r\n            {\r\n                name: 'admin.account.manage-User-Redux',\r\n                link: '/system/user-redux',\r\n                // subMenus: [\r\n                //     { name: 'menu.system.system-administrator.user-manage', link: '/system/user-manage' },\r\n                //     { name: 'menu.system.system-administrator.product-manage', link: '/system/user-redux' },\r\n                // ]\r\n            },\r\n            {\r\n                name: 'admin.account.manage-Doctor',\r\n                link: '/system/manage-doctor',\r\n                // subMenus: [\r\n                //     { name: 'menu.system.system-administrator.user-manage', link: '/system/user-manage' },\r\n                //     { name: 'menu.system.system-administrator.product-manage', link: '/system/user-redux' },\r\n                // ]\r\n            },\r\n            {\r\n                name: 'doctor.manage-schedule',\r\n                link: '/doctor/manage-schedule',\r\n                // subMenus: [\r\n                //     { name: 'menu.system.system-administrator.user-manage', link: '/system/user-manage' },\r\n                //     { name: 'menu.system.system-administrator.product-manage', link: '/system/user-redux' },\r\n                // ]\r\n            },\r\n            {\r\n                name: 'doctor.manage-patient',\r\n                link: '/doctor/manage-patient',\r\n                // subMenus: [\r\n                //     { name: 'menu.system.system-administrator.user-manage', link: '/system/user-manage' },\r\n                //     { name: 'menu.system.system-administrator.product-manage', link: '/system/user-redux' },\r\n                // ]\r\n            },\r\n        ]\r\n    },\r\n    { //hệ thống\r\n        name: 'admin.clinic.header', menus: [\r\n            {\r\n                name: \"admin.clinic.header\",\r\n                link: '/system/manage-clinic',\r\n            }\r\n\r\n\r\n        ]\r\n    },\r\n    { //hệ thống\r\n        name: 'admin.specialty.header',\r\n        menus: [\r\n            {\r\n                name: \"admin.specialty.header\",\r\n                link: '/system/manage-specialty',\r\n            }\r\n\r\n        ]\r\n    },\r\n    { //hệ thống\r\n        name: 'admin.handbook.header', menus: [\r\n            {\r\n                name: \"admin.handbook.header\",\r\n                link: '/system/manage-handbook',\r\n            }\r\n\r\n        ]\r\n    },\r\n];\r\n\r\nexport const doctorMenu = [\r\n    { //hệ thống\r\n        name: 'doctor.title',\r\n        menus: [\r\n            {\r\n                name: 'doctor.manage-schedule',\r\n                link: '/doctor/manage-schedule',\r\n            },\r\n            {\r\n                name: 'doctor.manage-patient',\r\n                link: '/doctor/manage-patient',\r\n            }\r\n        ]\r\n\r\n        // subMenus: [\r\n        //     { name: 'menu.system.system-administrator.user-manage', link: '/system/user-manage' },\r\n        //     { name: 'menu.system.system-administrator.product-manage', link: '/system/user-redux' },\r\n        // ]\r\n    },\r\n\r\n];","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from \"../../store/actions\";\r\nimport Navigator from '../../components/Navigator';\r\nimport { adminMenu, doctorMenu } from './menuApp';\r\nimport './Header.scss';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { languages, role } from '../../utils/constant';\r\nimport { isEmpty } from 'lodash';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menuApp: []\r\n        }\r\n    }\r\n\r\n    handleChangeLanguage(language) {\r\n        this.props.changeLanguageAppRedux(language);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { userInfo } = this.props;\r\n        let menu = [];\r\n        if (userInfo && !isEmpty(userInfo)) {\r\n            if (userInfo.roleId === role.ADMIN) {\r\n                menu = adminMenu;\r\n            }\r\n            if (userInfo.roleId === role.DOCTOR) {\r\n                menu = doctorMenu;\r\n            }\r\n\r\n            this.setState({\r\n                menuApp: menu,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { processLogout, language, userInfo } = this.props;\r\n        return (\r\n            <div className=\"header-container\">\r\n                {/* thanh navigator */}\r\n                <div className=\"header-tabs-container\">\r\n                    <Navigator menus={this.state.menuApp} />\r\n                </div>\r\n                <div className='header-setting'>\r\n                    <div className='welcome me-3' ><FormattedMessage id=\"homeHeader.welcome\" />, {userInfo.lastName} !</div>\r\n                    <div className='header-languages'>\r\n                        <span className={(language === languages.VI) ? \"language-vn active\" : \"language-vn\"} onClick={() => this.handleChangeLanguage(languages.VI)} >VN</span>\r\n                        <span className={(language === languages.EN) ? \"language-en active\" : \"language-en\"} onClick={() => this.handleChangeLanguage(languages.EN)}>EN</span>\r\n                    </div>\r\n\r\n\r\n                    {/* nút logout */}\r\n                    <div className=\"btn btn-logout\" onClick={processLogout}>\r\n                        <i className=\"fas fa-sign-out-alt\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        userInfo: state.user.userInfo,\r\n        lang: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changeLanguageAppRedux: (lang) => dispatch(actions.changeLanguage(lang))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../../store/actions';\r\nimport \"../userManager.scss\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport Select from 'react-select';\r\nimport './ManageDoctor.scss';\r\nimport { crud_actions } from '../../../utils';\r\nimport { languages } from '../../../utils';\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\nclass ManageDoctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contentHTML: '',\r\n            contentMarkdown: '',\r\n            description: '',\r\n            allDoctor: [],\r\n            selectedOption: '',\r\n            hasOldData: false,\r\n\r\n            allPrice: [],\r\n            allPayment: [],\r\n            allProvince: [],\r\n            allSpecialty: [],\r\n            allClinic: [],\r\n\r\n            nameClinic: '',\r\n            addressClinic: '',\r\n            selectedPrice: '',\r\n            selectedPayment: '',\r\n            selectedProvince: '',\r\n            selectedSpecialty: '',\r\n            selectedClinic: '',\r\n            note: ''\r\n\r\n        }\r\n    }\r\n\r\n    handleValidateInput() {\r\n        let isValid = true;\r\n        let arrInput = ['selectedOption', 'description', 'nameClinic', 'selectedPrice', 'selectedPayment', 'addressClinic', 'selectedProvince', 'selectedSpecialty', 'selectedClinic'];\r\n        for (let i = 0; i < arrInput.length; i++) {\r\n            if (!this.state[arrInput[i]]) {\r\n                isValid = false;\r\n                toast.warn(\"Bạn chưa điền \" + arrInput[i]);\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    handleSave = () => {\r\n        let isValidInput = this.handleValidateInput();\r\n        if (isValidInput === false)\r\n            return;\r\n        this.props.saveInfoDoctor({\r\n            contentHTML: this.state.contentHTML,\r\n            contentMarkdown: this.state.contentMarkdown,\r\n            description: this.state.description,\r\n            id: this.state.selectedOption.id,\r\n            action: this.state.hasOldData ? crud_actions.EDIT : crud_actions.CREATE,\r\n            clinicName: this.state.nameClinic,\r\n            addressClinic: this.state.addressClinic,\r\n            price: this.state.selectedPrice,\r\n            payment: this.state.selectedPayment,\r\n            province: this.state.selectedProvince,\r\n            specialty: this.state.selectedSpecialty,\r\n            clinic: this.state.selectedClinic,\r\n            note: this.state.note\r\n        })\r\n\r\n        this.setState({\r\n            contentHTML: '',\r\n            contentMarkdown: '',\r\n            description: '',\r\n            selectedOption: '',\r\n            hasOldData: false,\r\n            nameClinic: '',\r\n            addressClinic: '',\r\n            selectedPrice: '',\r\n            selectedPayment: '',\r\n            selectedProvince: '',\r\n            note: ''\r\n        })\r\n    }\r\n\r\n    handleEditorChange = ({ html, text }) => {\r\n        this.setState({\r\n            contentHTML: html,\r\n            contentMarkdown: text,\r\n        })\r\n    }\r\n\r\n    handleChange = (selectedOption) => {\r\n        console.log(selectedOption);\r\n        this.setState({ selectedOption });\r\n        this.props.getDetailDoctor(selectedOption.id);\r\n    };\r\n\r\n    handleRequireInfoChange = (selectedOption, value) => {\r\n        console.log(selectedOption);\r\n        let name = value.name;\r\n        let copyState = this.state;\r\n        copyState[name] = selectedOption;\r\n        this.setState({\r\n            ...copyState,\r\n        })\r\n        console.log(this.state);\r\n    }\r\n\r\n    handleInfoChange = (event, id) => {\r\n        let copyState = this.state;\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n        console.log(copyState);\r\n    }\r\n\r\n    convertInputData = (data, type) => {\r\n        let { lang } = this.props;\r\n        let result = [];\r\n        if (data && data.length > 0) {\r\n            if (type === \"DOCTOR\") {\r\n                data.map((item) => {\r\n                    return result.push({ value: `${item.firstName} ${item.lastName}`, label: `${item.firstName} ${item.lastName}`, id: item.id });\r\n                })\r\n            }\r\n            if (type === 'PRICE' || type === 'PAYMENT' || type === 'PROVINCE') {\r\n                data.map((item) => {\r\n                    return result.push({ value: item.keyMap, label: `${lang === languages.EN ? item.valueEn : item.valueVi}` });\r\n                });\r\n            }\r\n\r\n            if (type === \"SPECIALTY\") {\r\n                data.map((item) => {\r\n                    return result.push({ value: item.id, label: item.name });\r\n                });\r\n            }\r\n\r\n            if (type === \"CLINIC\") {\r\n                data.map((item) => {\r\n                    return result.push({ value: item.id, label: item.name });\r\n                });\r\n            }\r\n\r\n        }\r\n        return result;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAllDoctor();\r\n        // this.props.getAllClinic();\r\n        this.props.getRequireDoctorInfo();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let { requireDoctorInfo, allDoctor, detailDoctor, lang, dataErr } = this.props;\r\n        // console.log(allDoctor);\r\n        let arrDoctor = this.convertInputData(allDoctor, 'DOCTOR');\r\n        let arrPrice = this.convertInputData(requireDoctorInfo.prices, 'PRICE');\r\n        let arrPayment = this.convertInputData(requireDoctorInfo.payments, 'PAYMENT');\r\n        let arrProvince = this.convertInputData(requireDoctorInfo.provinces, 'PROVINCE');\r\n        let arrSpecialty = this.convertInputData(requireDoctorInfo.specialties, 'SPECIALTY')\r\n        let arrClinic = this.convertInputData(requireDoctorInfo.clinics, 'CLINIC')\r\n        if (prevProps.allDoctor != allDoctor) {\r\n            this.setState({\r\n                allDoctor: arrDoctor,\r\n            })\r\n        }\r\n\r\n        if (prevProps.detailDoctor != detailDoctor) {\r\n            let { Markdown, Doctor_Info } = detailDoctor;\r\n            this.setState({\r\n                contentHTML: Markdown.contentHTML ? Markdown.contentHTML : '',\r\n                contentMarkdown: Markdown.contentHTML ? Markdown.contentMarkdown : '',\r\n                description: Markdown.contentHTML ? Markdown.description : '',\r\n                hasOldData: Markdown.contentHTML ? true : false,\r\n                nameClinic: Doctor_Info.nameClinic ? Doctor_Info.nameClinic : '',\r\n                addressClinic: Doctor_Info.addressClinic ? Doctor_Info.addressClinic : '',\r\n                selectedPrice: { label: lang === languages.EN ? Doctor_Info.priceData.valueEn : Doctor_Info.priceData.valueVi, value: Doctor_Info.priceID },\r\n                selectedPayment: { label: lang === languages.EN ? Doctor_Info.paymentData.valueEn : Doctor_Info.paymentData.valueVi, value: Doctor_Info.paymentID },\r\n                selectedProvince: { label: lang === languages.EN ? Doctor_Info.provinceData.valueEn : Doctor_Info.provinceData.valueVi, value: Doctor_Info.provinceID },\r\n                // selectedSpecialty: { label: \"Co xuong khop\", value: Doctor_Info.specialtyID },\r\n                note: Doctor_Info.note\r\n            })\r\n        }\r\n\r\n        if (prevProps.requireDoctorInfo != requireDoctorInfo) {\r\n            this.setState({\r\n                allPrice: arrPrice,\r\n                allPayment: arrPayment,\r\n                allProvince: arrProvince,\r\n                allSpecialty: arrSpecialty,\r\n                allClinic: arrClinic\r\n            })\r\n        }\r\n\r\n        if (prevProps.lang != lang) {\r\n            this.setState({\r\n                allPrice: arrPrice,\r\n                allPayment: arrPayment,\r\n                allProvince: arrProvince,\r\n                allSpecialty: arrSpecialty,\r\n                allClinic: arrClinic\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let { contentHTML, contentMarkdown, description, hasOldData, allPrice,\r\n            allPayment, allProvince, allDoctor, allSpecialty, allClinic, selectedOption, selectedSpecialty, selectedClinic, selectedPrice,\r\n            selectedPayment, selectedProvince, nameClinic, addressClinic, note } = this.state;\r\n        return (\r\n            <div className='manage-doctor' >\r\n                <div className='manage-doctor__title ' ><FormattedMessage id=\"admin.account.manage-Doctor\" /></div>\r\n\r\n                <div className='row manage-doctor__wrapper' >\r\n                    <div className='manage-doctor__optional' >\r\n                        <label className='d-block p-3 fs-4' ><FormattedMessage id=\"doctor.choose-doctor\" /></label>\r\n                        <Select\r\n                            name={'doctorSelection'}\r\n                            onChange={this.handleChange}\r\n                            className='manage-doctor__optional--input'\r\n                            value={selectedOption}\r\n                            options={allDoctor}\r\n                        />\r\n                    </div>\r\n                    <div className='manage-doctor__info' >\r\n                        <label className='d-block p-3 fs-4' ><FormattedMessage id=\"doctor.infor\" /></label>\r\n                        <textarea\r\n                            onChange={(event) => this.handleInfoChange(event, 'description')}\r\n                            value={description}\r\n                        />\r\n                    </div>\r\n                    <div className='col-4 manage-doctor__nameClinic mt-3 '>\r\n                        <label><FormattedMessage id=\"doctor.name-clinic\" /></label>\r\n                        <input\r\n                            className='form-control'\r\n                            value={nameClinic}\r\n                            onChange={(event) => this.handleInfoChange(event, 'nameClinic')}\r\n                        >\r\n                        </input>\r\n                    </div>\r\n                    <div className='col-4 manage-doctor__specialty mt-3 '>\r\n                        <label><FormattedMessage id=\"doctor.specialty\" /></label>\r\n                        <Select\r\n                            name={'selectedSpecialty'}\r\n                            onChange={this.handleRequireInfoChange}\r\n                            options={allSpecialty}\r\n                            value={selectedSpecialty}\r\n\r\n                        />\r\n                    </div>\r\n                    <div className='col-4 manage-doctor__clinic mt-3 '>\r\n                        <label><FormattedMessage id=\"doctor.clinic\" /></label>\r\n                        <Select\r\n                            name={'selectedClinic'}\r\n                            onChange={this.handleRequireInfoChange}\r\n                            options={allClinic}\r\n                            value={selectedClinic}\r\n                        />\r\n                    </div>\r\n                    <div className='col-4 manage-doctor__price mt-3 '>\r\n                        <label><FormattedMessage id=\"doctor.price\" /></label>\r\n                        <Select\r\n                            name={'selectedPrice'}\r\n                            onChange={this.handleRequireInfoChange}\r\n                            options={allPrice}\r\n                            value={selectedPrice}\r\n                        />\r\n                    </div>\r\n                    <div className='col-4 manage-doctor__payment mt-3 '>\r\n                        <label><FormattedMessage id=\"doctor.payment\" /></label>\r\n                        <Select\r\n                            value={selectedPayment}\r\n                            name={'selectedPayment'}\r\n                            onChange={this.handleRequireInfoChange}\r\n                            options={allPayment}\r\n                        />\r\n                    </div>\r\n                    <div className='col-4 manage-doctor__addClinic mt-3'>\r\n                        <label><FormattedMessage id=\"doctor.address-clinic\" /></label>\r\n                        <input\r\n                            className='form-control'\r\n                            value={addressClinic}\r\n                            onChange={(event) => this.handleInfoChange(event, 'addressClinic')}\r\n                        ></input>\r\n\r\n                    </div>\r\n                    <div className='col-4 manage-doctor__province mt-3'>\r\n                        <label><FormattedMessage id=\"doctor.province\" /></label>\r\n                        <Select\r\n                            name={'selectedProvince'}\r\n                            onChange={this.handleRequireInfoChange}\r\n                            options={allProvince}\r\n                            value={selectedProvince}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='col-4 manage-doctor__note mt-3'>\r\n                        <label><FormattedMessage id=\"doctor.note\" /></label>\r\n                        <input\r\n                            className='form-control'\r\n                            value={note}\r\n                            onChange={(event) => this.handleInfoChange(event, 'note')}\r\n                        ></input>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='manage-doctor__editor mt-5' >\r\n                    <MdEditor\r\n                        style={{ height: '500px' }}\r\n                        renderHTML={text => mdParser.render(text)}\r\n                        onChange={this.handleEditorChange}\r\n                        value={contentMarkdown}\r\n                    />\r\n                </div>\r\n                <button\r\n                    className={hasOldData ? 'manage-doctor__save btn-warning' : 'manage-doctor__save btn-primary'}\r\n                    onClick={this.handleSave}\r\n                >{hasOldData ? <FormattedMessage id=\"doctor.btn.save\" /> : <FormattedMessage id=\"doctor.btn.create\" />}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allDoctor: state.admin.allDoctor,\r\n        detailDoctor: state.user.doctor,\r\n        requireDoctorInfo: state.admin.requireDoctorInfo,\r\n        lang: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllDoctor: () => dispatch(action.fetchAllDoctorStart()),\r\n        // getAllClinic: () => dispatch(action.fetchAllClinicStart()),\r\n        saveInfoDoctor: (data) => dispatch(action.SaveInfoDoctorStart(data)),\r\n        getDetailDoctor: (doctorId) => dispatch(action.fetchDetailDoctorStart(doctorId)),\r\n        getRequireDoctorInfo: () => dispatch(action.fetchRequireDoctorStart()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport UserManage from '../containers/System/UserManage';\r\nimport UserRedux from '../containers/System/Admin/UserRedux';\r\nimport Header from '../containers/Header/Header';\r\nimport ManageDoctor from '../containers/System/Admin/ManageDoctor';\r\nimport ManageSpecialty from '../containers/System/Admin/ManageSpecialty';\r\nimport ManageClinic from '../containers/System/Admin/ManageClinic';\r\nimport ManageHandbook from '../containers/System/Admin/ManageHandbook';\r\n\r\n\r\nclass System extends Component {\r\n    render() {\r\n        const { systemMenuPath } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.isLoggedIn && <Header />}\r\n                <div className=\"system-container\">\r\n                    <div className=\"system-list\">\r\n                        <Switch>\r\n                            <Route path=\"/system/user-manage\" component={UserManage} />\r\n                            <Route path=\"/system/user-redux\" component={UserRedux} />\r\n                            <Route path=\"/system/manage-doctor\" component={ManageDoctor} />\r\n                            <Route path=\"/system/manage-specialty\" component={ManageSpecialty} />\r\n                            <Route path=\"/system/manage-clinic\" component={ManageClinic} />\r\n                            <Route path=\"/system/manage-handbook\" component={ManageHandbook} />\r\n\r\n\r\n                            <Route component={() => { return (<Redirect to={systemMenuPath} />) }} />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        systemMenuPath: state.app.systemMenuPath,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(System);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport \"flatpickr/dist/themes/material_green.css\";\r\nimport DatePicker from 'react-flatpickr';\r\nimport * as action from '../../../store/actions';\r\nimport './ManageSchedule.scss';\r\nimport { languages } from '../../../utils';\r\nimport moment from 'moment/moment';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nclass ManageSchedule extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allDoctor: '',\r\n            allSchedule: '',\r\n            selectedOption: '',\r\n            currentDate: new Date(),\r\n        }\r\n    }\r\n    handleChange = (selectedOption) => {\r\n        this.setState({ selectedOption });\r\n        console.log(this.state.selectedOption);\r\n    };\r\n\r\n    handleDateChange = (date) => {\r\n        this.setState({\r\n            currentDate: date,\r\n        })\r\n    }\r\n\r\n    handleChecked = (item) => {\r\n        this.state.allSchedule.map((schedule) => {\r\n            if (item.id === schedule.id)\r\n                schedule.isSelected = !schedule.isSelected;\r\n        })\r\n        this.setState({\r\n            allSchedule: this.state.allSchedule,\r\n        })\r\n    }\r\n\r\n    handleSaveSchedule = () => {\r\n        let { selectedOption, currentDate, allSchedule } = this.state;\r\n        let result = [];\r\n        if (!selectedOption) {\r\n            toast.warn(\"Missing data input\");\r\n            return;\r\n        }\r\n        if (allSchedule && allSchedule.length > 0) {\r\n            let arrSelected = allSchedule.filter((item) => {\r\n                return item.isSelected === true;\r\n            })\r\n\r\n            if (arrSelected && arrSelected.length > 0) {\r\n                arrSelected.map((select) => {\r\n                    let objData = {};\r\n                    objData.doctorID = selectedOption.id;\r\n                    objData.date = new Date(currentDate).getTime();\r\n                    objData.timeType = select.keyMap;\r\n                    result.push(objData);\r\n                })\r\n                this.props.createSchedule(result);\r\n            } else {\r\n                toast.warn(\"Missing data time\");\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.getAllDoctor();\r\n        this.props.getAllSchedule();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.allDoctor != this.props.allDoctor) {\r\n            let arrDoctor = [];\r\n            this.props.allDoctor.map((doctor) => {\r\n                return arrDoctor.push({ value: `${doctor.firstName} ${doctor.lastName}`, label: `${doctor.firstName} ${doctor.lastName}`, id: doctor.id });\r\n            })\r\n            this.setState({\r\n                allDoctor: arrDoctor,\r\n            })\r\n        }\r\n\r\n        if (prevProps.allSchedule != this.props.allSchedule) {\r\n            let arrSchedule = [];\r\n            this.props.allSchedule.map((schedule) => {\r\n                return arrSchedule.push({ ...schedule, isSelected: false });\r\n            })\r\n            this.setState({\r\n                allSchedule: arrSchedule,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { allSchedule, isChecked, currentDate } = this.state;\r\n        console.log(new Date(currentDate).getTime());\r\n        return (\r\n            <div className='manage-schedule-container' >\r\n                <div className='manage-schedule__title' >\r\n                    <FormattedMessage id=\"doctor.manage-schedule\" />\r\n                </div>\r\n\r\n                <div className='manage-schedule__form' >\r\n                    <div className='col-4 manage-schedule__selected ' >\r\n                        <label> <FormattedMessage id=\"doctor.choose-doctor\" /></label>\r\n                        <Select\r\n                            value={this.state.selectedOption}\r\n                            onChange={this.handleChange}\r\n                            options={this.state.allDoctor}\r\n\r\n                        />\r\n                    </div>\r\n                    <div className='col-4 manage-schedule__date-picked' >\r\n                        <label className='d-block ' > <FormattedMessage id=\"doctor.choose-time\" /></label>\r\n                        <DatePicker\r\n                            className='date-picker'\r\n                            value={new Date(currentDate).getTime()}\r\n                            options={{ minDate: 'today', dateFormat: \"d-m-Y\" }}\r\n                            onChange={(selectedDates, dateStr) => this.handleDateChange(selectedDates[0])}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='col-12 manage-schedule__time' >\r\n                    <h3 className='text-center'>Thời gian khám</h3>\r\n                    <ul className='col-6 manage-schedule__time--list' >\r\n                        {allSchedule && allSchedule.map((schedule, index) => {\r\n                            return (\r\n                                <li\r\n                                    key={index}\r\n                                    className={`manage-schedule__time--item ${schedule.isSelected ? 'btn-success' : ''} `}\r\n                                    onClick={() => this.handleChecked(schedule)}\r\n                                >\r\n                                    {this.props.lang === languages.EN ? schedule.valueEn : schedule.valueVi}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                    <button\r\n                        className='btn-primary btn-save '\r\n                        onClick={this.handleSaveSchedule}\r\n                    >Lưu thông tin</button>\r\n                </div>\r\n                {/* ${isChecked ? 'btn-success' : '' */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allDoctor: state.admin.allDoctor,\r\n        allSchedule: state.admin.allSchedule,\r\n        lang: state.app.language,\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllDoctor: () => dispatch(action.fetchAllDoctorStart()),\r\n        getAllSchedule: () => dispatch(action.fetchScheduleStart()),\r\n        createSchedule: (data) => dispatch(action.createScheduleStart(data)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSchedule);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { NumericFormat } from 'react-number-format';\r\nimport \"flatpickr/dist/themes/material_green.css\";\r\nimport { toast } from 'react-toastify';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport './RemedyModal.scss';\r\nimport * as action from '../../store/actions';\r\nimport { languages } from '../../utils';\r\nimport { isEmpty } from 'lodash';\r\nimport { CommonUtils } from '../../utils';\r\nimport { confirmRemedy } from '../../services/userService';\r\n\r\n\r\nclass RemedyModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            imageBase64: '',\r\n            patientId: '',\r\n            doctorId: '',\r\n            name: '',\r\n\r\n        }\r\n    }\r\n\r\n    handleConfirm = async () => {\r\n        // let { email, imageBase64, doctorId, patientId, name } = this.state;\r\n        let response = await confirmRemedy({\r\n            ...this.state,\r\n            language: this.props.lang\r\n        })\r\n        console.log(response);\r\n\r\n        if (response) {\r\n            toast.success(\"Thành công!\");\r\n        } else {\r\n            toast.error(\"Thất bại!\")\r\n        }\r\n    }\r\n\r\n    handleOnChangeFile = async (element) => {\r\n        let files = element.target.files[0];\r\n        // console.log(files);\r\n        if (files) {\r\n            let base64 = await CommonUtils.getBase64(files);\r\n            this.setState({\r\n                imageBase64: base64,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.patientEmail !== this.props.patientEmail) {\r\n            this.setState({\r\n                email: this.props.patientEmail,\r\n            })\r\n        }\r\n        if (prevProps.patientId !== this.props.patientId) {\r\n            this.setState({\r\n                patientId: this.props.patientId,\r\n            })\r\n        }\r\n        if (prevProps.doctorId !== this.props.doctorId) {\r\n            this.setState({\r\n                doctorId: this.props.doctorId,\r\n            })\r\n        }\r\n        if (prevProps.patientName !== this.props.patientName) {\r\n            this.setState({\r\n                name: this.props.patientName,\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let { email } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <Modal\r\n                    isOpen={this.props.isModalShow}\r\n                    toggle={this.props.toggle}\r\n                    size='lg'\r\n                    centered\r\n                >\r\n                    <ModalHeader\r\n                        className='remedy-modal__heading '\r\n                    >\r\n                        Xác nhận đã khám\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <div className='remedy-modal__body' >\r\n                            <div className=\"col-md-6\">\r\n                                <label htmlFor=\"validationDefault01\" className=\"form-label\">Email bệnh nhân</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    disabled\r\n                                    value={email}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <label htmlFor=\"validationDefault02\" className=\"form-label mt-3\">Thông tin đơn thuốc</label>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    onChange={(event) => this.handleOnChangeFile(event)}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button\r\n                            className=\"btn-cancel\"\r\n                            onClick={this.props.toggle}\r\n                        >\r\n                            <FormattedMessage id='remedy-modal.btn.cancel' />\r\n                        </Button>\r\n                        <Button\r\n                            className=\"btn-confirm\"\r\n                            onClick={this.handleConfirm}\r\n                        >\r\n                            <FormattedMessage id='remedy-modal.btn.confirm' />\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n        dataGender: state.admin.genders,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        confirmBooking: (dataBooking) => dispatch(action.confirmBookingStart(dataBooking)),\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RemedyModal);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport \"flatpickr/dist/themes/material_green.css\";\r\nimport DatePicker from 'react-flatpickr';\r\nimport * as action from '../../../store/actions';\r\nimport './ManagePatient.scss';\r\nimport { getAllBooking } from '../../../services/userService';\r\nimport { languages } from '../../../utils';\r\nimport moment from 'moment/moment';\r\nimport { toast } from 'react-toastify';\r\nimport RemedyModal from '../RemedyModal';\r\n\r\n\r\nclass ManagePatient extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentDate: '',\r\n            doctorId: '',\r\n            dataBooking: [],\r\n            isModalShow: false,\r\n            patientData: '',\r\n        }\r\n    }\r\n\r\n    handleDateChange = async (date) => {\r\n        let dataDate = date.getTime();\r\n\r\n        let doctorId = this.props.userInfo.id;\r\n        let response = await getAllBooking(doctorId, dataDate);\r\n        this.setState({\r\n            dataBooking: response.data.dataBooking,\r\n            currentDate: date,\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    handleShowRemedyModal = (data) => {\r\n        this.setState({\r\n            isModalShow: !this.state.isModalShow,\r\n            patientData: { ...data.patientData, doctorId: data.doctorID, patientId: data.patientID } ?? '',\r\n        })\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // if (prevProps.userInfo.id != this.props.userInfo.id) {\r\n        //     this.setState({\r\n        //         doctorId: this.props.userInfo.id,\r\n        //     })\r\n        //     console.log('hello');\r\n        // }\r\n\r\n    }\r\n\r\n    render() {\r\n        let { currentDate, dataBooking, isModalShow, patientData } = this.state;\r\n        return (\r\n            <div className='manage-patient' >\r\n                <h3 className='manage-patient__heading' >Quản lí bệnh nhân </h3>\r\n                <div className='manage-patient__date' >\r\n                    <label htmlFor='selected' className='d-block fs-5' >Ngày khám</label>\r\n                    <DatePicker\r\n                        className='manage-patient__date--picker'\r\n                        value={new Date(currentDate).getTime()}\r\n                        // options={{ minDate: 'today', dateFormat: \"d-m-Y\" }}\r\n                        onChange={(selectedDates, dateStr) => this.handleDateChange(selectedDates[0])}\r\n                    />\r\n                </div>\r\n\r\n                <div className='manage-patient__table'>\r\n                    <table className='w-100'>\r\n                        <tr>\r\n                            <th>STT</th>\r\n                            <th>Thời gian</th>\r\n                            <th>Họ tên</th>\r\n                            <th>Email</th>\r\n                            <th>Số điện thoại</th>\r\n                            <th>Giới tính</th>\r\n                            <th>Địa chỉ</th>\r\n                            <th>Trạng thái</th>\r\n\r\n\r\n                        </tr>\r\n                        {dataBooking && dataBooking.length > 0 && dataBooking.map((item, index) => {\r\n                            return (\r\n                                <tr key={index} >\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{item.bookingTimeData.valueVi}</td>\r\n                                    <td>{item.patientData.lastName}</td>\r\n                                    <td>{item.patientData.email}</td>\r\n                                    <td>{item.patientData.phoneNumber}</td>\r\n                                    <td>{item.patientData.genderData.valueVi}</td>\r\n                                    <td>{item.patientData.address}</td>\r\n                                    <td>\r\n                                        <button\r\n                                            className='confirm-btn'\r\n                                            onClick={() => this.handleShowRemedyModal(item)}\r\n                                        >Xác nhận đã khám</button>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            );\r\n\r\n                        })}\r\n                    </table>\r\n                </div>\r\n                <RemedyModal\r\n                    isModalShow={isModalShow}\r\n                    patientEmail={patientData.email}\r\n                    patientId={patientData.patientId}\r\n                    doctorId={patientData.doctorId}\r\n                    patientName={patientData.lastName}\r\n                    toggle={this.handleShowRemedyModal}\r\n                // dataSchedule={dataTimePass}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allSchedule: state.admin.allSchedule,\r\n        lang: state.app.language,\r\n        userInfo: state.user.userInfo,\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAllSchedule: () => dispatch(action.fetchScheduleStart()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagePatient);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport ManageSchedule from '../containers/System/Doctor/ManageSchedule';\r\nimport ManageClinic from '../containers/System/Admin/ManageClinic';\r\nimport Header from '../containers/Header/Header';\r\nimport ManagePatient from '../containers/System/Doctor/ManagePatient';\r\nclass Doctor extends Component {\r\n    render() {\r\n        const { systemMenuPath } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.isLoggedIn && <Header />}\r\n                <div className=\"doctor-container\">\r\n                    <div className=\"doctor-list\">\r\n                        <Switch>\r\n                            <Route path=\"/doctor/manage-schedule\" component={ManageSchedule} />\r\n                            <Route path=\"/doctor/manage-patient\" component={ManagePatient} />\r\n                            <Route component={() => { return (<Redirect to={systemMenuPath} />) }} />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        systemMenuPath: state.app.systemMenuPath,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Doctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\r\nimport { FacebookProvider, Comments } from 'react-facebook';\r\n\r\nimport './DetailSpecialty.scss';\r\nimport HomeHeader from '../homeHeader';\r\nimport HomeFooter from '../homeFooter';\r\nimport ProfileDoctor from '../Doctor/ProfileDoctor';\r\nimport DoctorSchedule from '../Doctor/DoctorSchedule';\r\nimport DoctorExtraInfo from '../Doctor/DoctorExtraInfo';\r\nimport DetailSection from '../section/DetailSection';\r\nimport { getDetailSpecialty } from '../../../services/userService';\r\nimport * as action from '../../../store/actions';\r\nimport { languages } from '../../../utils';\r\n\r\nrequire('dotenv').config();\r\n\r\nclass DetailSpecialty extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            doctors: '',\r\n            description: '',\r\n\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        let detailSpecialty = await getDetailSpecialty(this.props.match.params.id);\r\n        console.log(detailSpecialty.data.detailSpecialty.description);\r\n        if (detailSpecialty.data && detailSpecialty.data.errCode === 0) {\r\n            this.setState({\r\n                description: detailSpecialty.data.detailSpecialty.description,\r\n                doctors: detailSpecialty.data.detailSpecialty.doctors,\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    render() {\r\n        let { doctors, description } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <HomeHeader isShowBanner={false} />\r\n                <div className='specialty-container' >\r\n                    <div className='specialty-info' >\r\n                        {description &&\r\n                            <DetailSection\r\n                                dataDetail={description}\r\n                            />\r\n                        }\r\n                    </div>\r\n                    {doctors && doctors.length > 0 && doctors.map((doctor, index) => {\r\n                        return (<div key={index} className='specialty-doctor' >\r\n                            <div className='specialty-doctor__profile' >\r\n                                <ProfileDoctor\r\n                                    doctorID={doctor.doctorID}\r\n                                    isShowSchedule={false}\r\n                                    isShowDescription={true}\r\n                                    isShowLocation={true}\r\n                                    isShowMoreLink={true}\r\n                                />\r\n                            </div>\r\n                            <div className='specialty-doctor__schedule' >\r\n                                <DoctorSchedule\r\n                                    doctorId={doctor.doctorID}\r\n                                />\r\n                                <DoctorExtraInfo\r\n                                    doctorId={doctor.doctorID}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        )\r\n                    })}\r\n\r\n                    <div className='comment-plugin' >\r\n\r\n                    </div>\r\n                </div>\r\n                <HomeFooter />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailSpecialty);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './DetailClinic.scss';\r\nimport HomeHeader from '../homeHeader';\r\nimport HomeFooter from '../homeFooter';\r\nimport ProfileDoctor from '../Doctor/ProfileDoctor';\r\nimport DoctorSchedule from '../Doctor/DoctorSchedule';\r\nimport DoctorExtraInfo from '../Doctor/DoctorExtraInfo';\r\nimport DetailSection from '../section/DetailSection';\r\nimport { getDetailClinic } from '../../../services/userService';\r\nimport * as action from '../../../store/actions';\r\nimport { languages } from '../../../utils';\r\nimport { CommonUtils } from '../../../utils';\r\nclass DetailClinic extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            doctors: '',\r\n            description: '',\r\n            introduction: '',\r\n            name: '',\r\n            address: '',\r\n            image: '',\r\n            banner: '',\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        let DetailClinic = await getDetailClinic(this.props.match.params.id);\r\n        console.log(DetailClinic);\r\n        if (DetailClinic.data && DetailClinic.data.errCode === 0) {\r\n            this.setState({\r\n                description: DetailClinic.data.detailClinic.description,\r\n                doctors: DetailClinic.data.detailClinic.doctors,\r\n                introduction: DetailClinic.data.detailClinic.introduction,\r\n                name: DetailClinic.data.detailClinic.name,\r\n                address: DetailClinic.data.detailClinic.address,\r\n                image: DetailClinic.data.detailClinic.image,\r\n                banner: DetailClinic.data.detailClinic.banner,\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n    render() {\r\n        let { doctors, description, introduction, name, image, banner, address } = this.state;\r\n        console.log(introduction);\r\n        return (\r\n            <React.Fragment>\r\n                <HomeHeader isShowBanner={false} />\r\n                <div className='clinic-container' >\r\n                    <div className='clinic-banner' style={{ backgroundImage: `url(${CommonUtils.encodeBase64(banner)})` }} >\r\n                        <div className='clinic-header' >\r\n                            <img src={CommonUtils.encodeBase64(image)} className='clinic-header__image' ></img>\r\n                            <div className='clinic-header__content' >\r\n                                <h3 className='clinic-header__content--name' >{name}</h3>\r\n                                <p className='clinic-header__content--address' >{address}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='clinic-wrapper' >\r\n                        <div className='clinic-wrapper__introduction' >\r\n                            BookingCare là Nền tảng Y tế chăm sóc sức khỏe toàn diện hàng đầu Việt Nam kết nối người dùng với trên 200 bệnh viện - phòng khám uy tín, hơn 1,500 bác sĩ chuyên khoa giỏi và hàng nghìn dịch vụ, sản phẩm y tế chất lượng cao.\r\n                        </div>\r\n                        <div className='clinic-wrapper__description' >\r\n                            {introduction}\r\n                        </div>\r\n                        <div className='clinic-wrapper__detail' >\r\n                            <h5 className='clinic-wrapper__detail--heading' >Lời giới thiệu</h5>\r\n                            {description &&\r\n                                <DetailSection\r\n                                    dataDetail={description}\r\n                                />\r\n                            }\r\n                        </div>\r\n                        <div className='clinic-wrapper__doctor' >\r\n                            <h5 className='clinic-wrapper__doctor--heading' >Bác sĩ</h5>\r\n                            {doctors && doctors.length > 0 && doctors.map((doctor, index) => {\r\n                                return (<div key={index} className='clinic-doctor' >\r\n                                    <div className='clinic-doctor__profile' >\r\n                                        <ProfileDoctor\r\n                                            doctorID={doctor.doctorID}\r\n                                            isShowSchedule={false}\r\n                                            isShowDescription={true}\r\n                                            isShowLocation={true}\r\n                                            isShowMoreLink={true}\r\n                                        />\r\n                                    </div>\r\n                                    <div className='clinic-doctor__schedule' >\r\n                                        <DoctorSchedule\r\n                                            doctorId={doctor.doctorID}\r\n                                        />\r\n                                        <DoctorExtraInfo\r\n                                            doctorId={doctor.doctorID}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <HomeFooter />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailClinic);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nimport './slider.scss';\r\nimport { getAllHandbook } from '../../../services/userService';\r\nimport { CommonUtils } from '../../../utils';\r\n\r\nclass HandBookSection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            handbooks: []\r\n        }\r\n    }\r\n\r\n    getAllHandbook = async () => {\r\n        let handbooks = await getAllHandbook();\r\n        if (handbooks.data && handbooks.data.errCode === 0) {\r\n            this.setState({\r\n                handbooks: handbooks.data.handbooks,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleViewDetailHandbook = (id) => {\r\n        this.props.history.push(`/detail-handbook/${id}`);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getAllHandbook();\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        let { handbooks } = this.state;\r\n        // console.log(this.props.id);\r\n        return (\r\n            <div className='section'>\r\n                <div className='section-container'>\r\n                    {this.props.isShowHeader\r\n                        &&\r\n                        <div className='silder-heading'>\r\n                            <h3 className='slider-title'><FormattedMessage id=\"manage-section.handbook\" /></h3>\r\n                            <div className='slider-more-btn'>\r\n                                <a href=''><FormattedMessage id=\"common.more\" /></a>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <div className='section-content'>\r\n                        <Slider {...this.props}>\r\n                            {handbooks && handbooks.length > 0 && handbooks.map((item, index) => {\r\n                                if (item.id != this.props.id) {\r\n                                    return (\r\n                                        <div\r\n                                            key={index}\r\n                                            className='list-item'\r\n                                            onClick={() => this.handleViewDetailHandbook(item.id)}\r\n\r\n                                        >\r\n                                            <div\r\n                                                className='img-container handbook-img'\r\n                                                style={{\r\n                                                    backgroundImage: `url(${CommonUtils.encodeBase64(item.image)})`,\r\n                                                    backgroundSize: 'contain',\r\n                                                }}\r\n                                            ></div>\r\n                                            <a href=''>{item.title}</a>\r\n\r\n                                        </div>\r\n\r\n                                    );\r\n\r\n\r\n                                }\r\n                            })\r\n                                ||\r\n                                <div class=\"w-100 d-flex justify-content-center text-primary m-5\">\r\n                                    <div class=\"spinner-grow text-success\" role=\"status\">\r\n                                        <span class=\"visually-hidden\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        // changeLanguageAppRedux: (lang) => dispatch(changeLanguage(lang))\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HandBookSection));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\r\nimport moment from 'moment';\r\n\r\nimport './DetailHandbook.scss';\r\nimport HomeHeader from '../homeHeader';\r\nimport HomeFooter from '../homeFooter';\r\n\r\nimport DetailSection from '../section/DetailSection';\r\nimport * as action from '../../../store/actions';\r\nimport { languages } from '../../../utils';\r\nimport { CommonUtils } from '../../../utils';\r\nimport { getDetailHandbook } from '../../../services/userService';\r\nimport HandBookSection from '../section/handBookSection';\r\nimport { settings } from '../../../utils/constant';\r\n\r\nclass DetailHandbook extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            detailHandbook: '',\r\n        }\r\n    }\r\n\r\n    getDetailHandbook = async () => {\r\n        let detailHandbook = await getDetailHandbook(this.props.match.params.id);\r\n        if (detailHandbook && detailHandbook.data.errCode === 0) {\r\n            this.setState({\r\n                detailHandbook: detailHandbook.data.detailHandbook,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getDetailHandbook();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.location !== this.props.location) {\r\n            this.getDetailHandbook();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { detailHandbook } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <HomeHeader isShowBanner={false} />\r\n                <div className='detail-handbook-container' >\r\n                    <div className='detail-handbook__banner'  >\r\n                        <div className='overlay' ></div>\r\n                        <h1 className='detail-handbook__banner--title' >{detailHandbook.title}</h1>\r\n                    </div>\r\n                    <div className='detail-handbook__content' >\r\n                        <img src={CommonUtils.encodeBase64(detailHandbook.image || 'https://t3.ftcdn.net/jpg/02/48/42/64/360_F_248426448_NVKLywWqArG2ADUxDq6QprtIzsF82dMF.jpg')} className='detail-handbook__content--img' ></img>\r\n                        <h2 className='detail-handbook__content--title' >\r\n                            {detailHandbook.title}\r\n                        </h2>\r\n                        <div className='detail-handbook__content--info' >\r\n                            <p className='info-detail' >Sản phẩm của: <span className='highline' >Booking care</span></p>\r\n                            <p className='info-detail' >Tác giả: <span className='highline' >{detailHandbook.author}</span></p>\r\n                            <p className='info-detail' >Xuất bản: <span className='highline' >{moment(Number(detailHandbook.release)).format('DD-MM-YYYY')}</span></p>\r\n                        </div>\r\n                        <div className='detail-handbook__content--main' >\r\n                            <DetailSection dataDetail={detailHandbook.descriptionHTML} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='detail-handbook__suggestion' >\r\n                        <HandBookSection {...settings} isShowHeader id={this.props.match.params.id} />\r\n                    </div>\r\n                </div>\r\n                <HomeFooter />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailHandbook);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HomeHeader from './homeHeader';\r\nimport { verifyEmail } from '../../services/userService';\r\nimport './verifiedPage.scss';\r\nclass VerifiedPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isVerify: false,\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.location.search) {\r\n            console.log(this.props.location.search);\r\n            let doctorId = new URLSearchParams(this.props.location.search).get('doctorId');\r\n            let token = new URLSearchParams(this.props.location.search).get('token');\r\n\r\n            let response = await verifyEmail({\r\n                doctorId: doctorId,\r\n                token: token\r\n            })\r\n\r\n            if (response.data && response.data.errCode === 0) {\r\n                this.setState({\r\n                    isVerify: !this.state.isVerify\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <HomeHeader />\r\n                {this.state.isVerify\r\n                    ?\r\n                    <div className='verify-container' >\r\n                        <h1 className='verify-heading verify-heading__success' >Lịch hẹn đã được xác nhận </h1>\r\n                    </div>\r\n                    :\r\n                    <div className='verify-container'>\r\n                        <h1 className='verify-heading verify-heading__error' >Lịch hẹn không tồn tại hoặc đã được xác nhận </h1>\r\n                    </div>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VerifiedPage);\r\n","import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Modal } from 'reactstrap';\r\n\r\nimport './ConfirmModal.scss';\r\nimport * as actions from \"../store/actions\";\r\nimport { KeyCodeUtils } from \"../utils\";\r\n\r\nclass ConfirmModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.acceptBtnRef = React.createRef();\r\n    }\r\n\r\n    initialState = {\r\n    };\r\n\r\n    state = {\r\n        ...this.initialState\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handlerKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handlerKeyDown);\r\n    }\r\n\r\n    handlerKeyDown = (event) => {\r\n        const keyCode = event.which || event.keyCode;\r\n        if (keyCode === KeyCodeUtils.ENTER) {\r\n            if (!this.acceptBtnRef.current || this.acceptBtnRef.current.disabled) return;\r\n            this.acceptBtnRef.current.click();\r\n        }\r\n    }\r\n\r\n    onAcceptBtnClick = () => {\r\n        const { contentOfConfirmModal } = this.props;\r\n        if (contentOfConfirmModal.handleFunc) {\r\n            contentOfConfirmModal.handleFunc(contentOfConfirmModal.dataFunc);\r\n        }\r\n        this.onClose();\r\n    }\r\n\r\n    onClose = () => {\r\n        this.props.setContentOfConfirmModal({\r\n            isOpen: false,\r\n            messageId: \"\",\r\n            handleFunc: null,\r\n            dataFunc: null\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { contentOfConfirmModal } = this.props;\r\n\r\n        return (\r\n            <Modal isOpen={contentOfConfirmModal.isOpen} className='confirm-modal' centered={true}>\r\n                <div className=\"modal-header\">\r\n                    <div className=\"modal-title\">\r\n                        <FormattedMessage id={\"common.confirm\"} />\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button className=\"btn btn-close\" onClick={this.onClose}>\r\n                            <i className=\"fal fa-times\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal-body\">\r\n                    <div className=\"confirm-modal-content\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <FormattedMessage id={contentOfConfirmModal.messageId ? contentOfConfirmModal.messageId : \"common.confirm-this-task\"} />\r\n                            </div>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"col-12\">\r\n                                <div className=\"btn-container text-center\">\r\n                                    <button className=\"btn btn-add\" onClick={this.onClose} >\r\n                                        <FormattedMessage id=\"common.close\" />\r\n                                    </button>\r\n                                    <button ref={this.acceptBtnRef} className=\"btn btn-add\" onClick={this.onAcceptBtnClick}>\r\n                                        <FormattedMessage id={\"common.accept\"} />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal >\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n        contentOfConfirmModal: state.app.contentOfConfirmModal\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setContentOfConfirmModal: (contentOfConfirmModal) => dispatch(actions.setContentOfConfirmModal(contentOfConfirmModal))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmModal);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\r\nimport './slider.scss';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { getAllSpecialty } from '../../../services/userService';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\n\r\nclass SpecialtySection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            specialties: [],\r\n        }\r\n    }\r\n\r\n    handleViewDetailSpecialty = (id) => {\r\n        this.props.history.push(`/detail-specialty/${id}`);\r\n    }\r\n\r\n    getAllSpecialty = async () => {\r\n        let specialties = await getAllSpecialty();\r\n        if (specialties.data && specialties.data.errCode === 0) {\r\n            this.setState({\r\n                specialties: specialties.data.specialties\r\n            })\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        // this.getAllSpecialty();\r\n        let specialties = await getAllSpecialty();\r\n        if (specialties.data && specialties.data.errCode === 0) {\r\n            this.setState({\r\n                specialties: specialties.data.specialties\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { specialties } = this.state;\r\n        console.log(specialties);\r\n        return (\r\n            <div className='section background-dark'>\r\n                <div className='section-container'>\r\n                    <div className='silder-heading'>\r\n                        <h3 className='slider-title'><FormattedMessage id=\"manage-section.popular-specialties\" /></h3>\r\n                        <div className='slider-more-btn'>\r\n                            <a href=''><FormattedMessage id=\"common.more\" /></a>\r\n                        </div>\r\n                    </div>\r\n                    <div className='section-content'>\r\n                        <Slider {...this.props}>\r\n                            {specialties && specialties.length > 0 && specialties.map((specialty, index) => {\r\n                                return (\r\n                                    <div key={index} className='list-item' onClick={() => this.handleViewDetailSpecialty(specialty.id)} >\r\n                                        <div className='img-container specialty-img' style={{ backgroundImage: `url(${CommonUtils.encodeBase64(specialty.image)})` }} ></div>\r\n                                        <a href=''>{specialty.name}</a>\r\n                                    </div>\r\n                                );\r\n                            }) ||\r\n                                <div class=\"w-100 d-flex justify-content-center text-primary m-5\">\r\n                                    <div class=\"spinner-grow text-success\" role=\"status\">\r\n                                        <span class=\"visually-hidden\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        // changeLanguageAppRedux: (lang) => dispatch(changeLanguage(lang))\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SpecialtySection));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\r\nimport './slider.scss';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { getAllClinic } from '../../../services/userService';\r\n\r\nimport { CommonUtils } from '../../../utils';\r\nclass ClinicSection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clinics: []\r\n        }\r\n    }\r\n\r\n    handleViewDetailClinic = (id) => {\r\n        this.props.history.push(`/detail-clinic/${id}`);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let clinics = await getAllClinic();\r\n        if (clinics.data && clinics.data.errCode === 0) {\r\n            this.setState({\r\n                clinics: clinics.data.clinics,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { clinics } = this.state;\r\n        console.log(clinics);\r\n        return (\r\n            <div className='section'>\r\n                <div className='section-container'>\r\n                    <div className='silder-heading'>\r\n                        <h3 className='slider-title'><FormattedMessage id=\"manage-section.outstanding-medical-facilities\" /></h3>\r\n                        <div className='slider-more-btn'>\r\n                            <a href=''><FormattedMessage id=\"common.more\" /></a>\r\n                        </div>\r\n                    </div>\r\n                    <div className='section-content'>\r\n                        <Slider {...this.props}>\r\n                            {clinics && clinics.length > 0 && clinics.map((clinic, index) => {\r\n                                return (\r\n                                    <div key={index} className='list-item' onClick={() => this.handleViewDetailClinic(clinic.id)} >\r\n                                        <div\r\n                                            className='img-container health-facility-img '\r\n                                            style={{\r\n                                                backgroundImage: `url(${CommonUtils.encodeBase64(clinic.image)})`,\r\n                                                backgroundSize: 'contain',\r\n                                            }}\r\n                                        ></div>\r\n                                        <a href=''>{clinic.name}</a>\r\n                                    </div>\r\n                                );\r\n                            }) ||\r\n                                <div class=\"w-100 d-flex justify-content-center text-primary m-5\">\r\n                                    <div class=\"spinner-grow text-success\" role=\"status\">\r\n                                        <span class=\"visually-hidden\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        // changeLanguageAppRedux: (lang) => dispatch(changeLanguage(lang))\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ClinicSection));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\r\nimport './slider.scss';\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { languages, path } from '../../../utils';\r\nimport * as action from '../../../store/actions';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CommonUtils from '../../../utils/CommonUtils';\r\n\r\n\r\n// let history = useHistory();\r\n\r\nclass OutStandingDoctorSection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrTopDoctor: []\r\n        }\r\n    }\r\n\r\n    handleViewDetailDoctor = (id) => {\r\n        this.props.history.push(`/detail-doctor/${id}`);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.topDoctors != this.props.topDoctors) {\r\n            this.setState({\r\n                arrTopDoctor: this.props.topDoctors,\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getTopDoctor();\r\n    }\r\n\r\n    render() {\r\n        let { arrTopDoctor } = this.state;\r\n        let language = this.props.lang;\r\n        console.log(arrTopDoctor.length > 0 && arrTopDoctor[0].image);\r\n        return (\r\n            <div className='section background-dark'>\r\n                <div className='section-container'>\r\n                    <div className='silder-heading'>\r\n                        <h3 className='slider-title'><FormattedMessage id=\"manage-section.goodDoctor\" /></h3>\r\n                        <div className='slider-more-btn'>\r\n                            <a href=''><FormattedMessage id=\"common.more\" /></a>\r\n                        </div>\r\n                    </div>\r\n                    <div className='section-content'>\r\n                        <Slider {...this.props}>\r\n                            {arrTopDoctor && arrTopDoctor.length > 0 && arrTopDoctor.map((doctor, index) => {\r\n                                return (\r\n                                    <div key={index} className='list-item text-center' onClick={() => this.handleViewDetailDoctor(doctor.id)} >\r\n                                        <div className='img-container doctor-img circle-img' style={{\r\n                                            backgroundImage: `url(${CommonUtils.encodeBase64(doctor.image)})`,\r\n                                        }} ></div>\r\n                                        <div className='list-item__doctorInfo' >\r\n                                            <a>{((language === languages.VI) ? doctor.positionData.valueVi : doctor.positionData.valueEn) + ','}</a>\r\n                                            <a>{`${doctor.firstName} ${doctor.lastName}`}</a>\r\n                                        </div>\r\n                                        <div>\r\n                                            {/* <a href=''>Bác sĩ 1</a> */}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }) ||\r\n                                <div class=\"w-100 d-flex justify-content-center text-primary m-5\">\r\n                                    <div class=\"spinner-grow text-success\" role=\"status\">\r\n                                        <span class=\"visually-hidden\">Loading...</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n        topDoctors: state.admin.topDoctors,\r\n        // isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getTopDoctor: () => dispatch(action.fetchTopDoctorStart()),\r\n    }\r\n};\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OutStandingDoctorSection));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\r\nimport { FormattedMessage } from 'react-intl';\r\nclass AboutSection extends Component {\r\n    render() {\r\n        return (\r\n            <div className='section background-dark' style={{ height: 'auto' }} >\r\n                <div className='section-container'>\r\n                    <div className='silder-heading'>\r\n                        <h3 className='slider-title'><FormattedMessage id=\"manage-section.media-talks-about-bookingcare\" /></h3>\r\n                    </div>\r\n                    <div className='section-content d-flex'>\r\n                        <div className='list-item height-about col-2'>\r\n                            <div className='list-item_main'>\r\n                                <iframe className='video-about' width={\"100%\"} src='https://www.youtube-nocookie.com/embed/FyDQljKtWnI?autoplay=1'>\r\n                                </iframe>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='list-item col-2'>\r\n                            <div className='list-item_main'>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        // changeLanguageAppRedux: (lang) => dispatch(changeLanguage(lang))\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutSection);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HomeHeader from './homeHeader';\r\nimport SpecialtySection from './section/specialtySection';\r\nimport ClinicSection from './section/clinicSection';\r\nimport OutStandingDoctor from './section/outStandingDoctor';\r\nimport HandBookSection from './section/handBookSection';\r\nimport HomeFooter from './homeFooter';\r\nimport AboutSection from './section/aboutSection';\r\n\r\nimport { settings } from '../../utils/constant';\r\nclass HomePage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HomeHeader isShowBanner={true} />\r\n                <SpecialtySection {...settings} />\r\n                <ClinicSection {...settings} />\r\n                <OutStandingDoctor {...settings} />\r\n                <HandBookSection {...settings} isShowHeader />\r\n                <AboutSection />\r\n                <HomeFooter />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ConnectedRouter as Router } from 'connected-react-router';\r\nimport { history } from '../redux'\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\n\r\nimport { userIsAuthenticated, userIsNotAuthenticated } from '../hoc/authentication';\r\n\r\nimport { path } from '../utils'\r\n\r\nimport Home from '../routes/Home';\r\n// import Login from '../routes/Login';\r\nimport Login from './Auth/login';\r\nimport System from '../routes/System';\r\nimport Doctor from '../routes/Doctor';\r\nimport DetailDoctor from './HomePage/Doctor/DetailDoctor';\r\nimport DetailSpecialty from './HomePage/Specialty/DetailSpecialty';\r\nimport DetailClinic from './HomePage/Clinic/DetailClinic';\r\nimport DetailHandbook from './HomePage/Handbook/DetailHandbook';\r\nimport verifiedPage from './HomePage/verifiedPage';\r\n\r\nimport { CustomToastCloseButton } from '../components/CustomToast';\r\nimport ConfirmModal from '../components/ConfirmModal';\r\nimport HomePage from './HomePage/homePage';\r\nimport { role } from '../utils';\r\nimport CustomScrollbars from '../components/CustomScrollbars';\r\n\r\nclass App extends Component {\r\n\r\n    handlePersistorState = () => {\r\n        const { persistor } = this.props;\r\n        let { bootstrapped } = persistor.getState();\r\n        if (bootstrapped) {\r\n            if (this.props.onBeforeLift) {\r\n                Promise.resolve(this.props.onBeforeLift())\r\n                    .then(() => this.setState({ bootstrapped: true }))\r\n                    .catch(() => this.setState({ bootstrapped: true }));\r\n            } else {\r\n                this.setState({ bootstrapped: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.handlePersistorState();\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.userInfo);\r\n        return (\r\n            <Fragment>\r\n                <Router history={history}>\r\n                    <div className=\"main-container\" >\r\n                        <ConfirmModal />\r\n                        <span className=\"content-container\">\r\n                            <CustomScrollbars\r\n                                style={{ height: '100vh' }}\r\n                            >\r\n                                <Switch>\r\n                                    <Route path={path.HOME} exact component={(Home)} />\r\n                                    <Route path={path.LOGIN} component={userIsNotAuthenticated(Login)} />\r\n                                    <Route path={path.SYSTEM} component={(this.props.userInfo && (this.props.userInfo.roleId === role.ADMIN)) ? userIsAuthenticated(System) : userIsNotAuthenticated(Login)} />\r\n                                    <Route path={path.DOCTOR_SCHEDULE} component={userIsAuthenticated(Doctor)} />\r\n                                    <Route path={path.DOCTOR_PATIENT} component={userIsAuthenticated(Doctor)} />\r\n                                    <Route path={path.HOMEPAGE} component={HomePage} />\r\n                                    <Route path={path.DETAIL_DOCTOR} component={DetailDoctor} />\r\n                                    <Route path={path.DETAIL_SPECIALTY} component={DetailSpecialty} />\r\n                                    <Route path={path.DETAIL_CLINIC} component={DetailClinic} />\r\n                                    <Route path={path.DETAIL_HANDBOOK} component={DetailHandbook} />\r\n                                    <Route path={path.VERIFY_EMAIL} component={verifiedPage} />\r\n                                </Switch>\r\n                            </CustomScrollbars>\r\n                        </span>\r\n                        <ToastContainer\r\n                            position=\"top-right\"\r\n                            autoClose={2000}\r\n                            hideProgressBar={false}\r\n                            newestOnTop={false}\r\n                            closeOnClick\r\n                            rtl={false}\r\n                            pauseOnFocusLoss\r\n                            draggable\r\n                            pauseOnHover\r\n                            theme=\"light\"\r\n                        />\r\n                    </div>\r\n                </Router>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        started: state.app.started,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        userInfo: state.user.userInfo,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { IntlProvider } from \"react-intl\";\r\n\r\nimport '@formatjs/intl-pluralrules/polyfill';\r\nimport '@formatjs/intl-pluralrules/locale-data/en';\r\nimport '@formatjs/intl-pluralrules/locale-data/vi';\r\n\r\nimport '@formatjs/intl-relativetimeformat/polyfill';\r\nimport '@formatjs/intl-relativetimeformat/locale-data/en';\r\nimport '@formatjs/intl-relativetimeformat/locale-data/vi';\r\n\r\nimport { LanguageUtils } from '../utils'\r\n\r\nconst messages = LanguageUtils.getFlattenedMessages();\r\n\r\nclass IntlProviderWrapper extends Component {\r\n\r\n    render() {\r\n        const { children, language } = this.props;\r\n        return (\r\n            <IntlProvider\r\n                locale={language}\r\n                messages={messages[language]}\r\n                defaultLocale=\"vi\">\r\n                {children}\r\n            </IntlProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        language: state.app.language\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(IntlProviderWrapper);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './styles/styles.scss';\r\n\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport IntlProviderWrapper from \"./hoc/IntlProviderWrapper\";\r\n\r\n\r\nimport { Provider } from 'react-redux';\r\nimport reduxStore, { persistor } from './redux';\r\n\r\nconst renderApp = () => {\r\n    ReactDOM.render(\r\n        <Provider store={reduxStore}>\r\n            <IntlProviderWrapper>\r\n                <App persistor={persistor} />\r\n\r\n            </IntlProviderWrapper>\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    );\r\n};\r\n\r\nrenderApp();\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","class KeyCodeUtils {\r\n\r\n    static UP = 38;\r\n\r\n    static DOWN = 40;\r\n\r\n    static TAB = 9;\r\n\r\n    static ENTER = 13;\r\n\r\n    static E = 69;\r\n\r\n    static ESCAPE = 27; \r\n\r\n    static isNavigation(e) {\r\n        return (e >= 33 && e <= 40) || e === 9 || e === 8 || e === 46 || e === 14 || e === 13;\r\n    }\r\n\r\n    static isNumeric(e) {\r\n        return (e >= 48 && e <= 57) || (e >= 96 && e <= 105);\r\n    }\r\n    static isAlphabetic(e) {\r\n        return (e >= 65 && e <= 90);\r\n    }\r\n    static isDecimal(e) {\r\n        return e === 190 || e === 188 || e === 108 || e === 110;\r\n    }\r\n\r\n    static isDash(e) {\r\n        return e === 109 || e === 189;\r\n    }\r\n}\r\n\r\nexport default KeyCodeUtils;","import messages_vi from '../translations/vi.json';\r\nimport messages_en from '../translations/en.json';\r\n\r\nconst flattenMessages = ((nestedMessages, prefix = '') => {\r\n    if (nestedMessages == null) {\r\n        return {}\r\n    }\r\n    return Object.keys(nestedMessages).reduce((messages, key) => {\r\n        const value = nestedMessages[key];\r\n        const prefixedKey = prefix ? `${prefix}.${key}` : key;\r\n\r\n        if (typeof value === 'string') {\r\n            Object.assign(messages, {[prefixedKey]: value})\r\n        } else {\r\n            Object.assign(messages, flattenMessages(value, prefixedKey))\r\n        }\r\n\r\n        return messages\r\n    }, {})\r\n});\r\n\r\nconst messages = {\r\n    'vi': flattenMessages(messages_vi),\r\n    'en': flattenMessages(messages_en),\r\n};\r\n\r\nexport default class LanguageUtils {\r\n    static getMessageByKey(key, lang) {\r\n        return messages[lang][key]\r\n    }\r\n\r\n    static getFlattenedMessages() {\r\n        return messages;\r\n    }\r\n}","class CommonUtils {\r\n    static isNumber1(number) {\r\n        if (number === 1) return true;\r\n        return false;\r\n    }\r\n\r\n    static getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (e) => reject(e);\r\n\r\n        })\r\n\r\n    }\r\n\r\n    static encodeBase64(image) {\r\n        return new Buffer(image, 'base64').toString('binary');\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CommonUtils;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { languages } from '../../utils/constant';\r\nimport { changeLanguage } from '../../store/actions/appActions';\r\nimport './homeHeader.scss'\r\nclass HomeHeader extends Component {\r\n\r\n    changeLanguageApp(languageData) {\r\n        this.props.changeLanguageAppRedux(languageData);\r\n    }\r\n    render() {\r\n        let language = this.props.lang;\r\n        return (\r\n            <React.Fragment>\r\n                <div className='homeHeader-container'>\r\n                    <div className='homeHeader-content'>\r\n                        <div className='homeHeader-logo'>\r\n                            <span >\r\n                                <i class=\"fas fa-bars\"></i>\r\n                            </span>\r\n                            <a href='/home' >\r\n                                <img src=\"https://bookingcare.vn/assets/icon/bookingcare-2020.svg\" alt=\"\"></img>\r\n\r\n                            </a>\r\n                        </div>\r\n                        <div className='homeHeader-nav_list'>\r\n                            <a href='' className='homeHeader-nav_item'>\r\n                                <h5><FormattedMessage id=\"homeHeader.specialist\" /></h5>\r\n                                <p><FormattedMessage id=\"homeHeader.findDoctorsBySpecialty\" /></p>\r\n                            </a>\r\n                            <a href='' className='homeHeader-nav_item'>\r\n                                <h5><FormattedMessage id=\"homeHeader.healthFacilities\" /></h5>\r\n                                <p><FormattedMessage id=\"homeHeader.clinic\" /></p>\r\n                            </a>\r\n                            <a href='' className='homeHeader-nav_item'>\r\n                                <h5><FormattedMessage id=\"homeHeader.doctors\" /></h5>\r\n                                <p><FormattedMessage id=\"homeHeader.greatestDoctor\" /></p>\r\n                            </a>\r\n                            <a href='' className='homeHeader-nav_item'>\r\n                                <h5><FormattedMessage id=\"homeHeader.examinationPackage\" /></h5>\r\n                                <p><FormattedMessage id=\"homeHeader.generalHealth\" /></p>\r\n                            </a>\r\n                        </div>\r\n                        <div className='homeHeader-support'>\r\n                            <div className='homeHeader-support_icon'>\r\n                                <i class=\"fas fa-question-circle\"></i>\r\n                                <FormattedMessage id=\"homeHeader.support\" />\r\n                            </div>\r\n                            <div>0343-027-930</div>\r\n                            <div className='homeHeader-support_language'>\r\n                                <span className={(language === languages.VI) ? \"language__vi me-3 active\" : \"language__vi me-3\"} onClick={() => this.changeLanguageApp(languages.VI)}>VN</span>\r\n                                <span className={(language === languages.EN) ? \"language_en active\" : \"language__en\"} onClick={() => this.changeLanguageApp(languages.EN)}>EN</span>\r\n                            </div>\r\n                        </div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n                {this.props.isShowBanner &&\r\n                    <div className='homeHeader-banner'>\r\n                        <div className='homeHeader-banner_layer'>\r\n                            <div className='homeHeader-banner_container'>\r\n                                <h2 className='homeHeader-banner_title'><FormattedMessage id=\"banner.title1\" /></h2>\r\n                                <h2 className='homeHeader-banner_title'><FormattedMessage id=\"banner.title2\" /></h2>\r\n                                <div className='homeHeader-banner_search'>\r\n                                    <i class=\"fas fa-search\"></i>\r\n                                    <input className='homeHeader-banner_search__input' placeholder={'Bác sĩ, chuyên khoa,...'} ></input>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className='homeHeader-banner_options'>\r\n                                <div className='homeHeader-banner_options__list'>\r\n                                    <div className='homeHeader-banner_options__item'>\r\n                                        <div className='homeHeader-banner_options__item--icon specialist-examination'></div>\r\n                                        <a href=\"\" className='homeHeader-banner_options__item--title'>\r\n                                            <h5><FormattedMessage id=\"options.specialist1\" /></h5>\r\n                                            <h5><FormattedMessage id=\"options.specialist2\" /></h5>\r\n\r\n\r\n                                        </a>\r\n                                    </div>\r\n                                    <div className='homeHeader-banner_options__item'>\r\n                                        <div className='homeHeader-banner_options__item--icon remote-examination'></div>\r\n                                        <a href=\"\" className='homeHeader-banner_options__item--title'>\r\n                                            <h5><FormattedMessage id=\"options.remoteExamination1\" /></h5>\r\n                                            <h5><FormattedMessage id=\"options.remoteExamination2\" /></h5>\r\n\r\n\r\n                                        </a>\r\n                                    </div>\r\n                                    <div className='homeHeader-banner_options__item'>\r\n                                        <div className='homeHeader-banner_options__item--icon general-examination'></div>\r\n                                        <a href=\"\" className='homeHeader-banner_options__item--title'>\r\n                                            <h5><FormattedMessage id=\"options.generalExamination1\" /></h5>\r\n                                            <h5><FormattedMessage id=\"options.generalExamination2\" /></h5>\r\n\r\n\r\n                                        </a>\r\n                                    </div>\r\n                                    <div className='homeHeader-banner_options__item'>\r\n                                        <div className='homeHeader-banner_options__item--icon medical-tests'></div>\r\n                                        <a href=\"\" className='homeHeader-banner_options__item--title'>\r\n                                            <h5><FormattedMessage id=\"options.medicalTests1\" /></h5>\r\n                                            <h5><FormattedMessage id=\"options.medicalTests2\" /></h5>\r\n                                        </a>\r\n                                    </div>\r\n                                    <div className='homeHeader-banner_options__item'>\r\n                                        <div className='homeHeader-banner_options__item--icon mental-health'></div>\r\n                                        <a href=\"\" className='homeHeader-banner_options__item--title'>\r\n                                            <h5><FormattedMessage id=\"options.mentalHealth1\" /></h5>\r\n                                            <h5><FormattedMessage id=\"options.mentalHealth2\" /></h5>\r\n\r\n                                        </a>\r\n                                    </div>\r\n                                    <div className='homeHeader-banner_options__item'>\r\n                                        <div className='homeHeader-banner_options__item--icon dental-examination'></div>\r\n                                        <a href=\"\" className='homeHeader-banner_options__item--title'>\r\n                                            <h5><FormattedMessage id=\"options.dentist1\" /></h5>\r\n                                            <h5><FormattedMessage id=\"options.dentist2\" /></h5>\r\n\r\n                                        </a>\r\n                                    </div>\r\n                                    <div className='homeHeader-banner_options__item'>\r\n                                        <div className='homeHeader-banner_options__item--icon surgical-package'></div>\r\n                                        <a href=\"\" className='homeHeader-banner_options__item--title'>\r\n                                            <h5><FormattedMessage id=\"options.examinationPackage1\" /></h5>\r\n                                            <h5><FormattedMessage id=\"options.examinationPackage2\" /></h5>\r\n\r\n                                        </a>\r\n                                    </div>\r\n                                    <div className='homeHeader-banner_options__item'>\r\n                                        <div className='homeHeader-banner_options__item--icon Live-healthy-with-diabetes'></div>\r\n                                        <a href=\"\" className='homeHeader-banner_options__item--title'>\r\n                                            <h5><FormattedMessage id=\"options.diabetes1\" /></h5>\r\n                                            <h5><FormattedMessage id=\"options.diabetes2\" /></h5>\r\n\r\n                                        </a>\r\n                                    </div>\r\n                                    <div className='homeHeader-banner_options__item'>\r\n                                        <div className='homeHeader-banner_options__item--icon health-test'></div>\r\n                                        <a href=\"\" className='homeHeader-banner_options__item--title'>\r\n                                            <h5><FormattedMessage id=\"options.healthTest1\" /></h5>\r\n                                            <h5><FormattedMessage id=\"options.healthTest2\" /></h5>\r\n\r\n                                        </a>\r\n                                    </div>\r\n                                    <div className='homeHeader-banner_options__item'>\r\n                                        <div className='homeHeader-banner_options__item--icon medical-near-you'></div>\r\n                                        <a href=\"\" className='homeHeader-banner_options__item--title'>\r\n                                            <h5><FormattedMessage id=\"options.nearHome1\" /></h5>\r\n                                            <h5><FormattedMessage id=\"options.nearHome2\" /></h5>\r\n\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeLanguageAppRedux: (lang) => dispatch(changeLanguage(lang))\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeHeader);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\r\nimport \"./homeFooter.scss\";\r\nclass HomeFooter extends Component {\r\n    render() {\r\n        return (\r\n            <div className='homeFooter'>\r\n                <div className='homeFooter-content'>\r\n                    <p className='copy-right' > &copy; 2023 Booking Care Clone</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        // changeLanguageAppRedux: (lang) => dispatch(changeLanguage(lang))\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeFooter);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport './DetailSection.scss';\r\nclass DetailSection extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className='section-detail' style={this.props.style} >\r\n                    <div className='section-container' dangerouslySetInnerHTML={{ __html: this.props.dataDetail && (this.props.dataDetail.contentHTML || this.props.dataDetail) }} >\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailSection);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee, faL } from '@fortawesome/free-solid-svg-icons';\r\nimport './ProfileDoctor.scss';\r\nimport * as action from '../../../store/actions';\r\nimport moment from 'moment';\r\nimport \"moment/locale/vi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { languages } from '../../../utils';\r\nimport { getProfileDoctor } from '../../../services/userService';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { toNumber } from 'lodash';\r\nimport { isEmpty } from 'lodash';\r\n\r\n\r\nclass ProfileDoctor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowDescription: false,\r\n            isShowSchedule: false,\r\n            isShowLocation: false,\r\n            isShowMoreLink: false,\r\n            dataSchedule: '',\r\n            dataDoctor: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let doctorId = this.props.dataSchedule ? this.props.dataSchedule.doctorID : this.props.doctorID;\r\n        console.log(doctorId);\r\n        let response = await getProfileDoctor(doctorId);\r\n        if (response && !isEmpty(response)) {\r\n            this.setState({\r\n                dataDoctor: response,\r\n                dataSchedule: this.props.dataSchedule,\r\n                isShowSchedule: this.props.isShowSchedule,\r\n                isShowDescription: this.props.isShowDescription,\r\n                isShowLocation: this.props.isShowLocation,\r\n                isShowMoreLink: this.props.isShowMoreLink\r\n            })\r\n            if (this.props.getProfileDoctor) {\r\n                this.props.getProfileDoctor(response);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let { dataSchedule, dataDoctor, isShowSchedule, isShowDescription, isShowLocation, isShowMoreLink } = this.state;\r\n        let imgBase64;\r\n        let detailDoctor = dataDoctor ? dataDoctor.data.detailDoctor : \"\";\r\n\r\n        return (\r\n            <div className='profile-doctor-introduction' >\r\n                <div className='profile-doctor__image' style={{ backgroundImage: `url(${imgBase64 = new Buffer(detailDoctor && detailDoctor.image, 'base64').toString('binary')})` }}  >\r\n                    {isShowMoreLink &&\r\n                        <Link to={`/detail-doctor/${detailDoctor.id}`} className='view-more' >Xem thêm</Link>\r\n                    }\r\n                </div>\r\n                <div className='profile-doctor__introduce' >\r\n                    <h2 className='profile-doctor__introduce--name' >\r\n                        {`${detailDoctor && (this.props.lang === languages.EN ? detailDoctor.positionData.valueEn : detailDoctor.positionData.valueVi)},\r\n                         ${detailDoctor && detailDoctor.firstName} ${detailDoctor && detailDoctor.lastName}`}\r\n                    </h2>\r\n                    {isShowDescription &&\r\n                        <p className='detail-doctor__introduce--profile' >\r\n                            {detailDoctor.Markdown && detailDoctor.Markdown.description}\r\n                        </p>\r\n                    }\r\n                    {isShowSchedule &&\r\n                        <p className='profile-doctor__introduce--schedule' >\r\n                            {`${dataSchedule && (this.props.lang === languages.EN ? dataSchedule.timeData.valueEn : dataSchedule.timeData.valueVi)} - ${dataSchedule && moment(new Date(Number(dataSchedule.date))).format('DD/MM/YYYY')}`}\r\n                        </p>\r\n                    }\r\n                    {isShowLocation &&\r\n                        <p className='profile-doctor__introduce--location' >\r\n                            <i class=\"fa-solid fa-location-dot\"></i>\r\n                            {`${detailDoctor && (this.props.lang === languages.EN ? detailDoctor.Doctor_Info.provinceData.valueEn : detailDoctor.Doctor_Info.provinceData.valueVi)}`}\r\n                        </p>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileDoctor);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport * as action from '../../../store/actions';\r\nimport moment from 'moment';\r\nimport \"moment/locale/vi\";\r\nimport { NumericFormat } from 'react-number-format';\r\nimport { languages } from '../../../utils';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport './DoctorExtraInfo.scss';\r\n\r\nclass DoctorExtraInfo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShow: false,\r\n            addressClinic: '',\r\n            nameClinic: '',\r\n            price: '',\r\n            payment: '',\r\n            province: ''\r\n\r\n        }\r\n    }\r\n\r\n    handleMorePrice = () => {\r\n        this.setState({\r\n            isShow: !this.state.isShow\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.getExtraInfoDoctor(this.props.doctorId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.extraInfoDoctor != this.props.extraInfoDoctor) {\r\n            this.setState({\r\n                addressClinic: this.props.extraInfoDoctor.addressClinic,\r\n                nameClinic: this.props.extraInfoDoctor.nameClinic,\r\n                price: this.props.extraInfoDoctor.priceData,\r\n                payment: this.props.extraInfoDoctor.paymentData,\r\n                province: this.props.extraInfoDoctor.provinceData\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { isShow, addressClinic, nameClinic, price, payment, province } = this.state;\r\n        return (\r\n            <div className='doctor-extraInfo' >\r\n                <div className='doctor-extraInfo__address' >\r\n                    <h5 className='heading' ><FormattedMessage id=\"common.address-clinic\" /></h5>\r\n                    <p className='name-clinic' >{nameClinic}</p>\r\n                    <p className='add-clinic' >{addressClinic}, {this.props.lang === languages.EN ? province.valueEn : province.valueVi} </p>\r\n\r\n                </div>\r\n                <div className='doctor-extraInfo__price' >\r\n                    <h5 className='heading' ><FormattedMessage id=\"common.price\" />:</h5>\r\n                    <p className='price' >\r\n                        <NumericFormat\r\n                            displayType='text'\r\n                            value={this.props.lang === languages.EN ? price.valueEn : price.valueVi} suffix={this.props.lang === languages.EN ? '$' : 'đ'}\r\n                            thousandSeparator=\",\"\r\n                        />.\r\n                    </p>\r\n                    <p className='detail' onClick={() => this.handleMorePrice()} >{isShow ? <FormattedMessage id=\"common.btn.hide\" /> : <FormattedMessage id=\"common.btn.see-detail\" />}</p>\r\n                    <div className={isShow ? 'more-info active-more-price' : 'more-info'} >\r\n                        <div className='more-price' >\r\n                            <div className='heading' >\r\n                                <h5 className='price-title' ><FormattedMessage id=\"common.price\" /></h5>\r\n                                <span className='price' >\r\n                                    <NumericFormat\r\n                                        displayType='text'\r\n                                        value={this.props.lang === languages.EN ? price.valueEn : price.valueVi}\r\n                                        suffix={this.props.lang === languages.EN ? '$' : 'đ'}\r\n                                        thousandSeparator=\",\"\r\n                                    />.\r\n                                </span>\r\n                            </div>\r\n                            <p>\r\n                                - Giá tái khám: 250.000 VNĐ ( bệnh nhân phải có mặt)\r\n                            </p>\r\n                            <p className='m-0' >\r\n                                - Giá tư vấn tái khám: 200.000 VNĐ (người nhà bệnh nhân đến báo lại tình trạng của bệnh nhân và lấy thuốc)\r\n                            </p>\r\n                        </div>\r\n                        <div className='note' ><FormattedMessage id=\"common.payment\" />: {this.props.lang === languages.EN ? payment.valueEn : payment.valueVi}</div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n        extraInfoDoctor: state.user.extraInfoDoctor\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getExtraInfoDoctor: (doctorId) => dispatch(action.fetchExtraInfoDoctorStart(doctorId)),\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorExtraInfo);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { NumericFormat } from 'react-number-format';\r\nimport \"flatpickr/dist/themes/material_green.css\";\r\nimport DatePicker from 'react-flatpickr';\r\nimport Select from 'react-select';\r\nimport { toast } from 'react-toastify';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport './BookingModal.scss';\r\nimport * as action from '../../../store/actions';\r\nimport { languages } from '../../../utils';\r\nimport { getProfileDoctor } from '../../../services/userService';\r\nimport ProfileDoctor from '../Doctor/ProfileDoctor';\r\nimport moment from 'moment';\r\nimport { isEmpty } from 'lodash';\r\n\r\n\r\nclass BookingModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataSchedule: '',\r\n            profileDoctor: '',\r\n            arrGender: [],\r\n\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            birth: '',\r\n            gender: '',\r\n            address: '',\r\n            reason: ''\r\n        }\r\n    }\r\n\r\n    handleOnChangeInput = (event, input) => {\r\n        let copyState = this.state;\r\n        copyState[input] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n    }\r\n\r\n    handleBirthChange = (date) => {\r\n        this.setState({\r\n            birth: date,\r\n        })\r\n    }\r\n\r\n    handleValidate = () => {\r\n        let isValid = true;\r\n        let arrInput = ['name', 'email', 'phone', 'birth', 'address'];\r\n        for (let i = 0; i < arrInput.length; i++) {\r\n            if (!this.state[arrInput[i]]) {\r\n                isValid = false;\r\n                toast.warn(\"Bạn chưa điền \" + arrInput[i]);\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n\r\n    getProfileDoctor = (data) => {\r\n        this.setState({\r\n            profileDoctor: data\r\n        })\r\n    }\r\n\r\n    builDataTime = (data) => {\r\n        let timeBuilded = '';\r\n        let dateBuilded = '';\r\n        if (data && !isEmpty(data)) {\r\n            dateBuilded = moment(Number(data.date)).format('DD-MM-YYYY');\r\n            timeBuilded = data && (this.props.lang === languages.EN ? data.timeData.valueEn : data.timeData.valueVi);\r\n        }\r\n        return `${timeBuilded} - ${dateBuilded}`;\r\n    }\r\n\r\n    handleConfirmBooking = () => {\r\n        let isValid = this.handleValidate();\r\n        let timeString = this.builDataTime(this.state.dataSchedule);\r\n        let doctor = this.state.profileDoctor.data.detailDoctor\r\n        if (isValid === false)\r\n            return;\r\n\r\n        this.props.confirmBooking({\r\n            email: this.state.email,\r\n            name: this.state.name,\r\n            phone: this.state.phone,\r\n            gender: this.state.gender,\r\n            address: this.state.address,\r\n            doctorId: this.props.dataSchedule.doctorID,\r\n            date: this.props.dataSchedule.date,\r\n            timeType: this.props.dataSchedule.timeType,\r\n            timeString: timeString,\r\n            doctor: `${doctor.firstName} ${doctor.lastName}`,\r\n            language: this.props.lang\r\n        })\r\n\r\n        // console.log(this.state.profileDoctor.data.detailDoctor);\r\n        this.props.toggle();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getGender();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.dataSchedule != this.props.dataSchedule) {\r\n            this.setState({\r\n                dataSchedule: this.props.dataSchedule,\r\n            })\r\n        }\r\n\r\n        if (prevProps.dataGender != this.props.dataGender) {\r\n            this.setState({\r\n                arrGender: this.props.dataGender,\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let { dataSchedule, profileDoctor, arrGender, name, email, phone, birth, gender, address, reason } = this.state;\r\n        console.log(this.props.lang);\r\n        let Doctor_Info = profileDoctor ? profileDoctor.data.detailDoctor.Doctor_Info : \"\";\r\n        return (\r\n            <React.Fragment>\r\n                <Modal\r\n                    isOpen={this.props.isModalShow}\r\n                    toggle={this.props.toggle}\r\n                    size='lg'\r\n                >\r\n                    <ModalHeader\r\n                        className='booking-modal__heading '\r\n                    >\r\n                        Thông tin bệnh nhân\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"col-12 booking-modal__container mt-3\">\r\n                            <ProfileDoctor\r\n                                dataSchedule={dataSchedule}\r\n                                profileDoctor={profileDoctor}\r\n                                getProfileDoctor={this.getProfileDoctor}\r\n                                isShowSchedule={true}\r\n                                isShowDescription={false}\r\n                                isShowLocation={false}\r\n                                isShowMoreLink={false}\r\n                            />\r\n                            <div class=\"mb-3\">\r\n                                <label for=\"exampleFormControlInput1\" class=\"form-label fw-bolder\"><FormattedMessage id='booking-modal.patient-name' /></label>\r\n                                <div class=\"form-control\" >\r\n                                    <span className='pre-icon' >\r\n                                        <i class=\"fas fa-user\"></i>\r\n                                    </span>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        className='booking-modal__input '\r\n                                        placeholder=\"Ví dụ: Trần Văn Phú\"\r\n                                        onChange={(event) => this.handleOnChangeInput(event, 'name')}\r\n                                        value={name}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"mb-3\">\r\n                                <label for=\"exampleFormControlInput1\" class=\"form-label fw-bolder\"><FormattedMessage id='booking-modal.email' /></label>\r\n                                <div class=\"form-control\" >\r\n                                    <span className='pre-icon' >\r\n                                        <i class=\"fas fa-envelope\"></i>\r\n                                    </span>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        className='booking-modal__input'\r\n                                        placeholder=\"Ví dụ: phu@gmail.com\"\r\n                                        onChange={(event) => this.handleOnChangeInput(event, 'email')}\r\n                                        value={email}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"mb-3\">\r\n                                <label for=\"exampleFormControlInput1\" class=\"form-label fw-bolder\"><FormattedMessage id='booking-modal.phone' /></label>\r\n                                <div class=\"form-control\" >\r\n                                    <span className='pre-icon' >\r\n                                        <i class=\"fas fa-phone fa-rotate-90\"></i>\r\n                                    </span>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        className='booking-modal__input'\r\n                                        placeholder=\"Ví dụ: 0358234124\"\r\n                                        onChange={(event) => this.handleOnChangeInput(event, 'phone')}\r\n                                        value={phone}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"mb-3\">\r\n                                <label for=\"exampleFormControlInput1\" class=\"form-label fw-bolder\"><FormattedMessage id='booking-modal.birth' /></label>\r\n                                <div class=\"form-control\" >\r\n                                    <span className='pre-icon' >\r\n                                        <i class=\"fas fa-calendar-alt\"></i>\r\n                                    </span>\r\n                                    <DatePicker\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        className='booking-modal__input '\r\n                                        placeholder=\"Ví dụ: 12/03/1986\"\r\n                                        onChange={(selectedDates, dateStr) => this.handleBirthChange(selectedDates[0])}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"mb-3\">\r\n                                <label for=\"exampleFormControlInput1\" class=\"form-label fw-bolder\"><FormattedMessage id='booking-modal.gender' /></label>\r\n                                <div class=\"form-control w-25\" >\r\n                                    <span className='pre-icon' >\r\n                                        <i class=\"fas fa-venus-mars\"></i>\r\n                                    </span>\r\n                                    <select\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        className='booking-modal__input'\r\n                                        placeholder=\"Ví dụ: Nam\"\r\n                                        onChange={(event) => this.handleOnChangeInput(event, 'gender')}\r\n                                    >\r\n                                        <option selected disabled value={''} ></option>\r\n                                        {arrGender && arrGender.length > 0 && arrGender.map((item) => {\r\n                                            return (\r\n                                                <option value={item.keyMap} >{(this.props.lang == languages.VI) ? item.valueVi : item.valueEn}</option>\r\n                                            )\r\n                                        })\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"mb-3\">\r\n                                <label for=\"exampleFormControlInput1\" class=\"form-label fw-bolder\"><FormattedMessage id='booking-modal.address' /></label>\r\n                                <div class=\"form-control\" >\r\n                                    <span className='pre-icon' >\r\n                                        <i class=\"fas fa-map-marker-alt\"></i>\r\n                                    </span>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"exampleFormControlInput1\"\r\n                                        className='booking-modal__input '\r\n                                        placeholder=\"Ví dụ: Triều Khúc - Thanh Xuân - Hà Nội\"\r\n                                        onChange={(event) => this.handleOnChangeInput(event, 'address')}\r\n                                        value={address}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"mb-3\">\r\n                                <label for=\"exampleFormControlTextarea1\" class=\"form-label fw-bolder\"><FormattedMessage id='booking-modal.reason' /></label>\r\n                                <textarea\r\n                                    class=\"form-control\"\r\n                                    id=\"exampleFormControlTextarea1\"\r\n                                    rows=\"3\"\r\n                                    onChange={(event) => this.handleOnChangeInput(event, 'reason')}\r\n                                    value={reason}\r\n                                ></textarea>\r\n                            </div>\r\n\r\n                            <div className='booking-modal__payment'>\r\n                                <h6 className='booking-modal__payment--heading' >\r\n                                    <FormattedMessage id='booking-modal.payment-method.title1' />\r\n                                </h6>\r\n                                <div className='booking-modal__payment--method mb-3' >\r\n                                    <input type='radio' checked={true} ></input>\r\n                                    <FormattedMessage id='booking-modal.payment-method.title2' />:{Doctor_Info && (this.props.lang === languages.EN ? Doctor_Info.paymentData.valueEn : Doctor_Info.paymentData.valueVi)}\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className='booking-modal__price' >\r\n                                <div className='booking-modal__price--exam' >\r\n                                    <span><FormattedMessage id='booking-modal.price' />: </span>\r\n                                    <span\r\n                                        className='price'>\r\n                                        {Doctor_Info &&\r\n                                            <NumericFormat\r\n                                                displayType='text'\r\n                                                value={this.props.lang === languages.EN ? Doctor_Info.priceData.valueEn : Doctor_Info.priceData.valueVi}\r\n                                                suffix={this.props.lang === languages.EN ? '$' : 'đ'}\r\n                                                thousandSeparator={true}\r\n                                            />}\r\n                                    </span>\r\n                                </div>\r\n                                <div className='booking-modal__price--fee' >\r\n                                    <span><FormattedMessage id='booking-modal.fee' />: </span>\r\n                                    <span className='fee' ><FormattedMessage id='booking-modal.free' /></span>\r\n                                </div>\r\n                                <div className='booking-modal__price--total' >\r\n                                    <span><FormattedMessage id='booking-modal.total' />: </span>\r\n                                    <span className='total' >\r\n                                        {Doctor_Info &&\r\n                                            <NumericFormat\r\n                                                displayType='text'\r\n                                                value={this.props.lang === languages.EN ? Doctor_Info.priceData.valueEn : Doctor_Info.priceData.valueVi}\r\n                                                suffix={this.props.lang === languages.EN ? '$' : 'đ'}\r\n                                                thousandSeparator={true}\r\n                                            />}</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button\r\n                            className=\"btn-cancel\"\r\n                            onClick={this.props.toggle}\r\n                        >\r\n                            <FormattedMessage id='booking-modal.btn.cancel' />\r\n                        </Button>\r\n                        <Button\r\n                            className=\"btn-confirm\"\r\n                            onClick={this.handleConfirmBooking}\r\n                        >\r\n                            <FormattedMessage id='booking-modal.btn.booking' />\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n        dataGender: state.admin.genders,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getGender: () => dispatch(action.fetchGenderStart()),\r\n        confirmBooking: (dataBooking) => dispatch(action.confirmBookingStart(dataBooking)),\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingModal);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\r\nimport Select from 'react-select';\r\nimport './DoctorSchedule.scss';\r\nimport * as action from '../../../store/actions';\r\nimport moment from 'moment';\r\nimport \"moment/locale/vi\";\r\nimport { languages } from '../../../utils';\r\nimport { getDoctorSchedule } from '../../../services/userService';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport BookingModal from '../Modal/BookingModal';\r\n\r\n\r\nclass DoctorSchedule extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalShow: false,\r\n            allDay: '',\r\n            doctorId: '',\r\n            allTime: '',\r\n            daySelected: {\r\n                label: moment(new Date()).locale(this.props.lang === languages.EN ? 'en' : 'vi').format('dddd - DD/MM').charAt(0).toUpperCase()\r\n                    + moment(new Date()).locale(this.props.lang === languages.EN ? 'en' : 'vi').format('dddd - DD/MM').slice(1),\r\n                value: moment(new Date()).startOf('day').valueOf()\r\n            },\r\n            dataSchedule: '',\r\n            dataTimePass: ''\r\n\r\n        }\r\n    }\r\n\r\n    getTimeData = async (doctorId, date) => {\r\n        let response = await getDoctorSchedule(doctorId, date.value);\r\n        if (response.data && response.data.errCode === 0) {\r\n            this.setState({\r\n                allTime: response.data.dataSchedule,\r\n                daySelected: date,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    handleOnChange = (selectedOption) => {\r\n        this.getTimeData(this.props.doctorId, selectedOption);\r\n    }\r\n\r\n    weeklySchedule() {\r\n        let weeklySchedule = [];\r\n        for (let i = 0; i < 5; i++) {\r\n            let obj = {};\r\n            let weekday = moment(new Date()).add(i, 'days').locale(this.props.lang === languages.EN ? 'en' : 'vi').format('dddd - DD/MM');\r\n            let dayInMonth = moment(new Date()).add(i, 'days').startOf('day').valueOf();\r\n            obj.label = weekday.charAt(0).toUpperCase() + weekday.slice(1);\r\n            obj.value = dayInMonth;\r\n            weeklySchedule.push(obj);\r\n\r\n        }\r\n        this.setState({\r\n            allDay: weeklySchedule,\r\n        })\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.weeklySchedule();\r\n        this.getTimeData(this.props.doctorId, this.state.daySelected);\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.lang != this.props.lang) {\r\n            this.weeklySchedule();\r\n        }\r\n    }\r\n\r\n    handleShowBookingModal = (data) => {\r\n        this.setState({\r\n            isModalShow: !this.state.isModalShow,\r\n            dataTimePass: data\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let { allDay, allTime, daySelected, isModalShow, dataSchedule, dataTimePass } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className='doctor-schedule' >\r\n                    <div className='doctor-schedule__dropdown' >\r\n                        <Select\r\n                            className='doctor-schedule__dropdown--selected'\r\n                            value={daySelected}\r\n                            onChange={this.handleOnChange}\r\n                            styles={{\r\n                                control: provided => ({\r\n                                    ...provided,\r\n                                    boxShadow: \"none\",\r\n                                    borderColor: \"transparent\",\r\n                                    \"&:hover\": {\r\n                                        borderColor: \"transparent\"\r\n                                    },\r\n                                    fontWeight: '600'\r\n\r\n                                }),\r\n                                singleValue: (provided) => ({\r\n                                    ...provided,\r\n                                    color: '#08699B',\r\n                                }),\r\n                            }}\r\n\r\n                            options={allDay}\r\n                            placeholder={this.props.lang === languages.EN ? \"Select\" : \"Chọn\"}\r\n                        />\r\n                    </div>\r\n                    <div className='doctor-schedule__timetable'>\r\n                        <h5 className='doctor-schedule__timetable--heading' >\r\n                            <span><i class=\"fas fa-calendar-alt\"></i></span>\r\n                            <FormattedMessage id='common.schedule' />\r\n                        </h5>\r\n                        <ul className='doctor-schedule__list' >\r\n                            {allTime && allTime.length > 0\r\n                                ? allTime.map((time, index) => {\r\n                                    return <li\r\n                                        key={index}\r\n                                        className='doctor-schedule__item'\r\n                                        onClick={() => this.handleShowBookingModal(time)}\r\n                                    >{this.props.lang === languages.EN ? time.timeData.valueEn : time.timeData.valueVi}\r\n                                    </li>\r\n                                })\r\n                                :\r\n                                <h5 className='message' ><FormattedMessage id='common.schedule-time' /></h5>\r\n                            }\r\n\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className='doctor-schedule__guide ' >\r\n                        <FormattedMessage id='common.guide' />\r\n                    </div>\r\n                </div>\r\n                <BookingModal\r\n                    isModalShow={isModalShow}\r\n                    toggle={this.handleShowBookingModal}\r\n                    dataSchedule={dataTimePass}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        lang: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);\r\n","import actionTypes from './actionTypes';\r\n\r\nexport const appStartUpComplete = () => ({\r\n    type: actionTypes.ADMIN_START,\r\n});\r\n\r\nexport const setContentOfConfirmModal = (contentOfConfirmModal) => ({\r\n    type: actionTypes.SET_CONTENT_OF_CONFIRM_MODAL,\r\n    contentOfConfirmModal: contentOfConfirmModal\r\n});\r\n\r\nexport const changeLanguage = (lang) =>({\r\n    type:actionTypes.CHANGE_LANGUAGE,\r\n    language: lang,\r\n});","import React, { Component, Fragment } from 'react';\r\nimport { FormattedMessage, FormattedTime } from 'react-intl';\r\n\r\nimport CustomScrollBar from '../components/CustomScrollbars';\r\n\r\nimport './CustomToast.scss';\r\n\r\nclass CustomToast extends Component {\r\n\r\n    render() {\r\n        const { titleId, message, messageId, time } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <div className=\"custom-toast\">\r\n                    <div className=\"toast-title\">\r\n                        {time && (\r\n                            <span className=\"date\">\r\n                                <FormattedTime hour='numeric' minute='numeric' second='numeric' hour12={true} value={time} />\r\n                            </span>\r\n                        )}\r\n                        <i className=\"fa fa-fw fa-exclamation-triangle\" />\r\n                        <FormattedMessage id={titleId} />\r\n                    </div>\r\n                    {\r\n                        (message && typeof message === 'object') ?\r\n                            <CustomScrollBar autoHeight={true} autoHeightMin={50} autoHeightMax={100}>\r\n                                {\r\n                                    message.map((msg, index) => {\r\n                                        return (\r\n                                            <Fragment key={index}>\r\n                                                <div className=\"toast-content\">{msg}</div>\r\n                                            </Fragment>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </CustomScrollBar> :\r\n                            <div className=\"toast-content\">\r\n                                {message ? message : (messageId ? (<FormattedMessage id={messageId} />) : null)}\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport class CustomToastCloseButton extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <button type=\"button\" className=\"toast-close\" onClick={this.props.closeToast}>\r\n                <i className=\"fa fa-fw fa-times-circle\" />\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomToast;","import React, { Component } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport './CustomScrollbars.scss';\r\n\r\nclass CustomScrollbars extends Component {\r\n\r\n    ref = React.createRef();\r\n\r\n    getScrollLeft =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollLeft();\r\n    }\r\n    getScrollTop =()=>{\r\n        const scrollbars = this.ref.current;\r\n        return scrollbars.getScrollTop();\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const targetScrollTop = scrollbars.getScrollHeight();\r\n        this.scrollTo(targetScrollTop);\r\n    };\r\n\r\n    scrollTo = (targetTop) => {\r\n        const { quickScroll } = this.props;\r\n        if (!this.ref || !this.ref.current) {\r\n            return;\r\n        }\r\n        const scrollbars = this.ref.current;\r\n        const originalTop = scrollbars.getScrollTop();\r\n        let iteration = 0;\r\n\r\n        const scroll = () => {\r\n            iteration++;\r\n            if (iteration > 30) {\r\n                return;\r\n            }\r\n            scrollbars.scrollTop(originalTop + (targetTop - originalTop) / 30 * iteration);\r\n\r\n            if (quickScroll && quickScroll === true) {\r\n                scroll();\r\n            } else {\r\n                setTimeout(() => {\r\n                    scroll();\r\n                }, 20);\r\n            }\r\n        };\r\n\r\n        scroll();\r\n    };\r\n\r\n    renderTrackHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderTrackVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"track-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderThumbHorizontal = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-horizontal\" />\r\n        );\r\n    };\r\n\r\n    renderThumbVertical = (props) => {\r\n        return (\r\n            <div {...props} className=\"thumb-vertical\" />\r\n        );\r\n    };\r\n\r\n    renderNone = (props) => {\r\n        return (\r\n            <div />\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { className, disableVerticalScroll, disableHorizontalScroll, children,...otherProps } = this.props;\r\n        return (\r\n            <Scrollbars\r\n                ref={this.ref}\r\n                autoHide={true}\r\n                autoHideTimeout={200}\r\n                hideTracksWhenNotNeeded={true}\r\n                className={className ? className + ' custom-scrollbar' : 'custom-scrollbar'}\r\n                {...otherProps}\r\n                renderTrackHorizontal={disableHorizontalScroll ? this.renderNone : this.renderTrackHorizontal}\r\n                renderTrackVertical={disableVerticalScroll ? this.renderNone : this.renderTrackVertical}\r\n                renderThumbHorizontal={disableHorizontalScroll ? this.renderNone : this.renderThumbHorizontal}\r\n                renderThumbVertical={disableVerticalScroll ? this.renderNone : this.renderThumbVertical}\r\n            >\r\n                {children}\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomScrollbars;"],"sourceRoot":""}